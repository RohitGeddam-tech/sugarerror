{"version":3,"sources":["components/FormInputs/TextInput/TextInput.jsx","components/Notification/Notification.jsx","components/Common/Placeholder/ImagePlaceholder.jsx","components/Common/LazyImage/LazyImage.jsx","components/Common/ArticleWrapper/ArticleWrapper.jsx","pages/Prelogin/Home/Home.jsx","components/Modal/ConfirmationModal.jsx","components/Wrappers/SectionWrapper.jsx","components/Common/BookDemoModal/BookDemoModal.jsx"],"names":["TextInput","type","placeholder","value","name","onChange","onBlur","error","disabled","icon","className","hasGrayBack","showPass","maxLength","ref","useState","showPassword","setShowPassword","hasError","inputRef","useRef","autoComplete","onClick","hidePasswordEye","showPasswordEye","Notification","message","callback","notify","useCallback","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","info","warn","useEffect","ImagePlaceholder","width","height","console","log","style","backgroundColor","LazyImage","src","alt","debounce","offset","ArticleWrapper","image","heading","para","Home","actionObject","setActionObject","thankYouObject","setThankYouObject","show","notification","setNotification","window","scrollTo","SectionWrapper","sectionClass","ConfirmationModal","red","title","confirmAction","isModalOpen","handleSuccess","msg","cancelAction","isThankYouModal","BookDemoModal","heroImage","mobileImage","savePaper","saveTime","saveMoney","satisfiedCustomer","defaultState","method","data","url","redirect","history","modal","handleModalToggle","handleConfirmAction","a","push","fetchRequest","isAuth","body","res","status","json","errObj","Object","keys","length","confirmActionType","modalIsOpen","closeModal","children","getListData","first_name","last_name","lab_name","contact_number","city","preferred_time","initials","setInitials","errors","setError","btnLoading","setBtnLoading","postObj","moment","format","date","onHandleChange","key","obj","closeBtn","e","target","label","inputVariant","ampm","minDate","Date","maxDate","add","helperText","autoOk","loading"],"mappings":"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","file":"static/js/56.2ffd5b84.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { hidePasswordEye, showPasswordEye } from '../../../assets/icons';\n\nfunction TextInput({\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onBlur,\n  error,\n  disabled = false,\n  icon,\n  className = '',\n  hasGrayBack = false,\n  showPass,\n  maxLength,\n  ref,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  let hasError = error ? 'has-error' : '';\n  className += ` form-control `;\n  const inputRef = useRef(null);\n  return (\n    <>\n      <div className={`input-group text-input ${hasError} ${hasGrayBack ? 'background-gray' : ''}`}>\n        <input\n          type={(showPass ? (!showPassword ? 'password' : 'text') : type) || 'text'}\n          className={className}\n          name={name}\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          ref={ref || inputRef}\n          disabled={disabled}\n          onBlur={onBlur}\n          maxLength={maxLength}\n        />\n        <label className=\"input-placeholder\">{placeholder}</label>\n        {icon ? <span className=\"input-icon\">{icon}</span> : <></>}\n        {showPass ? (\n          <span className=\"input-icon cursor-pointer\" onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? hidePasswordEye : showPasswordEye}\n          </span>\n        ) : (\n          <></>\n        )}\n        {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n      </div>\n    </>\n  );\n}\nexport default TextInput;\n","import React, { useEffect, useCallback } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification({ message, type, callback }) {\n  const notify = useCallback(\n    type => {\n      switch (type) {\n        case 'success': {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          setTimeout(() => {\n            callback && callback();\n          }, 1500);\n          break;\n        }\n        case 'error':\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'info':\n          toast.info(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'warn':\n          toast.warn(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [callback, message],\n  );\n\n  useEffect(() => {\n    if (message && type) notify(type);\n  }, [message, notify, type]);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Notification;\n","import React from 'react';\n\nconst ImagePlaceholder = ({width, height}) => {\n  console.log(width, height )\n  return <div className=\"placeholder\" style={{ backgroundColor: 'gray', width, height }}></div>;\n};\n\nexport default ImagePlaceholder;\n","import LazyLoad from 'react-lazyload';\nimport React from 'react';\nimport ImagePlaceholder from '../Placeholder/ImagePlaceholder';\n\nconst LazyImage = ({ src = '', alt = '', className = '', height = 300, width = 300, debounce = 400, offset = [-100, 0] }) => {\n  return (\n    <div>\n      <LazyLoad offset={offset} placeholder={<ImagePlaceholder width={width+\"px\"} height={height+\"px\"}/>} debounce={debounce}>\n        <img src={src} alt={alt} className={className} width={width+\"px\"} height={height+\"px\"} />\n      </LazyLoad>\n    </div>\n  );\n};\nexport default LazyImage;\n","// @flow\nimport React from 'react';\nimport LazyImage from '../LazyImage/LazyImage';\nconst ArticleWrapper = ({ image = { src: '', className: '' }, heading, para }) => {\n  return (\n    <article className=\"blog-wrapper mb-3\">\n      <div className=\"blog-img-wrapper\">\n        <LazyImage src={image.src} className={`blog-img ${image.className}`} alt=\"Blog\" height={80} width={80}/>\n      </div>\n      <div className=\"blog-content\">\n        <p className=\"blog-heading\">{heading}</p>\n        <p className=\"blog-para\">{para}</p>\n      </div>\n    </article>\n  );\n};\nexport default ArticleWrapper;\n","import React, { useEffect, useState } from 'react';\nimport { SectionWrapper } from '../../../components/Wrappers/SectionWrapper';\nimport { ContainedButton } from '../../../components/Buttons/Button';\nimport { heroImage, saveMoney, mobileImage, saveTime, satisfiedCustomer, savePaper } from '../../../assets/index';\nimport BookDemoModal from '../../../components/Common/BookDemoModal/BookDemoModal';\nimport ArticleWrapper from '../../../components/Common/ArticleWrapper/ArticleWrapper';\nimport Notification from '../../../components/Notification/Notification';\nimport ConfirmationModal from '../../../components/Modal/ConfirmationModal';\nimport LazyImage from '../../../components/Common/LazyImage/LazyImage';\n\nfunction Home() {\n  const [actionObject, setActionObject] = useState();\n  const [thankYouObject, setThankYouObject] = useState();\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <>\n      <Notification {...notification} />\n      <SectionWrapper sectionClass=\"landing\">\n        {thankYouObject && <ConfirmationModal actionObject={thankYouObject}></ConfirmationModal>}\n        <div className=\"col-md-6\">\n          <div className=\"left-landing-section\">\n            <h2 className=\"landing-content-heading black-heading text-uppercase mb-4\">Welcome to Sugarlogger</h2>\n            <p className=\"landing-content-info mb-4\">\n              Sugarlogger is a one-stop solution for pathology labs to manage their businesses smoothly. All your billing details, patients\n              detail, and reports accessible at the click of your mouse. It also means happy customers because of the convenience for your\n              patients.\n            </p>\n            <div className=\"landing-content-btn mb-4\">\n              <ContainedButton\n                red\n                className=\"mr-3\"\n                onClick={() => {\n                  setActionObject({\n                    title: 'Schedule your free demo',\n                    confirmAction: 'Submit',\n                    isModalOpen: true,\n                    handleSuccess: () => {\n                      setThankYouObject({\n                        title: 'Thank you',\n                        msg: 'Thank you for your interest. Our team will get in touch with you soon.',\n                        cancelAction: 'Close',\n                        isModalOpen: true,\n                        isThankYouModal: true,\n                      });\n                    },\n                  });\n                }}\n              >\n                Book a Free Demo\n              </ContainedButton>\n              <BookDemoModal actionObject={actionObject} setNotification={setNotification}></BookDemoModal>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <div className=\"right-landing-section\">\n            <LazyImage src={heroImage} alt=\"Hero\" className=\"img-fluid landing-section-img\" />\n          </div>\n        </div>\n      </SectionWrapper>\n      <SectionWrapper sectionClass=\"why-sugarlogger\">\n        <div className=\"col-lg-4 order-lg-2\">\n          <div className=\"image-content-wrapper on-mobile-hide\">\n          <LazyImage src={mobileImage} alt=\"Mobile\" className=\"section-img\" width={275} height={500}/>\n          </div>\n        </div>\n        <div className=\"col-lg-8 order-lg-1\">\n          <div className=\"text-content-wrapper\">\n            <p className=\"section-top-hr\" />\n            <h3 className=\"content-heading red-heading mb-4\">Why Sugarlogger</h3>\n            <div className=\"content-extra mb-4\">\n              <ArticleWrapper\n                image={{ src: savePaper, className: 'save-paper-img' }}\n                heading=\"Saves Paper\"\n                para=\"No more unnecessary printing of reports unless required\"\n              ></ArticleWrapper>\n              <ArticleWrapper\n                image={{ src: saveTime, className: 'save-time-img' }}\n                heading=\"Saves Time\"\n                para=\"No more waiting around for patients to come and collect their reports.\"\n              ></ArticleWrapper>\n              <ArticleWrapper\n                image={{ src: saveMoney, className: 'save-money-img' }}\n                heading=\"Saves Money\"\n                para=\"No more expenditure on letterheads and papers for printing.\"\n              ></ArticleWrapper>\n              <ArticleWrapper\n                image={{ src: satisfiedCustomer, className: 'satisfied-customer-img' }}\n                heading=\"Satisfied Customer\"\n                para=\"Readily accessible patient reports on your mobile phone. No more storing of reports on a paper in files.\"\n              ></ArticleWrapper>\n            </div>\n          </div>\n        </div>\n      </SectionWrapper>\n      {/* <CustomerReview></CustomerReview> */}\n      {/* <BlogSection></BlogSection> */}\n    </>\n  );\n}\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { ContainedButton, OutlinedButton } from '../Buttons/Button';\nimport { CustomModal, ModalHeader, ModalBody, ModalFooter } from './Modal';\nimport { fetchRequest } from '../../utils/api';\n\nconst defaultState = {\n  title: '',\n  msg: '',\n  cancelAction: '',\n  confirmAction: '',\n  method: '',\n  data: null,\n  url: '',\n  handleSuccess: '',\n  isModalOpen: false,\n  isThankYouModal: false,\n};\n\nconst ConfirmationModal = ({ actionObject = defaultState }) => {\n  const {\n    title,\n    msg,\n    cancelAction,\n    confirmAction,\n    method,\n    data,\n    url,\n    handleSuccess,\n    isModalOpen,\n    redirect,\n    history,\n    setNotification,\n    isThankYouModal,\n  } = actionObject;\n  const [modal, handleModalToggle] = useState(isModalOpen);\n\n  useEffect(() => {\n    handleModalToggle(isModalOpen);\n  }, [actionObject, isModalOpen]);\n\n  const handleConfirmAction = async () => {\n    if (redirect) {\n      history.push(redirect);\n      return;\n    }\n    const res = await fetchRequest({ url, method, isAuth: true, body: data });\n    if (res && res.status === 200) {\n      const data = await res.json();\n      if (data.success) {\n        handleModalToggle(false);\n        handleSuccess(data);\n      }\n    } else {\n      const errObj = await res.json();\n      setNotification && setNotification({ show: false, message: '', type: '' });\n      res.status !== 422 &&\n        !Object.keys(errObj.error ? errObj.error : {}).length &&\n        errObj.message &&\n        setNotification && setNotification({ show: true, message: errObj.message, type: 'error' });\n      handleModalToggle(false);\n    }\n    return;\n  };\n\n  let confirmActionType = method === 'DELETE' ? 'red' : 'black';\n\n  return (\n    <CustomModal className=\"confirmation-modal\" modalIsOpen={modal} closeModal={handleModalToggle}>\n      <ModalHeader className=\"justify-content-center\">\n        <h2 className=\"black-heading\">{title}</h2>\n      </ModalHeader>\n      <ModalBody className=\"mb-4 text-center\">\n        <p>{msg}</p>\n      </ModalBody>\n      <ModalFooter className=\"justify-content-center\">\n        {isThankYouModal ? (\n          <ContainedButton red onClick={() => handleModalToggle(false)}>\n            {cancelAction}\n          </ContainedButton>\n        ) : (\n          <OutlinedButton className=\"close-modal-btn mr-2\" onClick={() => handleModalToggle(false)}>\n            {cancelAction}\n          </OutlinedButton>\n        )}\n        {confirmAction && (\n          <ContainedButton onClick={handleConfirmAction} {...{ [confirmActionType]: true }}>\n            {confirmAction}\n          </ContainedButton>\n        )}\n      </ModalFooter>\n    </CustomModal>\n  );\n};\n\nexport default ConfirmationModal;\n","// @flow\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from './Container';\n\nexport const SectionWrapper = ({ children, sectionClass }) => {\n  return (\n    <section className={`section-wrapper ${sectionClass}-section`}>\n      <Container>\n        <div className=\"row section-content-wrapper\">{children}</div>\n      </Container>\n    </section>\n  );\n};\n\nSectionWrapper.propTypes = {\n  sectionClass: PropTypes.string,\n};\n","import React, { useState, useEffect } from 'react';\nimport { CustomModal, ModalHeader, ModalBody, ModalFooter } from '../../Modal/Modal';\nimport TextInput from '../../FormInputs/TextInput/TextInput';\nimport { ContainedButton } from '../../Buttons/Button';\nimport { fetchRequest } from '../../../utils/api';\n// import DateInput from '../../FormInputs/DateInput/DateInput';\nimport moment from 'moment';\nimport { DateTimePicker } from '@material-ui/pickers';\n\nconst defaultState = {\n  title: '',\n  confirmAction: '',\n  method: '',\n  url: '',\n  handleSuccess: '',\n  isModalOpen: false,\n};\n\nconst BookDemoModal = ({ actionObject = defaultState, setNotification }) => {\n  const { title, confirmAction, isModalOpen, getListData, handleSuccess } = actionObject;\n\n  const [modal, handleModalToggle] = useState(isModalOpen);\n  const [initials, setInitials] = useState({\n    first_name: '',\n    last_name: '',\n    lab_name: '',\n    contact_number: '',\n    city: '',\n    preferred_time: null,\n  });\n  const [errors, setError] = useState({});\n  const [btnLoading, setBtnLoading] = useState(false);\n\n  useEffect(() => {\n    handleModalToggle(isModalOpen);\n  }, [actionObject, isModalOpen]);\n\n  const handleConfirmAction = async () => {\n    setError({});\n    setBtnLoading(true);\n    setNotification({ show: false, message: '', type: '' });\n    let url = '/book_demo';\n    let postObj = { ...initials, preferred_time: moment(initials.preferred_time).format('YYYY-MM-DD HH:mm:ss') };\n    const res = await fetchRequest({ url, method: 'POST', isAuth: false, body: postObj });\n    res && setBtnLoading(false);\n    if (res && res.status === 200) {\n      const data = await res.json();\n      if (data.success) {\n        handleModalToggle(false);\n        handleSuccess();\n        getListData && getListData({ date: moment() });\n      }\n    } else {\n      const errObj = await res.json();\n      setError({ ...errObj.errors });\n      res.status !== 422 &&\n        !Object.keys(errObj.error ? errObj.error : {}).length &&\n        errObj.message &&\n        setNotification({ show: true, message: errObj.message, type: 'error' });\n    }\n    return;\n  };\n\n  const onHandleChange = (value, key) => {\n    let obj = { ...initials };\n    obj[key] = value;\n    setInitials({ ...obj });\n  };\n\n  const { first_name, last_name, lab_name, contact_number, city, preferred_time } = initials;\n  return (\n    <CustomModal className=\"book-demo-modal\" modalIsOpen={modal} closeModal={handleModalToggle}>\n      <ModalHeader className=\"text-center\" closeBtn={true} closeModal={handleModalToggle}>\n        <h3 className=\"red-heading\">{title}</h3>\n      </ModalHeader>\n      <ModalBody className=\"mb-2\">\n        <form className=\"book-demo-form pl-2 pr-4\">\n          <div className=\"d-flex\">\n            <div className=\"form-group mr-3\">\n              <TextInput\n                placeholder=\"First Name\"\n                value={first_name}\n                onChange={e => onHandleChange(e.target.value, 'first_name')}\n                error={errors && errors['first_name']}\n              ></TextInput>\n            </div>\n            <div className=\"form-group\">\n              <TextInput\n                placeholder=\"Last Name\"\n                value={last_name}\n                onChange={e => onHandleChange(e.target.value, 'last_name')}\n                error={errors && errors['last_name']}\n              ></TextInput>\n            </div>\n          </div>\n          <div className=\"form-group mr-5\">\n            <TextInput\n              placeholder=\"Lab Name\"\n              value={lab_name}\n              onChange={e => onHandleChange(e.target.value, 'lab_name')}\n              error={errors && errors['lab_name']}\n            />\n          </div>\n          <div className=\"form-group mr-5\">\n            <TextInput\n              placeholder=\"Mobile Number\"\n              value={contact_number}\n              onChange={e => onHandleChange(e.target.value, 'contact_number')}\n              error={errors && errors['contact_number']}\n            />\n          </div>\n          <div className=\"form-group mr-5\">\n            <TextInput\n              placeholder=\"City\"\n              value={city}\n              onChange={e => onHandleChange(e.target.value, 'city')}\n              error={errors && errors['city']}\n            />\n          </div>\n          <div className=\"form-group mr-5\">\n            <DateTimePicker\n              label=\"Preferred Time to call*\"\n              inputVariant=\"outlined\"\n              ampm={true}\n              value={preferred_time || null}\n              minDate={new Date()}\n              maxDate={moment().add(1, 'months').format('MM/DD/YYYY')}\n              onChange={date => onHandleChange(date, 'preferred_time')}\n              error={errors && errors['preferred_time'] ? true : false}\n              helperText={errors && errors['preferred_time']}\n              format=\"dd-MM-yyyy hh:mm a\"\n              autoOk\n            />\n            {/* <DateInput\n              placeholder=\"Preferred Time to call\"\n              value={preferred_time}\n              showTime\n              onChange={date => onHandleChange(date, 'preferred_time')}\n              error={errors && errors['preferred_time']}\n            /> */}\n          </div>\n        </form>\n      </ModalBody>\n      <ModalFooter className=\"justify-content-center\">\n        <ContainedButton red className=\"book-demo-btn\" onClick={handleConfirmAction} loading={btnLoading} disabled={btnLoading}>\n          {confirmAction}\n        </ContainedButton>\n      </ModalFooter>\n    </CustomModal>\n  );\n};\n\nexport default BookDemoModal;\n"],"sourceRoot":""}