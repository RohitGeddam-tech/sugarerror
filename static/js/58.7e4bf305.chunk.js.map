{"version":3,"sources":["components/FormInputs/TextInput/TextInput.jsx","components/Notification/Notification.jsx","components/FormInputs/Checkbox/CheckboxInput.jsx","pages/Prelogin/Register/RegisterForm/RegisterForm.jsx","components/Wrappers/SectionWrapper.jsx","components/Common/PackageCard/PackageCard.jsx"],"names":["TextInput","type","placeholder","value","name","onChange","onBlur","error","disabled","icon","className","hasGrayBack","showPass","maxLength","ref","useState","showPassword","setShowPassword","hasError","inputRef","useRef","autoComplete","onClick","hidePasswordEye","showPasswordEye","Notification","message","callback","notify","useCallback","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","info","warn","useEffect","CheckboxInput","label","checked","blue","red","checkboxFillColor","CheckBoxBlue","dangerouslySetInnerHTML","__html","defaultState","lab_name","first_name","last_name","email","password","confirm_password","mobile","otp","is_otp_generated","accept_terms","defaultPackage","id","undefined","amount","validity","credits","description","trial_package","RegisterForm","props","initials","setInitials","errors","setError","formLoading","setFormLoading","selectedPackage","setSelectedPackage","registerDisabled","generateOtpDisabled","length","show","notification","setNotification","minimunLength","containMix","containNumber","validation","setvalidations","window","scrollTo","location","state","uuid","currentPackage","expiary","patients","details","isRed","href","onHandleChange","key","obj","validatePassword","generateOTP","resend","a","validateForm","Object","keys","url","postObj","trim","fetchRequest","method","isAuth","body","res","status","json","data","errObj","tempValidation","test","login","lab_id","username","token_type","access_token","refresh_token","localStorage","setItem","history","push","pathname","e","target","CheckedCircleSuccess","DoneIcon","black","lab_details","user_details","package","reg_status","_errors","indexOf","arr","split","index","role","sectionClass","link","to","SectionWrapper","children","PackageCard","showBtn","BtnFooter","showInfoIcon","isCustom","darkBlue"],"mappings":"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","file":"static/js/58.7e4bf305.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { hidePasswordEye, showPasswordEye } from '../../../assets/icons';\n\nfunction TextInput({\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onBlur,\n  error,\n  disabled = false,\n  icon,\n  className = '',\n  hasGrayBack = false,\n  showPass,\n  maxLength,\n  ref,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  let hasError = error ? 'has-error' : '';\n  className += ` form-control `;\n  const inputRef = useRef(null);\n  return (\n    <>\n      <div className={`input-group text-input ${hasError} ${hasGrayBack ? 'background-gray' : ''}`}>\n        <input\n          type={(showPass ? (!showPassword ? 'password' : 'text') : type) || 'text'}\n          className={className}\n          name={name}\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          ref={ref || inputRef}\n          disabled={disabled}\n          onBlur={onBlur}\n          maxLength={maxLength}\n        />\n        <label className=\"input-placeholder\">{placeholder}</label>\n        {icon ? <span className=\"input-icon\">{icon}</span> : <></>}\n        {showPass ? (\n          <span className=\"input-icon cursor-pointer\" onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? hidePasswordEye : showPasswordEye}\n          </span>\n        ) : (\n          <></>\n        )}\n        {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n      </div>\n    </>\n  );\n}\nexport default TextInput;\n","import React, { useEffect, useCallback } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification({ message, type, callback }) {\n  const notify = useCallback(\n    type => {\n      switch (type) {\n        case 'success': {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          setTimeout(() => {\n            callback && callback();\n          }, 1500);\n          break;\n        }\n        case 'error':\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'info':\n          toast.info(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'warn':\n          toast.warn(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [callback, message],\n  );\n\n  useEffect(() => {\n    if (message && type) notify(type);\n  }, [message, notify, type]);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Notification;\n","import React from 'react';\nimport { CheckBoxBlue } from '../../../assets/icons';\n\nfunction CheckboxInput({ name, label, value, checked = false, onClick, blue, red, className = '', disabled }) {\n  let checkboxFillColor = blue ? 'blue' : 'red';\n  return (\n    <div className={`d-flex checkbox-input ${className} pure-material-checkbox ${disabled ? 'disabled' : ''}`}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={onClick} //As it is an Input Element onChange method needed for any changeEvent.\n      />\n      <div\n        className={`mr-3 checkbox-checked ${checkboxFillColor}`}\n        onClick={() => {\n          if (disabled) return;\n          else onClick();\n        }}\n      >\n        {CheckBoxBlue}\n      </div>\n      <label dangerouslySetInnerHTML={{ __html: label }}></label>\n    </div>\n  );\n}\n\nexport default CheckboxInput;\n","import React, { useEffect, useState } from 'react';\nimport Container from '../../../../components/Wrappers/Container';\nimport { SectionWrapper } from '../../../../components/Wrappers/SectionWrapper';\nimport { ContainedButton, OutlinedButton } from '../../../../components/Buttons/Button';\nimport CheckboxInput from '../../../../components/FormInputs/Checkbox/CheckboxInput';\nimport TextInput from '../../../../components/FormInputs/TextInput/TextInput';\nimport PackageCard from '../../../../components/Common/PackageCard/PackageCard';\nimport { CheckedCircleSuccess, DoneIcon } from '../../../../assets/icons';\nimport { fetchRequest } from '../../../../utils/api';\nimport Notification from '../../../../components/Notification/Notification';\nimport { validateForm } from '../../../../utils/custom';\n\nconst defaultState = {\n  lab_name: '',\n  first_name: '',\n  last_name: '',\n  email: '',\n  password: '',\n  confirm_password: '',\n  mobile: '',\n  otp: '',\n  is_otp_generated: false,\n  accept_terms: '',\n};\n\nconst defaultPackage = {\n  id: undefined,\n  amount: '',\n  value: '',\n  validity: '',\n  credits: '',\n  description: '',\n  trial_package: '',\n};\n\nconst RegisterForm = props => {\n  const [initials, setInitials] = useState(defaultState);\n  const [errors, setError] = useState({});\n  const { lab_name, first_name, last_name, email, password, confirm_password, mobile, accept_terms, is_otp_generated, otp } = initials;\n  const [formLoading, setFormLoading] = useState(false);\n  const [selectedPackage, setSelectedPackage] = useState(defaultPackage);\n  const registerDisabled = is_otp_generated ? (selectedPackage && selectedPackage.id ? false : true) : true;\n  const generateOtpDisabled = (!first_name || !last_name || !email || mobile.length !== 10);\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n  const [validation, setvalidations] = useState([{ minimunLength: false }, { containMix: false }, { containNumber: false }]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    if (props.location.state && props.location.state.uuid) {\n      const { uuid, amount, label, type, credits, description, trial_package } = props.location.state;\n      let currentPackage = {\n        id: uuid,\n        // name: amount,   //Commenting this as this value is not been taken anywher\n        name: trial_package ? 'Free trial' : amount ? `₹ ${amount}` : '-',\n        value: label,\n        expiary: type,\n        patients: credits,\n        details: description,\n        isRed: trial_package,\n      };\n      setSelectedPackage({ ...currentPackage });\n    } else {\n      window.location.href = '/packages';\n    }\n    return;\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onHandleChange = (value, key) => {\n    let obj = { ...initials };\n    obj[key] = value;\n    if (key === 'password') validatePassword(value);\n    setInitials({ ...obj });\n  };\n\n  const generateOTP = async resend => {\n    setError({});\n    const errors = validateForm({ lab_name, first_name, last_name, email, mobile, password, confirm_password });\n    setError({ ...errors });\n    if (!Object.keys(errors).length) {\n      let url = resend ? '/resend_otp_for_registration' : '/otp_for_registration';\n      let postObj = {\n        mobile: initials.mobile.trim(),\n        first_name: initials.first_name.trim(),\n        last_name: initials.last_name.trim(),\n        email: initials.email.trim(),\n        type: 'pre_login_lab_registration',\n      };\n      const res = await fetchRequest({ url, method: 'POST', isAuth: false, body: postObj });\n      if (res && res.status === 200) {\n        const data = await res.json();\n        if (data.success) {\n          data.message && setNotification({ show: true, message: data.message, type: 'success' });\n          let obj = { ...initials };\n          obj['is_otp_generated'] = true;\n          setInitials({ ...obj });\n        }\n      } else {\n        const errObj = await res.json();\n        setError({ ...errObj.errors });\n        res.status !== 422 &&\n          !Object.keys(errObj.error ? errObj.error : {}).length &&\n          setNotification({ show: false, message: '', type: '' });\n        errObj.message && setNotification({ show: true, message: errObj.message, type: 'error' });\n      }\n      return;\n    }\n  };\n\n  const validatePassword = password => {\n    const tempValidation = { ...validation };\n    var mixExp = /(?=.*[a-z])(?=.*[A-Z])/,\n      numberExp = /(?=.*\\d)/;\n\n    tempValidation['minimunLength'] = password.length >= 8;\n\n    tempValidation['containMix'] = mixExp.test(password);\n\n    tempValidation['containNumber'] = numberExp.test(password);\n\n    setvalidations(tempValidation);\n  };\n\n  const registerLab = () => {\n    setError({});\n    setNotification({ show: false, message: '', type: '' });\n    setFormLoading(true);\n\n    const errors = validateForm({ lab_name, first_name, last_name, email, mobile, password, confirm_password });\n    setError({ ...errors });\n\n    if (!Object.keys(errors).length) {\n      let postObj = {\n        lab_details: {\n          lab_name,\n        },\n        user_details: {\n          first_name:first_name.trim(),\n          last_name:last_name.trim(),\n          email:email.trim(),\n          password:password.trim(),\n          confirm_password:confirm_password.trim(),\n          mobile,\n          otp\n        },\n        package: selectedPackage && selectedPackage.id,\n      };\n      (async () => {\n        const res = await fetchRequest({ url: '/lab_registration', method: 'POST', isAuth: false, body: postObj });\n        res && setFormLoading(false);\n        if (res && res.status === 200) {\n          const data = await res.json();\n          if (data.success) {\n            const { reg_status, uuid } = data.data;\n            setInitials(defaultState);\n            data.message && setNotification({ show: true, message: data.message, type: 'success' });\n            if (reg_status === 'incomplete_payment') {\n              login(uuid, mobile, password);\n            }\n          }\n        } else if (res && res.status === 422) {\n          const errObj = await res.json();\n          const _errors = {};\n          for (let key in { ...errObj.errors }) {\n            if (key.indexOf('.') !== -1) {\n              var arr = key.split('.');\n              var index = arr[1];\n              _errors[index] = { ...errObj.errors }[key];\n            } else {\n              _errors[key] = { ...errObj.errors }[key];\n            }\n          }\n          setError({ ..._errors });\n        } else if (res && res.status === 400) {\n          const { message } = await res.json();\n          setNotification({ show: true, message, type: 'error' });\n        }\n\n        return;\n      })();\n    } else {\n      setFormLoading(false);\n    }\n  };\n\n  const login = async (lab_id, mobile, password) => {\n    const res = await fetchRequest({ url: '/login', method: 'POST', body: { username: mobile || '', password: password || '' } });\n    if (res && res.status === 200) {\n      const { token_type, access_token, refresh_token } = await res.json();\n      localStorage.setItem('token', `${token_type} ${access_token}`);\n      localStorage.setItem('refresh_token', `${refresh_token}`);\n      props.history.push({ pathname: '/checkout', state: { lab_id } });\n    }\n  };\n\n  return (\n    <div className=\"register-section\">\n      <Notification {...notification} />\n      <div className=\"clip-image-wrapper register-wrapper\">\n        <div className=\"package-container-headings\">\n          <Container>\n            <h2 className=\"black-heading text-uppercase pt-5 pb-3\">CREATE YOUR SUGARLOGGER ACCOUNT</h2>\n          </Container>\n        </div>\n        <div className=\"register-form text-center\">\n          <Container>\n            <div className=\"row row-wrapper\">\n              <div className=\"col-md-8\">\n                <form>\n                  <div className=\"paper\">\n                    <p className=\"semi-bold text-left mb-3\">Please enter your details</p>\n                    <div className=\"row mb-4\">\n                      <div className=\"form-group col-md-6 col-12\">\n                        <TextInput\n                          placeholder=\"Lab Name *\"\n                          value={lab_name || ''}\n                          onChange={e => onHandleChange(e.target.value, 'lab_name')}\n                          error={errors && errors['lab_name']}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row mb-4\">\n                      <div className=\"form-group col-md-6 col-12\">\n                        <TextInput\n                          placeholder=\"Your First Name *\"\n                          value={first_name || ''}\n                          onChange={e => onHandleChange(e.target.value, 'first_name')}\n                          error={errors && errors['first_name']}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-6 col-12\">\n                        <TextInput\n                          placeholder=\"Last Name *\"\n                          value={last_name || ''}\n                          onChange={e => onHandleChange(e.target.value, 'last_name')}\n                          error={errors && errors['last_name']}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row mb-4\">\n                      <div className=\"form-group col-md-6 col-12\">\n                        <TextInput\n                          placeholder=\"Email ID *\"\n                          value={email || ''}\n                          onChange={e => onHandleChange(e.target.value, 'email')}\n                          error={errors && errors['email']}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row mb-4\">\n                      <div className=\"form-group col-md-6 col-12\">\n                        <TextInput\n                          placeholder=\"Set a password *\"\n                          value={password || ''}\n                          onChange={e => onHandleChange(e.target.value, 'password')}\n                          type=\"password\"\n                          error={errors && errors['password']}\n                          showPass\n                        />\n                      </div>\n                      <div className=\"form-group col-md-6 col-12\">\n                        <TextInput\n                          placeholder=\"Confirm Password *\"\n                          value={confirm_password || ''}\n                          onChange={e => onHandleChange(e.target.value, 'confirm_password')}\n                          type=\"password\"\n                          error={errors && errors['confirm_password']}\n                          showPass\n                        />\n                      </div>\n                    </div>\n                    <div className=\"ml-1 mb-4 d-flex password-validation\">\n                      Password should contain :\n                      <ul className=\"ml-3\">\n                        <li className={`d-flex ${validation.minimunLength ? 'validated' : ''}`}>\n                          <p className=\"validation-icon\">{CheckedCircleSuccess}</p>\n                          <p className=\"validation-text\">Minimum 8 Digits</p>\n                        </li>\n                        <li className={`d-flex ${validation.containMix ? 'validated' : ''}`}>\n                          <p className=\"validation-icon\">{CheckedCircleSuccess}</p>\n                          <p className=\"validation-text\">Mix of UPPERCASE and lowercase</p>\n                        </li>\n                        <li className={`d-flex ${validation.containNumber ? 'validated' : ''}`}>\n                          <p className=\"validation-icon\">{CheckedCircleSuccess}</p>\n                          <p className=\"validation-text\">A number (0-9)</p>\n                        </li>\n                      </ul>\n                    </div>\n                    <div className=\"row mb-4\">\n                      <div className=\"form-group col-md-6 col-12\">\n                        <TextInput\n                          placeholder=\"Mobile No. *\"\n                          value={mobile || ''}\n                          onChange={e => onHandleChange(e.target.value, 'mobile')}\n                          error={errors && errors['mobile']}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-6 col-12 text-left\">\n                        {is_otp_generated ? (\n                          <div className=\"d-flex align-items-end\">\n                            <OutlinedButton className=\"otp-sent\" disabled>\n                              <div className=\"d-flex\">\n                                <p className=\"mr-1 done-icon\">{DoneIcon}</p> OTP Sent\n                              </div>\n                            </OutlinedButton>\n                            <p className=\"resend-otp ml-1\">\n                              Didn’t receive code?{' '}\n                              <span onClick={() => generateOTP(1)} className=\"blue-link cursor-pointer\">\n                                Resend OTP\n                              </span>\n                            </p>\n                          </div>\n                        ) : (\n                          <ContainedButton black className=\"generate-otp-btn\" onClick={() => generateOTP(0)} disabled={generateOtpDisabled}>\n                            Generate OTP\n                          </ContainedButton>\n                        )}\n                      </div>\n                    </div>\n                    {is_otp_generated && (\n                      <div className=\"row mb-4\">\n                        <div className=\"form-group col-md-6 col-12\">\n                          <TextInput\n                            placeholder=\"Enter OTP\"\n                            value={otp || ''}\n                            onChange={e => onHandleChange(e.target.value, 'otp')}\n                            error={errors && errors['otp']}\n                          />\n                        </div>\n                      </div>\n                    )}\n                    <div className=\"row mb-2\">\n                      <div className=\"form-group col-md-6 col-12\">\n                        <CheckboxInput\n                          name=\"trial_package\"\n                          label=\"I accept the <a className='red-link' target='_blank' href='/terms-and-conditions'>Terms & Conditions</a>\"\n                          checked={accept_terms}\n                          blue\n                          value={accept_terms}\n                          onClick={() => onHandleChange(!accept_terms, 'accept_terms')}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <ContainedButton\n                      black\n                      onClick={registerLab}\n                      disabled={\n                        registerDisabled ||\n                        formLoading ||\n                        !(validation.minimunLength && validation.containMix && validation.containNumber) ||\n                        !accept_terms\n                      }\n                    >\n                      {formLoading ? (\n                        <div className=\"spinner-border\" role=\"status\">\n                          <span className=\"sr-only\">Loading...</span>\n                        </div>\n                      ) : (\n                        <div className=\"d-flex\">\n                          Register <span className=\"arrow-forward-icon ml-2\"></span>\n                        </div>\n                      )}\n                    </ContainedButton>\n                  </div>\n                </form>\n              </div>\n              <div className=\"col-md-3\">\n                {selectedPackage && selectedPackage.id ? (\n                  <>\n                    <p className=\"semi-bold text-left mb-2\">Your chosen package:</p>\n                    <PackageCard\n                      data={{\n                        ...selectedPackage,\n                      }}\n                      className={selectedPackage.trial_package ? 'active' : ''}\n                    />\n                    {/* <OutlinedButton onClick={() => props.history.push({ pathname: '/packages' })} className=\"mt-4 mr-3\">\n                      Change Package\n                    </OutlinedButton> */}\n                  </>\n                ) : (\n                  <>\n                    <p className=\"semi-bold\">No chosen package</p>\n                    <OutlinedButton onClick={() => props.history.push({ pathname: '/packages' })} className=\"mt-4\">\n                      Choose Package\n                    </OutlinedButton>\n                  </>\n                )}\n              </div>\n            </div>\n          </Container>\n        </div>\n      </div>\n      <SectionWrapper sectionClass=\"contact-us\">\n        <div className=\"col-md-12\">\n          <div className=\"contact-us\">\n            <div className=\"text-content-wrapper text-center\">\n              <p className=\"section-top-hr mx-auto\" />\n              <h3 className=\"content-heading white-heading mb-4\">Need help in registering yourself? Call us and we’ll help you.</h3>\n            </div>\n            <div className=\"btn-wrapper text-center\">\n              <ContainedButton red link to=\"/contact\">\n                Contact Us\n              </ContainedButton>\n            </div>\n          </div>\n        </div>\n      </SectionWrapper>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","// @flow\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from './Container';\n\nexport const SectionWrapper = ({ children, sectionClass }) => {\n  return (\n    <section className={`section-wrapper ${sectionClass}-section`}>\n      <Container>\n        <div className=\"row section-content-wrapper\">{children}</div>\n      </Container>\n    </section>\n  );\n};\n\nSectionWrapper.propTypes = {\n  sectionClass: PropTypes.string,\n};\n","import React from 'react';\nimport { ContainedButton } from '../../Buttons/Button';\n\nconst PackageCard = ({ data, className = '', showBtn, BtnFooter, showInfoIcon }) => {\n  className = `${className} ${data.isCustom ? 'custom-package' : ''} ${data.isRed ? 'red-content' : ''}`;\n  let expiary =\n    data.expiary !== ''\n      ? (data.expiary === 'monthly_package' && 'for 1 month') ||\n        (data.expiary === 'quarterly_package' && 'for 3 months') ||\n        (data.expiary === 'half_yearly_package' && 'for 6 months') ||\n        (data.expiary === 'yearly_package' && 'for 1 year') ||\n        (data.isCustom && `for ${data.expiary || 'x'} days`)\n      : '-';\n  return (\n    <div className={`card package-card text-center ${className}`}>\n      <div className=\"card-head\">\n        <span className=\"package-status\">{data.status}</span>\n        <p className=\"red-heading package-name\">{data.name ? data.name : '-'}</p>\n        <p className=\"package-expiary\">{expiary || '-'}</p>\n        <div className=\"package-patients d-flex justify-content-center\">\n          <p>{data.patients ? data.patients : '0'} patients</p>\n          {showInfoIcon && <p className=\"i-btn-icon ml-2\"></p>}\n        </div>\n      </div>\n      <div className=\"card-body text-center\">\n        <p>{data.details ? data.details : '---'}</p>\n      </div>\n      {BtnFooter ? (\n        <BtnFooter />\n      ) : (\n        showBtn && (\n          <div className=\"card-foot\">\n            {data.isCustom ? (\n              <ContainedButton darkBlue link to=\"/contact\">\n                Contact Us\n              </ContainedButton>\n            ) : (\n              <ContainedButton link to=\"/register\" black>\n                Get Started\n              </ContainedButton>\n            )}\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default PackageCard;\n"],"sourceRoot":""}