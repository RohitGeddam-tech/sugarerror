{"version":3,"sources":["pages/Login/LoginOptions.jsx","components/Wrappers/SectionWrapper.jsx"],"names":["LoginOptions","props","useContext","ProfileContext","profile","setProfileData","roles","localStorage","getItem","JSON","parse","data","first_name","last_name","useState","loading","setLoading","firstName","lastName","checkUserRoleCount","useCallback","a","fetchRequest","url","method","isAuth","profileRes","status","json","newRoles","length","getNewRoles","history","push","role","name","split","join","useEffect","window","scrollTo","setSelectedRole","item","setItem","stringify","selectedRole","sectionClass","className","map","ind","key","to","onClick","getInitials","formatted_name","lab_name","branch_name","SectionWrapper","children"],"mappings":"iPA2FeA,UAnFf,SAAsBC,GAAQ,IAAD,EACSC,qBAAWC,KAAvCC,EADmB,EACnBA,QAASC,EADU,EACVA,eACTC,GAAUF,IAAoBG,aAAaC,QAAQ,SAAWC,KAAKC,MAAMH,aAAaC,QAAQ,UAAY,KAA1GF,MAFmB,EAGQF,GAAWA,EAAQO,MAAS,GAAvDC,EAHmB,EAGnBA,WAAYC,EAHO,EAGPA,UAHO,EAIGC,oBAAS,GAJZ,mBAIpBC,EAJoB,KAIXC,EAJW,KAKrBC,EAAYV,aAAaC,QAAQ,cACjCU,EAAWX,aAAaC,QAAQ,aAEhCW,EAAqBC,sBAAW,sBAAC,oCAAAC,EAAA,6DACrCL,GAAW,GAD0B,SAEZM,uBAAa,CAAEC,IAAI,yCAA2CC,OAAQ,MAAOC,QAAQ,IAFzE,YAE/BC,EAF+B,SAGG,MAAtBA,EAAWC,OAHQ,wBAInCX,GAAW,GAJwB,SAKZU,EAAWE,OALC,gBAK3BjB,EAL2B,EAK3BA,KACAL,EAAUK,EAAVL,MACJuB,EAAW,GACXvB,GAASA,EAAMwB,SACjBD,EAAWE,YAAY,eAAKpB,KAE1BkB,GAAgC,IAApBA,EAASC,QACvB7B,EAAM+B,QAAQC,KAAd,WAAuBJ,EAAS,GAAGK,KAAKC,KAAKC,MAAM,KAAKC,KAAK,OAZ5B,4CAepC,IAEHC,qBAAU,WACRC,OAAOC,SAAS,EAAG,GACnBrB,MACC,CAACf,IAEJ,IAAMqC,EAAkBrB,uBACtB,SAAAsB,GACEnC,aAAaoC,QAAQ,UAAWD,EAAKR,KAAKC,KAAKC,MAAM,KAAKC,KAAK,MAC/D9B,aAAaoC,QAAQ,eAAgBlC,KAAKmC,UAAUF,IACpDrC,EAAe,CAAEwC,aAAa,eAAMH,KACpCzC,EAAM+B,QAAQC,KAAd,WAAuBS,EAAKR,KAAKC,KAAKC,MAAM,KAAKC,KAAK,SAExD,CAAChC,EAAgBJ,IAGnB,OACE,kBAAC,IAAD,CAAgB6C,aAAa,YAC3B,yBAAKC,UAAU,aACb,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,iBAAhB,aACA,yBAAKA,UAAU,eACZhC,GACC,yBAAKgC,UAAU,iBAAiBb,KAAK,UACnC,0BAAMa,UAAU,WAAhB,eAGHzC,GACCA,EAAM0C,KAAI,SAACN,EAAMO,GAAP,mBACR,yBAAKF,UAAU,oBAAoBG,IAAKD,GACtC,kBAAC,IAAD,CACEC,IAAKD,EACLE,GAAE,IACFC,QAAS,kBAAMX,EAAgBC,IAC/BK,UAAU,4DAEV,yBAAKA,UAAU,eACb,uBAAGA,UAAS,8BAAyBL,EAAKR,KAAKC,OAC5CkB,YAAY,GAAD,wBAAIpC,QAAJ,IAAIA,IAAaL,SAAjB,QAA+B,GAA/B,6BAAqCM,QAArC,IAAqCA,IAAYL,SAAjD,QAA8D,OAG9E,yBAAKkC,UAAU,kCACb,uBAAGA,UAAU,aAAb,2BAA6B9B,QAA7B,IAA6BA,IAAaL,SAA1C,QAAwD,GAAxD,6BAA8DM,QAA9D,IAA8DA,IAAYL,SAA1E,QAAuF,KACvF,uBAAGkC,UAAU,YAAYL,EAAKR,KAAKoB,gBACnC,yBAAKP,UAAU,UACZL,EAAKa,UAAY,uBAAGR,UAAU,YAAb,UAA4BL,EAAKa,SAAjC,MACjBb,EAAKc,aAAe,uBAAGT,UAAU,iBAAb,aAAoCL,EAAKc,2B,iCC7EtF,qDAIaC,EAAiB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUZ,EAAmB,EAAnBA,aACzC,OACE,2BAASC,UAAS,0BAAqBD,EAArB,aAChB,gBAAC,IAAD,KACE,uBAAKC,UAAU,+BAA+BW","file":"static/js/66.aecc5e41.chunk.js","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { SectionWrapper } from '../../components/Wrappers/SectionWrapper';\nimport { ProfileContext } from '../../context/context';\nimport { Link } from 'react-router-dom';\nimport { getInitials } from '../../utils/custom';\nimport { fetchRequest } from '../../utils/api';\nimport { getNewRoles } from '../../utils/custom';\n\nfunction LoginOptions(props) {\n  const { profile, setProfileData } = useContext(ProfileContext);\n  const { roles } = profile ? profile : localStorage.getItem('roles') ? JSON.parse(localStorage.getItem('roles')) : {};\n  const { first_name, last_name } = (profile && profile.data) || {};\n  const [loading, setLoading] = useState(false);\n  const firstName = localStorage.getItem('first_name');\n  const lastName = localStorage.getItem('last_name');\n  \n  const checkUserRoleCount = useCallback(async () => {\n    setLoading(true);\n    const profileRes = await fetchRequest({ url: `/user_profile?include=roles,lab_access`, method: 'GET', isAuth: true });\n    if (profileRes && profileRes.status === 200) {\n      setLoading(false);\n      const { data } = await profileRes.json();\n      const { roles } = data;\n      let newRoles = [];\n      if (roles && roles.length) {\n        newRoles = getNewRoles({ ...data });\n      }\n      if (newRoles && newRoles.length === 1) {\n        props.history.push(`/${newRoles[0].role.name.split('_').join('-')}`);\n      }\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    checkUserRoleCount();\n  }, [profile]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const setSelectedRole = useCallback(\n    item => {\n      localStorage.setItem('loginAs', item.role.name.split('_').join('-'));\n      localStorage.setItem('selectedRole', JSON.stringify(item));\n      setProfileData({ selectedRole: { ...item } });\n      props.history.push(`/${item.role.name.split('_').join('-')}`);\n    },\n    [setProfileData, props],\n  );\n\n  return (\n    <SectionWrapper sectionClass=\"login-as\">\n      <div className=\"col-md-12\">\n        <div className=\"content-wrapper\">\n          <span className=\"black-heading\">Login as:</span>\n          <div className=\"btn-wrapper\">\n            {loading && (\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            )}\n            {roles &&\n              roles.map((item, ind) => (\n                <div className=\"flex-column w-100\" key={ind}>\n                  <Link\n                    key={ind}\n                    to={`/`}\n                    onClick={() => setSelectedRole(item)}\n                    className=\"row login-option d-flex align-items-center mb-3 p-2 mx-0\"\n                  >\n                    <div className=\"col-3 w-100\">\n                      <p className={`user-img small role_${item.role.name}`}>\n                        {getInitials(`${firstName ?? first_name ?? ''} ${lastName ?? last_name ?? ''}`)}\n                      </p>\n                    </div>\n                    <div className=\"col-9 w-100 text-left login-as\">\n                      <p className=\"user-name\">{`${firstName ?? first_name ?? ''} ${lastName ?? last_name ?? ''}`}</p>\n                      <p className=\"lab-name\">{item.role.formatted_name}</p>\n                      <div className=\"d-flex\">\n                        {item.lab_name && <p className=\"lab-name\">{`${item.lab_name} `}</p>}\n                        {item.branch_name && <p className=\"lab-name ml-1\">{` - ${item.branch_name}`}</p>}\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </SectionWrapper>\n  );\n}\n\nexport default LoginOptions;\n","// @flow\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from './Container';\n\nexport const SectionWrapper = ({ children, sectionClass }) => {\n  return (\n    <section className={`section-wrapper ${sectionClass}-section`}>\n      <Container>\n        <div className=\"row section-content-wrapper\">{children}</div>\n      </Container>\n    </section>\n  );\n};\n\nSectionWrapper.propTypes = {\n  sectionClass: PropTypes.string,\n};\n"],"sourceRoot":""}