{"version":3,"sources":["components/FormInputs/TextInput/TextInput.jsx","components/FormInputs/SelectInput/SelectInput.jsx","components/Notification/Notification.jsx","components/Common/Card/Card.jsx","hooks/useDebounce.js","components/Common/SearchBox/SearchBox.jsx","pages/LabDetails/MainOfficeDetails/MainOfficeEdit.jsx","components/Modal/ConfirmationModal.jsx","components/Loader/Loader.jsx"],"names":["TextInput","type","placeholder","value","name","onChange","onBlur","error","disabled","icon","className","hasGrayBack","showPass","maxLength","ref","useState","showPassword","setShowPassword","hasError","inputRef","useRef","autoComplete","onClick","hidePasswordEye","showPasswordEye","SelectInput","options","isMulti","hideSelectedOptions","isClearable","isLoading","hidePlaceholder","defaultValue","isSearchable","parentClass","parentRef","classNamePrefix","onFocus","current","classList","add","remove","removeSelected","isDisabled","Notification","message","callback","notify","useCallback","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","info","warn","useEffect","Card","title","children","list","cardType","centerHeader","cardName","searchBox","onSelectInputChange","input","length","role","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","memo","setFilter","filter","searchTerm","setSearchTerm","debouncedSearchTerm","search","current_page","e","target","Search","defaultState","address_line_one","address_line_two","pincode","city","state","mobile","email","Edit","props","useContext","ProfileContext","profile","setProfileData","labId","setLabId","actionObject","setActionObject","mainOfficeDetails","setMainOfficeDetails","unchangedData","setUnchangedData","errors","setErrors","btnLoading","setBtnLoading","loading","setLoading","show","notification","setNotification","getLabGroupDetails","lab_id","a","fetchRequest","url","method","isAuth","res","status","json","data","selectedRole","uuid","handleChange","key","obj","errObj","saveBranch","body","getUpdatedRoleData","updatedRoleData","localStorage","setItem","JSON","stringify","history","push","Object","keys","handleGoBack","msg","cancelAction","confirmAction","redirect","isModalOpen","LongBackArrow","darkBlue","handleSuccess","isThankYouModal","ConfirmationModal","modal","handleModalToggle","handleConfirmAction","confirmActionType","modalIsOpen","closeModal","red","Loader"],"mappings":"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","file":"static/js/53.1833cf7e.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { hidePasswordEye, showPasswordEye } from '../../../assets/icons';\n\nfunction TextInput({\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onBlur,\n  error,\n  disabled = false,\n  icon,\n  className = '',\n  hasGrayBack = false,\n  showPass,\n  maxLength,\n  ref,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  let hasError = error ? 'has-error' : '';\n  className += ` form-control `;\n  const inputRef = useRef(null);\n  return (\n    <>\n      <div className={`input-group text-input ${hasError} ${hasGrayBack ? 'background-gray' : ''}`}>\n        <input\n          type={(showPass ? (!showPassword ? 'password' : 'text') : type) || 'text'}\n          className={className}\n          name={name}\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          ref={ref || inputRef}\n          disabled={disabled}\n          onBlur={onBlur}\n          maxLength={maxLength}\n        />\n        <label className=\"input-placeholder\">{placeholder}</label>\n        {icon ? <span className=\"input-icon\">{icon}</span> : <></>}\n        {showPass ? (\n          <span className=\"input-icon cursor-pointer\" onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? hidePasswordEye : showPasswordEye}\n          </span>\n        ) : (\n          <></>\n        )}\n        {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n      </div>\n    </>\n  );\n}\nexport default TextInput;\n","import React, { useRef } from 'react';\nimport Select from 'react-select';\n\nconst SelectInput = ({\n  className = '',\n  options = [],\n  value,\n  onChange,\n  placeholder,\n  error,\n  hasGrayBack = false,\n  isMulti = false,\n  hideSelectedOptions = true,\n  isClearable = true,\n  disabled,\n  isLoading,\n  hidePlaceholder,\n  defaultValue,\n  isSearchable = false,\n}) => {\n  let parentClass = `input-group select-control-input ${error ? 'has-error' : ''} ${hasGrayBack ? 'background-gray' : ''} ${\n    value && value.value ? 'has-value' : ''\n  } ${hidePlaceholder ? 'hide-placeholder' : ''} ${disabled ? 'cursor-notAllowed' : ''}`;\n\n  className += ` select-input `;\n  const parentRef = useRef(null);\n  return (\n    <>\n      <div className={parentClass} ref={parentRef}>\n        <Select\n          value={value}\n          onChange={onChange}\n          options={options}\n          className={className}\n          classNamePrefix=\"select-input\"\n          placeholder={<div>{''}</div>}\n          onFocus={() => parentRef.current.classList.add('select-focused')}\n          onBlur={() => parentRef.current.classList.remove('select-focused')}\n          isClearable={isClearable}\n          isMulti={isMulti}\n          removeSelected={false}\n          defaultValue={defaultValue}\n          isDisabled={disabled}\n          isLoading={isLoading}\n          isSearchable={isSearchable}\n        />\n        <label className=\"select-placeholder\">{placeholder}</label>\n      </div>\n      {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n    </>\n  );\n};\nexport default SelectInput;\n","import React, { useEffect, useCallback } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification({ message, type, callback }) {\n  const notify = useCallback(\n    type => {\n      switch (type) {\n        case 'success': {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          setTimeout(() => {\n            callback && callback();\n          }, 1500);\n          break;\n        }\n        case 'error':\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'info':\n          toast.info(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'warn':\n          toast.warn(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [callback, message],\n  );\n\n  useEffect(() => {\n    if (message && type) notify(type);\n  }, [message, notify, type]);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '../../FormInputs/SelectInput/SelectInput';\nimport SearchBox from '../SearchBox/SearchBox';\n\nconst Card = ({\n  title,\n  children,\n  list = [],\n  value,\n  cardType = 'table',\n  centerHeader = false,\n  cardName = '',\n  className = '',\n  searchBox,\n  onSelectInputChange,\n  isLoading = false,\n  input,\n}) => {\n  return (\n    <div className={`paper paper-card ${cardType === 'number' ? 'number-card' : ''} ${cardName} ${className}`}>\n      <div className={`content-header d-flex align-items-baseline ${centerHeader ? 'justify-content-center' : 'justify-content-between'}`}>\n        <p className=\"title\">{title}</p>\n        {input ? (\n          input\n        ) : list.length ? (\n          <div className=\"select-wrapper\">\n            <SelectInput\n              options={list}\n              value={value}\n              onChange={value => onSelectInputChange(value)}\n              isClearable={false}\n              isSearchable={false}\n            />\n          </div>\n        ) : (\n          <></>\n        )}\n        {searchBox ? <SearchBox /> : <></>}\n      </div>\n      {isLoading ? (\n        <div className=\"text-center\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : cardType === 'number' ? (\n        <div className=\"count font-weight-bold\">{children}</div>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\nCard.propTypes = { title: PropTypes.string, content: PropTypes.string, list: PropTypes.array };\n\nexport default Card;\n","import { useEffect, useState } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { memo, useEffect, useState } from 'react';\nimport { Search } from '../../../assets/icons';\nimport useDebounce from '../../../hooks/useDebounce';\nimport TextInput from '../../FormInputs/TextInput/TextInput';\n\nconst SearchBox = ({ setFilter, filter, className = '', placeholder }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  // const [results, setResults] = useState([]);\n  // const [isSearching, setIsSearching] = useState(false);\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(\n    () => {\n      if (setFilter) {\n        if (debouncedSearchTerm) {\n          setFilter({ ...filter, search: debouncedSearchTerm, current_page: 1 });\n          // setIsSearching(true);\n          // searchCharacters(debouncedSearchTerm).then(results => {\n          //   setIsSearching(false);\n          //   setResults(results);\n          // });\n        } else {\n          setFilter({ ...filter, search: '',current_page: 1 });\n          // setResults([]);\n        }\n      }\n    },\n    [debouncedSearchTerm], // eslint-disable-line react-hooks/exhaustive-deps\n    // Only call effect if debounced search term changes\n  );\n\n  return (\n    <div className={`form-group search-input-wrapper ${className}`}>\n      <TextInput\n        placeholder={placeholder}\n        value={searchTerm || ''} // Its taking null if no value is passed. Hence empty string passed\n        onChange={e => setSearchTerm(e.target.value)}\n        icon={Search}\n        className=\"search-input\"\n      ></TextInput>\n    </div>\n  );\n};\n\nexport default memo(SearchBox);\n","import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport Card from '../../../components/Common/Card/Card';\nimport TextInput from '../../../components/FormInputs/TextInput/TextInput';\nimport { OutlinedButton, ContainedButton } from '../../../components/Buttons/Button';\nimport { LongBackArrow } from '../../../assets/icons';\nimport { fetchRequest } from '../../../utils/api';\nimport { ProfileContext } from '../../../context/context';\nimport ConfirmationModal from '../../../components/Modal/ConfirmationModal';\nimport Loader from '../../../components/Loader/Loader';\nimport Notification from '../../../components/Notification/Notification';\nimport { getUpdatedRoleData } from '../../../utils/custom';\n\nconst defaultState = {\n  name: '',\n  address_line_one: '',\n  address_line_two: '',\n  pincode: '',\n  city: '',\n  state: '',\n  mobile: '',\n  email: '',\n};\n\nfunction Edit(props) {\n  const { profile, setProfileData } = useContext(ProfileContext);\n  const [labId, setLabId] = useState(); //lab_group uuid from profile api\n  const [actionObject, setActionObject] = useState({});\n  const [mainOfficeDetails, setMainOfficeDetails] = useState({ ...defaultState });\n  const [unchangedData, setUnchangedData] = useState({ ...defaultState });\n  const [errors, setErrors] = useState({});\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n\n  const getLabGroupDetails = useCallback(async lab_id => {\n    setLoading(true);\n    const res = await fetchRequest({ url: `/lab_group/${lab_id}`, method: 'GET', isAuth: true });\n    if (res && res.status === 200) {\n      setLoading(false);\n      const { data } = await res.json();\n      setMainOfficeDetails(data);\n      setUnchangedData(data);\n      return data;\n    }\n    return;\n  }, []);\n\n  useEffect(() => {\n    if (!labId && profile?.selectedRole?.uuid) {\n      setLabId(profile.selectedRole.uuid);\n      getLabGroupDetails(profile.selectedRole.uuid);\n    }\n  }, [profile, labId, getLabGroupDetails, setLabId]);\n\n  const handleChange = (value, key) => {\n    let obj = { ...mainOfficeDetails };\n    obj[key] = value;\n    if (errors[key] && errors[key].length) {\n      let errObj = { ...errors };\n      errObj[key] = null;\n      setErrors(errObj);\n    }\n\n    setMainOfficeDetails({ ...obj });\n  };\n\n  const saveBranch = async () => {\n    setBtnLoading(true);\n    setNotification({ show: false, message: '', type: '' });\n    const body = {\n      ...mainOfficeDetails,\n    };\n    const res = await fetchRequest({ url: `/lab_group/${labId}`, method: 'PUT', isAuth: true, body });\n    res && setBtnLoading(false);\n\n    if (res && res.status === 200) {\n      const { data, message } = await res.json();\n      const updatedRoleData = await getUpdatedRoleData(profile.selectedRole.uuid);\n      setProfileData({ selectedRole: updatedRoleData });\n      localStorage.setItem('selectedRole', JSON.stringify(updatedRoleData));\n\n      setNotification({\n        show: true,\n        message,\n        type: 'success',\n        callback: function () {\n          props.history.push('/lab-admin/setting/lab-details/main-office-details');\n        },\n      });\n      return data;\n    } else if (res && res.status === 422) {\n      const errObj = await res.json();\n      setErrors({ ...errObj.errors });\n      res.status !== 422 &&\n        !Object.keys(errObj.error ? errObj.error : {}).length &&\n        errObj.message &&\n        setNotification({ show: true, message: errObj.message, type: 'error' });\n    }\n  };\n\n  const handleGoBack = useCallback(\n    () => {\n      if(unchangedData !== mainOfficeDetails)\n        setActionObject({\n          title: 'Unsaved Changes',\n          msg: 'You have not saved the changes made. Are you sure you want to discard the changes?',\n          cancelAction: 'Close',\n          confirmAction: 'Yes, discard changes',\n          redirect: '/lab-admin/setting/lab-details/main-office-details',\n          isModalOpen: true,\n          ...props,\n        });\n      else props.history.push('/lab-admin/setting/lab-details/main-office-details');\n    },\n    [],\n  )\n\n  const { name, address_line_one, address_line_two, pincode, city, state, mobile, email } = mainOfficeDetails;\n  return (\n    <div className=\"add-branch-wrapper\">\n      <Loader loading={loading} />\n      <Notification {...notification} />\n      {!loading && (\n        <>\n          <Card cardName=\"add-branch-card\">\n            <form>\n              <div className=\"row\">\n                <div className=\"form-group col-5 mb-3\">\n                  <TextInput\n                    value={name || ''}\n                    onChange={e => handleChange(e.target.value, 'name')}\n                    error={errors && errors['name']}\n                    placeholder=\"Office Name*\"\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group col-6 mb-3\">\n                  <TextInput\n                    value={address_line_one || ''}\n                    onChange={e => handleChange(e.target.value, 'address_line_one')}\n                    error={errors && errors['address_line_one']}\n                    placeholder=\"Address Line 1*\"\n                  />\n                </div>\n                <div className=\"form-group col-6 mb-3\">\n                  <TextInput\n                    value={address_line_two || ''}\n                    onChange={e => handleChange(e.target.value, 'address_line_two')}\n                    error={errors && errors['address_line_two']}\n                    placeholder=\"Address Line 2*\"\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group col-4 mb-3\">\n                  <TextInput\n                    value={pincode || ''}\n                    onChange={e => handleChange(e.target.value, 'pincode')}\n                    error={errors && errors['pincode']}\n                    placeholder=\"Pincode*\"\n                  />\n                </div>\n                <div className=\"form-group col-4 mb-3\">\n                  <TextInput\n                    value={city || ''}\n                    onChange={e => handleChange(e.target.value, 'city')}\n                    error={errors && errors['city']}\n                    placeholder=\"City*\"\n                  />\n                </div>\n                <div className=\"form-group col-4 mb-3\">\n                  <TextInput\n                    value={state || ''}\n                    onChange={e => handleChange(e.target.value, 'state')}\n                    error={errors && errors['state']}\n                    placeholder=\"State*\"\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group col-4 mb-3\">\n                  <TextInput\n                    value={mobile || ''}\n                    onChange={e => handleChange(e.target.value, 'mobile')}\n                    error={errors && errors['mobile']}\n                    placeholder=\"Mobile No*\"\n                  />\n                </div>\n                <div className=\"form-group col-4 mb-3\">\n                  <TextInput\n                    value={email || ''}\n                    onChange={e => handleChange(e.target.value, 'email')}\n                    error={errors && errors['email']}\n                    placeholder=\"Email*\"\n                  />\n                </div>\n              </div>\n            </form>\n          </Card>\n          <div className=\"d-flex justify-content-center\">\n            <OutlinedButton\n              onClick={handleGoBack}\n              disabled={btnLoading}\n            >\n              <div className=\"d-flex align-items-center\">\n                {LongBackArrow}\n                <p className=\"ml-1\">Go Back</p>\n              </div>\n            </OutlinedButton>\n            <ContainedButton darkBlue className=\"ml-3\" onClick={saveBranch} disabled={btnLoading} loading={btnLoading}>\n              Save\n            </ContainedButton>\n          </div>\n        </>\n      )}\n      <ConfirmationModal actionObject={actionObject}></ConfirmationModal>\n    </div>\n  );\n}\nexport default Edit;\n","import React, { useState, useEffect } from 'react';\nimport { ContainedButton, OutlinedButton } from '../Buttons/Button';\nimport { CustomModal, ModalHeader, ModalBody, ModalFooter } from './Modal';\nimport { fetchRequest } from '../../utils/api';\n\nconst defaultState = {\n  title: '',\n  msg: '',\n  cancelAction: '',\n  confirmAction: '',\n  method: '',\n  data: null,\n  url: '',\n  handleSuccess: '',\n  isModalOpen: false,\n  isThankYouModal: false,\n};\n\nconst ConfirmationModal = ({ actionObject = defaultState }) => {\n  const {\n    title,\n    msg,\n    cancelAction,\n    confirmAction,\n    method,\n    data,\n    url,\n    handleSuccess,\n    isModalOpen,\n    redirect,\n    history,\n    setNotification,\n    isThankYouModal,\n  } = actionObject;\n  const [modal, handleModalToggle] = useState(isModalOpen);\n\n  useEffect(() => {\n    handleModalToggle(isModalOpen);\n  }, [actionObject, isModalOpen]);\n\n  const handleConfirmAction = async () => {\n    if (redirect) {\n      history.push(redirect);\n      return;\n    }\n    const res = await fetchRequest({ url, method, isAuth: true, body: data });\n    if (res && res.status === 200) {\n      const data = await res.json();\n      if (data.success) {\n        handleModalToggle(false);\n        handleSuccess(data);\n      }\n    } else {\n      const errObj = await res.json();\n      setNotification && setNotification({ show: false, message: '', type: '' });\n      res.status !== 422 &&\n        !Object.keys(errObj.error ? errObj.error : {}).length &&\n        errObj.message &&\n        setNotification && setNotification({ show: true, message: errObj.message, type: 'error' });\n      handleModalToggle(false);\n    }\n    return;\n  };\n\n  let confirmActionType = method === 'DELETE' ? 'red' : 'black';\n\n  return (\n    <CustomModal className=\"confirmation-modal\" modalIsOpen={modal} closeModal={handleModalToggle}>\n      <ModalHeader className=\"justify-content-center\">\n        <h2 className=\"black-heading\">{title}</h2>\n      </ModalHeader>\n      <ModalBody className=\"mb-4 text-center\">\n        <p>{msg}</p>\n      </ModalBody>\n      <ModalFooter className=\"justify-content-center\">\n        {isThankYouModal ? (\n          <ContainedButton red onClick={() => handleModalToggle(false)}>\n            {cancelAction}\n          </ContainedButton>\n        ) : (\n          <OutlinedButton className=\"close-modal-btn mr-2\" onClick={() => handleModalToggle(false)}>\n            {cancelAction}\n          </OutlinedButton>\n        )}\n        {confirmAction && (\n          <ContainedButton onClick={handleConfirmAction} {...{ [confirmActionType]: true }}>\n            {confirmAction}\n          </ContainedButton>\n        )}\n      </ModalFooter>\n    </CustomModal>\n  );\n};\n\nexport default ConfirmationModal;\n","import React from 'react';\n\nconst Loader = ({ loading = false }) => {\n  return (\n    loading && (\n      <div className=\"loader-wrapper d-flex justify-content-center w-100\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default Loader;\n"],"sourceRoot":""}