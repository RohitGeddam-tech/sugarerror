{"version":3,"sources":["components/FormInputs/TextInput/TextInput.jsx","components/FormInputs/SelectInput/SelectInput.jsx","components/Notification/Notification.jsx","components/Common/Card/Card.jsx","hooks/useDebounce.js","components/Common/SearchBox/SearchBox.jsx","components/FormInputs/Checkbox/CheckboxInput.jsx","pages/MyProfile/Details.jsx","pages/MyProfile/DetailsModal.jsx","pages/MyProfile/MyProfile.jsx","components/FormInputs/RadioButton/RadioButton.jsx","components/Modal/ResetPasswordModal.jsx"],"names":["TextInput","type","placeholder","value","name","onChange","onBlur","error","disabled","icon","className","hasGrayBack","showPass","maxLength","ref","useState","showPassword","setShowPassword","hasError","inputRef","useRef","autoComplete","onClick","hidePasswordEye","showPasswordEye","SelectInput","options","isMulti","hideSelectedOptions","isClearable","isLoading","hidePlaceholder","defaultValue","isSearchable","parentClass","parentRef","classNamePrefix","onFocus","current","classList","add","remove","removeSelected","isDisabled","Notification","message","callback","notify","useCallback","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","info","warn","useEffect","Card","title","children","list","cardType","centerHeader","cardName","searchBox","onSelectInputChange","input","length","role","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","memo","setFilter","filter","searchTerm","setSearchTerm","debouncedSearchTerm","search","current_page","e","target","Search","CheckboxInput","label","checked","blue","red","checkboxFillColor","CheckBoxBlue","dangerouslySetInnerHTML","__html","Details","form","api","dataToSave","setErrors","setNotification","noEdit","id","isEdit","setEdit","useContext","ProfileContext","profile","setProfileData","btnLoading","setBtnLoading","handleSubmit","a","show","preventDefault","fetchRequest","url","method","isAuth","body","res","status","json","data","localStorage","setItem","first_name","selectedRole","last_name","errObj","errors","Object","keys","black","CloseDark","lightBlue","color","withIcon","loading","DoneIconWhite","x","EditIcon","defaultState","isModalOpen","field","DetailsModal","actionObject","modal","handleModalToggle","is_otp_generated","otp","initials","setInitials","handleConfirmAction","postObj","generateOTP","resend","obj","onHandleChange","key","modalIsOpen","closeModal","Modal","MyProfile","setShowPass","current_password","new_password","confirm_password","notification","setModal","resendPassModal","toggleResendPassModal","changePassword","useLocation","state","password","mobile","email","to","ResetPasswordModal","RadioButton","CheckedRadioButtonIcon","RadioButtonIcon","profileContext","sendTo","setSendTo","mobileToSendLink","setMobileToSendLink","handleForgetPass","send_to"],"mappings":"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","file":"static/js/6.bc2c2df8.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { hidePasswordEye, showPasswordEye } from '../../../assets/icons';\n\nfunction TextInput({\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onBlur,\n  error,\n  disabled = false,\n  icon,\n  className = '',\n  hasGrayBack = false,\n  showPass,\n  maxLength,\n  ref,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  let hasError = error ? 'has-error' : '';\n  className += ` form-control `;\n  const inputRef = useRef(null);\n  return (\n    <>\n      <div className={`input-group text-input ${hasError} ${hasGrayBack ? 'background-gray' : ''}`}>\n        <input\n          type={(showPass ? (!showPassword ? 'password' : 'text') : type) || 'text'}\n          className={className}\n          name={name}\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          ref={ref || inputRef}\n          disabled={disabled}\n          onBlur={onBlur}\n          maxLength={maxLength}\n        />\n        <label className=\"input-placeholder\">{placeholder}</label>\n        {icon ? <span className=\"input-icon\">{icon}</span> : <></>}\n        {showPass ? (\n          <span className=\"input-icon cursor-pointer\" onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? hidePasswordEye : showPasswordEye}\n          </span>\n        ) : (\n          <></>\n        )}\n        {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n      </div>\n    </>\n  );\n}\nexport default TextInput;\n","import React, { useRef } from 'react';\nimport Select from 'react-select';\n\nconst SelectInput = ({\n  className = '',\n  options = [],\n  value,\n  onChange,\n  placeholder,\n  error,\n  hasGrayBack = false,\n  isMulti = false,\n  hideSelectedOptions = true,\n  isClearable = true,\n  disabled,\n  isLoading,\n  hidePlaceholder,\n  defaultValue,\n  isSearchable = false,\n}) => {\n  let parentClass = `input-group select-control-input ${error ? 'has-error' : ''} ${hasGrayBack ? 'background-gray' : ''} ${\n    value && value.value ? 'has-value' : ''\n  } ${hidePlaceholder ? 'hide-placeholder' : ''} ${disabled ? 'cursor-notAllowed' : ''}`;\n\n  className += ` select-input `;\n  const parentRef = useRef(null);\n  return (\n    <>\n      <div className={parentClass} ref={parentRef}>\n        <Select\n          value={value}\n          onChange={onChange}\n          options={options}\n          className={className}\n          classNamePrefix=\"select-input\"\n          placeholder={<div>{''}</div>}\n          onFocus={() => parentRef.current.classList.add('select-focused')}\n          onBlur={() => parentRef.current.classList.remove('select-focused')}\n          isClearable={isClearable}\n          isMulti={isMulti}\n          removeSelected={false}\n          defaultValue={defaultValue}\n          isDisabled={disabled}\n          isLoading={isLoading}\n          isSearchable={isSearchable}\n        />\n        <label className=\"select-placeholder\">{placeholder}</label>\n      </div>\n      {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n    </>\n  );\n};\nexport default SelectInput;\n","import React, { useEffect, useCallback } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification({ message, type, callback }) {\n  const notify = useCallback(\n    type => {\n      switch (type) {\n        case 'success': {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          setTimeout(() => {\n            callback && callback();\n          }, 1500);\n          break;\n        }\n        case 'error':\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'info':\n          toast.info(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'warn':\n          toast.warn(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [callback, message],\n  );\n\n  useEffect(() => {\n    if (message && type) notify(type);\n  }, [message, notify, type]);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '../../FormInputs/SelectInput/SelectInput';\nimport SearchBox from '../SearchBox/SearchBox';\n\nconst Card = ({\n  title,\n  children,\n  list = [],\n  value,\n  cardType = 'table',\n  centerHeader = false,\n  cardName = '',\n  className = '',\n  searchBox,\n  onSelectInputChange,\n  isLoading = false,\n  input,\n}) => {\n  return (\n    <div className={`paper paper-card ${cardType === 'number' ? 'number-card' : ''} ${cardName} ${className}`}>\n      <div className={`content-header d-flex align-items-baseline ${centerHeader ? 'justify-content-center' : 'justify-content-between'}`}>\n        <p className=\"title\">{title}</p>\n        {input ? (\n          input\n        ) : list.length ? (\n          <div className=\"select-wrapper\">\n            <SelectInput\n              options={list}\n              value={value}\n              onChange={value => onSelectInputChange(value)}\n              isClearable={false}\n              isSearchable={false}\n            />\n          </div>\n        ) : (\n          <></>\n        )}\n        {searchBox ? <SearchBox /> : <></>}\n      </div>\n      {isLoading ? (\n        <div className=\"text-center\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : cardType === 'number' ? (\n        <div className=\"count font-weight-bold\">{children}</div>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\nCard.propTypes = { title: PropTypes.string, content: PropTypes.string, list: PropTypes.array };\n\nexport default Card;\n","import { useEffect, useState } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { memo, useEffect, useState } from 'react';\nimport { Search } from '../../../assets/icons';\nimport useDebounce from '../../../hooks/useDebounce';\nimport TextInput from '../../FormInputs/TextInput/TextInput';\n\nconst SearchBox = ({ setFilter, filter, className = '', placeholder }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  // const [results, setResults] = useState([]);\n  // const [isSearching, setIsSearching] = useState(false);\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(\n    () => {\n      if (setFilter) {\n        if (debouncedSearchTerm) {\n          setFilter({ ...filter, search: debouncedSearchTerm, current_page: 1 });\n          // setIsSearching(true);\n          // searchCharacters(debouncedSearchTerm).then(results => {\n          //   setIsSearching(false);\n          //   setResults(results);\n          // });\n        } else {\n          setFilter({ ...filter, search: '',current_page: 1 });\n          // setResults([]);\n        }\n      }\n    },\n    [debouncedSearchTerm], // eslint-disable-line react-hooks/exhaustive-deps\n    // Only call effect if debounced search term changes\n  );\n\n  return (\n    <div className={`form-group search-input-wrapper ${className}`}>\n      <TextInput\n        placeholder={placeholder}\n        value={searchTerm || ''} // Its taking null if no value is passed. Hence empty string passed\n        onChange={e => setSearchTerm(e.target.value)}\n        icon={Search}\n        className=\"search-input\"\n      ></TextInput>\n    </div>\n  );\n};\n\nexport default memo(SearchBox);\n","import React from 'react';\nimport { CheckBoxBlue } from '../../../assets/icons';\n\nfunction CheckboxInput({ name, label, value, checked = false, onClick, blue, red, className = '', disabled }) {\n  let checkboxFillColor = blue ? 'blue' : 'red';\n  return (\n    <div className={`d-flex checkbox-input ${className} pure-material-checkbox ${disabled ? 'disabled' : ''}`}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={onClick} //As it is an Input Element onChange method needed for any changeEvent.\n      />\n      <div\n        className={`mr-3 checkbox-checked ${checkboxFillColor}`}\n        onClick={() => {\n          if (disabled) return;\n          else onClick();\n        }}\n      >\n        {CheckBoxBlue}\n      </div>\n      <label dangerouslySetInnerHTML={{ __html: label }}></label>\n    </div>\n  );\n}\n\nexport default CheckboxInput;\n","import React, { useContext, useState } from 'react';\nimport { CloseDark, DoneIconWhite, Edit } from '../../assets/icons';\nimport { ContainedButton, OutlinedButton, TextButton } from '../../components/Buttons/Button';\nimport { ProfileContext } from '../../context/context';\nimport { fetchRequest } from '../../utils/api';\nimport {Edit as EditIcon} from \"../../assets/icons\";\n\nfunction Details({ label, value, form, api, dataToSave, setErrors, setNotification, noEdit, id, isEdit, setEdit }) {\n  const { profile, setProfileData } = useContext(ProfileContext);\n  // const [isEdit, setEdit] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n\n  const handleSubmit = async e => {\n    setErrors({});\n    setBtnLoading(true);\n    setNotification({ show: false, message: '', type: '' });\n    e.preventDefault();\n    const res = await fetchRequest({ url: api, method: 'PUT', isAuth: true, body: dataToSave });\n    setBtnLoading(false);\n    if (res && res.status === 200) {\n      const data = await res.json();\n      if (data.success) {\n        data.message && setNotification({ show: true, message: data.message, type: 'success' });\n        localStorage.setItem('first_name', data.data ? data.data.first_name : profile.selectedRole.first_name);\n        localStorage.setItem('last_name', data.data ? data.data.last_name : profile.selectedRole.last_name);\n        setProfileData({\n          ...profile,\n          data: { ...(data.data ?? profile.data) },\n          ...dataToSave,\n          selectedRole: {\n            ...profile.selectedRole,\n            first_name: data.data ? data.data.first_name : profile.selectedRole.first_name,\n            last_name: data.data ? data.data.last_name : profile.selectedRole.last_name,\n          },\n        });\n        setEdit({});\n      }\n    } else {\n      const errObj = await res.json();\n      setErrors({ ...errObj.errors });\n      res.status !== 422 &&\n        !Object.keys(errObj.error ? errObj.error : {}).length &&\n        errObj.message &&\n        setNotification({ show: true, message: errObj.message, type: 'error' });\n    }\n    return;\n  };\n\n  return (\n    <>\n      {!isEdit[id] ? (\n        <>\n          <div className=\"row profile-details on-mobile-hide\">\n            <div className=\"col-4\">\n              <label className=\"label\">{label}</label>\n            </div>\n            <div className=\"col-6\">\n              <label>{value}</label>\n            </div>\n            <div className=\"col-2\">\n              <TextButton\n                blue\n                onClick={() => {\n                  let x = {};\n                  x[id] = true;\n                  setEdit(x);\n                }}\n              >\n                EDIT\n              </TextButton>\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-between profile-details on-desktop-hide\">\n            <div className=\"d-flex flex-column\">\n              <label className=\"label\">{label}</label>\n              <label>{value}</label>\n            </div>\n            <TextButton\n              blue\n              onClick={() => {\n                let x = {};\n                x[id] = true;\n                setEdit(x);\n              }}\n              className=\"edit-icon\"\n            >\n              <div className=\"d-flex flex-column\">\n                <p>{EditIcon}</p>\n                EDIT\n              </div>\n            </TextButton>\n          </div>\n        </>\n      ) : (\n        <div className=\"profile-details-form mt-3\">\n          <label className=\"label pb-2\">{label}</label>\n          {form}\n          {!noEdit && (\n            <div className=\"profile-card-btns d-flex justify-content-end\">\n              <OutlinedButton black className=\"mr-2\" onClick={() => setEdit({}) || setProfileData({ ...profile })}>\n                <div className=\"d-flex align-items-center\">\n                  <p className=\"icon\">{CloseDark}</p>\n                  Cancel\n                </div>\n              </OutlinedButton>\n              <ContainedButton lightBlue color=\"primary\" withIcon onClick={e => handleSubmit(e)} disabled={btnLoading} loading={btnLoading}>\n                <div className=\"d-flex align-items-center\">\n                  <p className=\"icon\">{DoneIconWhite}</p>\n                  Save\n                </div>\n              </ContainedButton>\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"divider\"></div>\n    </>\n  );\n}\nexport default Details;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { CustomModal, ModalHeader, ModalBody, ModalFooter } from '../../components/Modal/Modal';\nimport TextInput from '../../components/FormInputs/TextInput/TextInput';\nimport { ContainedButton, OutlinedButton } from '../../components/Buttons/Button';\nimport { fetchRequest } from '../../utils/api';\nimport { ProfileContext } from '../../context/context';\n\nconst defaultState = {\n  isModalOpen: false,\n  api: '',\n  title: '',\n  field: { label: '', value: '', name: '' },\n};\n\nconst DetailsModal = ({ actionObject = defaultState, setNotification }) => {\n  const { profile, setProfileData } = useContext(ProfileContext);\n  const { title, isModalOpen, field, api } = actionObject;\n  const [modal, handleModalToggle] = useState(isModalOpen);\n  const [initials, setInitials] = useState({ is_otp_generated: false, otp: '' });\n  const [errors, setErrors] = useState({});\n  const [btnLoading, setBtnLoading] = useState(false);\n\n  useEffect(() => {\n    handleModalToggle(isModalOpen);\n    setInitials({ is_otp_generated: false, otp: '' });\n  }, [actionObject, isModalOpen]);\n\n  const handleConfirmAction = async e => {\n    e.preventDefault();\n    setErrors({});\n    setBtnLoading(true);\n    setNotification({ show: false, message: '', type: '' });\n    let postObj = { type: 'verify_otp', otp: initials.otp };\n    postObj[field.name] = initials[field.name];\n    const res = await fetchRequest({ url: api, method: 'PUT', isAuth: true, body: postObj });\n    setBtnLoading(false);\n    if (res && res.status === 200) {\n      const data = await res.json();\n      if (data.success) {\n        data.message && setNotification({ show: true, message: data.message, type: 'success' });\n        handleModalToggle(false);\n        setProfileData({ ...profile, data: { ...data.data } });\n        // setEdit({});\n      }\n    } else {\n      const errObj = await res.json();\n      setErrors({ ...errObj.errors });\n      res.status !== 422 &&\n        !Object.keys(errObj.error ? errObj.error : {}).length &&\n        errObj.message &&\n        setNotification({ show: true, message: errObj.message, type: 'error' });\n    }\n    return;\n  };\n\n  const generateOTP = async resend => {\n    setErrors({});\n    setNotification({ show: false, message: '', type: '' });\n    let url = resend ? api : api;\n    let postObj = { type: resend ? 'resend_otp' : 'send_otp' };\n    postObj[field.name] = initials[field.name];\n    const res = await fetchRequest({ url, method: 'PUT', isAuth: true, body: postObj });\n    if (res && res.status === 200) {\n      const data = await res.json();\n      if (data.success) {\n        data.message && setNotification({ show: true, message: data.message, type: 'success' });\n        let obj = { ...initials };\n        obj['is_otp_generated'] = true;\n        setInitials({ ...obj });\n      }\n    } else {\n      const errObj = await res.json();\n      setErrors({ ...errObj.errors });\n      res.status !== 422 &&\n        !Object.keys(errObj.error ? errObj.error : {}).length &&\n        errObj.message &&\n        setNotification({ show: true, message: errObj.message, type: 'error' });\n    }\n    return;\n  };\n\n  const onHandleChange = (value, key) => {\n    let obj = { ...initials };\n    obj[key] = value;\n    setInitials({ ...obj });\n  };\n\n  return (\n    <CustomModal className=\"my-profile-modal\" modalIsOpen={modal} closeModal={handleModalToggle}>\n      <ModalHeader className=\"text-center\">\n        <h6 className=\"black-heading\">{title}</h6>\n      </ModalHeader>\n      <ModalBody className=\"mb-2\">\n        <form className=\"update-details-modal pl-2 pr-4\">\n          <div className=\"row mb-2\">\n            <div className=\"col-sm-12 col-md-6 form-group mr-5\">\n              <TextInput\n                placeholder={field.label}\n                value={initials[field.name] || ''}\n                onChange={e => onHandleChange(e.target.value, field.name)}\n                error={errors && errors[field.name]}\n              />\n            </div>\n          </div>\n          {initials.is_otp_generated && (\n            <div className=\"row mb-2\">\n              <div className=\"col-sm-12 col-md-6 form-group \">\n                <TextInput\n                  placeholder=\"Enter OTP\"\n                  value={initials.otp || ''}\n                  onChange={e => onHandleChange(e.target.value, 'otp')}\n                  error={errors && errors['otp']}\n                />\n              </div>\n              <div className=\"col-sm-12 col-md-6 d-flex align-items-end\">\n                <p className=\"resend-otp \">\n                  Didn’t receive code?{' '}\n                  <span onClick={() => generateOTP(1)} className=\"blue-link cursor-pointer\">\n                    Resend OTP\n                  </span>\n                </p>\n              </div>\n            </div>\n          )}\n        </form>\n      </ModalBody>\n      <ModalFooter className=\"justify-content-end\">\n        <OutlinedButton className=\"close-modal-btn\" onClick={() => handleModalToggle(false)}>\n          Cancel\n        </OutlinedButton>\n        {!initials.is_otp_generated ? (\n          <ContainedButton black className=\"generate-otp-btn\" onClick={() => generateOTP(0)}>\n            Generate OTP\n          </ContainedButton>\n        ) : (\n          <ContainedButton onClick={handleConfirmAction} disabled={btnLoading} loading={btnLoading} lightBlue>\n            Save\n          </ContainedButton>\n        )}\n      </ModalFooter>\n    </CustomModal>\n  );\n};\n\nexport default DetailsModal;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { TextButton } from '../../components/Buttons/Button';\nimport Card from '../../components/Common/Card/Card';\nimport CheckboxInput from '../../components/FormInputs/Checkbox/CheckboxInput';\nimport TextInput from '../../components/FormInputs/TextInput/TextInput';\nimport Notification from '../../components/Notification/Notification';\nimport { ProfileContext } from '../../context/context';\nimport Details from './Details';\nimport DetailsModal from './DetailsModal';\nimport ResetPasswordModal from '../../components/Modal/ResetPasswordModal';\n\nfunction MyProfile() {\n  const { profile } = useContext(ProfileContext);\n  const [showPass, setShowPass] = useState(false);\n  const [initials, setInitials] = useState({ current_password: '', new_password: '', confirm_password: '' });\n  const [errors, setErrors] = useState({});\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n  const [modal, setModal] = useState({ isModalOpen: false, api: '', title: '', field: { label: '', value: '', name: '' } });\n  const [resendPassModal, toggleResendPassModal] = useState({ isModalOpen: false, api: '' });\n  const [isEdit, setEdit] = useState({});\n  const { changePassword } = useLocation().state || false;\n\n  useEffect(() => {\n    changePassword && setEdit({ password: true });\n  }, [changePassword]);\n\n  useEffect(() => {\n    setInitials(initials => ({ ...initials, ...profile.data, current_password: '', new_password: '', confirm_password: '' }));\n  }, [profile]);\n\n  const { first_name, last_name, mobile, email, current_password, new_password, confirm_password } = initials;\n  const onHandleChange = (value, key) => {\n    let obj = { ...initials };\n    obj[key] = value;\n    setInitials({ ...obj });\n  };\n\n  return (\n    <div className=\"my-profile\">\n      <Notification {...notification} />\n        <Card>\n          <Details\n            id={'name'}\n            isEdit={isEdit}\n            setEdit={setEdit}\n            label=\"Name\"\n            value={`${first_name} ${last_name}`}\n            form={\n              <div className=\"row mb-4\">\n                <div className=\"form-group col-md-6 col-12\">\n                  <TextInput\n                    hasGrayBack={true}\n                    placeholder=\"First Name*\"\n                    value={first_name || ''}\n                    onChange={e => onHandleChange(e.target.value, 'first_name')}\n                    error={errors && errors['first_name']}\n                  />\n                </div>\n                <div className=\"form-group col-md-6 col-12\">\n                  <TextInput\n                    hasGrayBack={true}\n                    placeholder=\"Last Name*\"\n                    value={last_name || ''}\n                    onChange={e => onHandleChange(e.target.value, 'last_name')}\n                    error={errors && errors['last_name']}\n                  />\n                </div>\n              </div>\n            }\n            api={'/user_profile/name'}\n            dataToSave={{ first_name, last_name }}\n            setErrors={setErrors}\n            notification={notification}\n            setNotification={setNotification}\n          />\n          <Details\n            id={'mobile'}\n            isEdit={isEdit}\n            setEdit={setEdit}\n            label=\"Mobile Number\"\n            value={mobile}\n            form={\n              <div className=\"row mb-4 d-flex justify-content-end\">\n                <div className=\"form-group col-md-6 col-12\">\n                  <TextInput\n                    hasGrayBack={true}\n                    placeholder=\"Mobile No.\"\n                    value={mobile || ''}\n                    onChange={e => onHandleChange(e.target.value, 'mobile')}\n                    error={errors && errors['mobile']}\n                    disabled={true}\n                  />\n                </div>\n                <div className=\"col-sm-12 col-md-3 mr-2 text-right\">\n                  <TextButton\n                    blue\n                    onClick={() =>\n                      setModal({\n                        isModalOpen: true,\n                        api: '/user_profile/mobile',\n                        title: 'Change Mobile No.',\n                        field: { label: 'New Mobile No.', value: mobile, name: 'mobile' },\n                      })\n                    }\n                  >\n                    CHANGE NUMBER\n                  </TextButton>\n                </div>\n              </div>\n            }\n            // api={'/user_profile/mobile'}\n            dataToSave={{ mobile, type: 'send_otp' }}\n            setErrors={setErrors}\n            notification={notification}\n            setNotification={setNotification}\n            noEdit\n          />\n          <Details\n            id={'email'}\n            isEdit={isEdit}\n            setEdit={setEdit}\n            label=\"Email\"\n            value={email}\n            form={\n              <div className=\"row mb-4 d-flex justify-content-end\">\n                <div className=\"form-group col-md-6 col-12\">\n                  <TextInput\n                    hasGrayBack={true}\n                    placeholder=\"Email\"\n                    value={email || ''}\n                    onChange={e => onHandleChange(e.target.value, 'email')}\n                    error={errors && errors['email']}\n                    disabled={true}\n                  />\n                </div>\n                <div className=\"col-sm-12 col-md-3 mr-2 text-right\">\n                  <TextButton\n                    blue\n                    onClick={() =>\n                      setModal({\n                        isModalOpen: true,\n                        api: '/user_profile/email',\n                        title: 'Change Email',\n                        field: { label: 'New Email', value: email, name: 'email' },\n                      })\n                    }\n                  >\n                    CHANGE EMAIL\n                  </TextButton>\n                </div>\n              </div>\n            }\n            api={'/user_profile/email'}\n            dataToSave={{ email, type: 'send_otp' }}\n            setErrors={setErrors}\n            notification={notification}\n            setNotification={setNotification}\n            noEdit\n          />\n          <Details\n            id={'password'}\n            isEdit={isEdit}\n            setEdit={setEdit}\n            label=\"Password\"\n            value={'**********'}\n            form={\n              <div className=\"change-password-div d-flex justify-content-center\">\n                <div className=\"display-width\">\n                  <div className=\"row mb-2 mb-md-4 w-100\">\n                    <div className=\"form-group col-md-12 col-12\">\n                      <TextInput\n                        hasGrayBack={true}\n                        placeholder=\"Current Password\"\n                        value={current_password || ''}\n                        type={showPass ? 'text' : 'password'}\n                        onChange={e => onHandleChange(e.target.value, 'current_password')}\n                        error={errors && errors['current_password']}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row mb-2 w-100\">\n                    <div className=\"form-group col-md-12 col-12\">\n                      <TextInput\n                        hasGrayBack={true}\n                        placeholder=\"New Password\"\n                        value={new_password || ''}\n                        type={showPass ? 'text' : 'password'}\n                        onChange={e => onHandleChange(e.target.value, 'new_password')}\n                        error={errors && errors['new_password']}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row mb-2 w-100\">\n                    <div className=\"form-group col-md-12 col-12\">\n                      <TextInput\n                        hasGrayBack={true}\n                        placeholder=\"Confirm New Password\"\n                        value={confirm_password || ''}\n                        type={showPass ? 'text' : 'password'}\n                        onChange={e => onHandleChange(e.target.value, 'confirm_password')}\n                        error={errors && errors['confirm_password']}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row mb-4 w-100\">\n                    <div className=\"change-password-footer col-md-12 col-12 d-flex justify-content-between\">\n                      <Link\n                        className=\"forget-pass mt-1\"\n                        to={'#'}\n                        onClick={() => toggleResendPassModal({ isModalOpen: true, setErrors, setNotification })}\n                      >\n                        Forgot Password?\n                      </Link>\n                      <div className=\"ml-1\">\n                        <CheckboxInput\n                          blue\n                          name=\"show-pass\"\n                          label=\"Show Password\"\n                          value={showPass}\n                          checked={showPass}\n                          onClick={() => setShowPass(!showPass)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n            api={'/user_profile/password'}\n            dataToSave={{ current_password, new_password, confirm_password }}\n            setErrors={setErrors}\n            notification={notification}\n            setNotification={setNotification}\n          />\n        </Card>\n      <DetailsModal actionObject={modal} setNotification={setNotification} />\n      <ResetPasswordModal actionObject={resendPassModal} />\n    </div>\n  );\n}\nexport default MyProfile;\n","import React from 'react';\nimport { CheckedRadioButtonIcon, RadioButtonIcon } from '../../../assets/icons';\n\nfunction RadioButton({ className, name, label, value, checked = false, onClick, blue, red }) {\n  return (\n    <div className={`d-flex radio-button ${className}`}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={onClick} //As it is an Input Element onChange method needed for any changeEvent.\n      />\n      <div className=\"mr-2 radio-checked\" onClick={onClick}>\n        {checked ? CheckedRadioButtonIcon : RadioButtonIcon}\n      </div>\n      <label dangerouslySetInnerHTML={{ __html: label }}></label>\n    </div>\n  );\n}\n\nexport default RadioButton;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { CustomModal, ModalHeader, ModalBody, ModalFooter } from './Modal';\nimport TextInput from '../FormInputs/TextInput/TextInput';\nimport { ContainedButton, OutlinedButton } from '../Buttons/Button';\nimport { fetchRequest } from '../../utils/api';\nimport RadioButton from '../FormInputs/RadioButton/RadioButton';\nimport { ProfileContext } from '../../context/context';\n\nconst defaultState = {\n  isModalOpen: false,\n};\nconst ResetPasswordModal = ({ actionObject = defaultState }) => {\n  const { isModalOpen, setErrors, setNotification } = actionObject;\n  const profileContext = useContext(ProfileContext);\n  const [modal, handleModalToggle] = useState(isModalOpen);\n  const [sendTo, setSendTo] = useState('mobile');\n  const [mobileToSendLink, setMobileToSendLink] = useState('');\n  const [btnLoading, setBtnLoading] = useState(false);\n\n  useEffect(() => {\n    handleModalToggle(isModalOpen);\n  }, [actionObject, isModalOpen]);\n\n  const handleForgetPass = async e => {\n    setErrors({});\n    setBtnLoading(true);\n    setNotification({ show: false, message: '', type: '' });\n    e.preventDefault();\n    const res = await fetchRequest({\n      url: profileContext ? '/user_profile/forgot_password' : '/forgot_password',\n      method: profileContext ? 'PUT' : 'POST',\n      isAuth: profileContext ? true : false,\n      body: profileContext ? { send_to: sendTo } : { mobile: mobileToSendLink },\n    });\n    res && setBtnLoading(false);\n    if (res && res.status === 200) {\n      const data = await res.json();\n      if (data.success) {\n        handleModalToggle(false);\n        data.message && setNotification({ show: true, message: data.message, type: 'success' });\n      }\n    } else {\n      const errObj = await res.json();\n      setErrors({ ...errObj.errors });\n      res.status !== 422 &&\n        !Object.keys(errObj.error ? errObj.error : {}).length &&\n        errObj.message &&\n        setNotification({ show: true, message: errObj.message, type: 'error' });\n    }\n    return;\n  };\n\n  // const onHandleChange = (value, key) => {\n  //   let obj = { ...initials };\n  //   obj[key] = value;\n  //   // setInitials({ ...obj });\n  // };\n\n  const { mobile } = profileContext ? (profileContext.profile ? profileContext.profile : {}) : {};\n  return (\n    <CustomModal className=\"my-profile-modal\" modalIsOpen={modal} closeModal={handleModalToggle}>\n      <ModalHeader className=\"text-center\">\n        <h6 className=\"black-heading\">{profileContext ? 'Reset Current Password' : 'Forgot Password'}</h6>\n      </ModalHeader>\n      <ModalBody className=\"mb-2\">\n        {profileContext ? (\n          <>\n            <p className=\"modal-msg\">You will receive a link to reset your current password. Where would you like to receive that link?</p>\n            <form className=\"book-demo-form pl-2 pr-4\">\n              <div className=\"d-flex my-3\">\n                {/* <div>\n                  <RadioButton\n                    className=\"mr-5\"\n                    label=\"On Email ID\"\n                    checked={sendTo === 'email'}\n                    onClick={() => setSendTo('email')}\n                  ></RadioButton>\n                  <span className=\"modal-info\">{email}</span>\n                </div> */}\n                <div>\n                  <RadioButton\n                    className=\"mr-5\"\n                    label=\"On Mobile No.\"\n                    checked={sendTo === 'mobile'}\n                    onClick={() => setSendTo('mobile')}\n                  ></RadioButton>\n                  <span className=\"modal-info\">{mobile}</span>\n                </div>\n              </div>\n            </form>\n          </>\n        ) : (\n          <>\n            <p className=\"modal-msg\">You will receive a link to reset your password. Please enter your mobile no.</p>\n            <form className=\"book-demo-form pl-2 pr-4\">\n              <div className=\"d-flex my-3\">\n                <div className=\"form-group mb-3 w-75\">\n                  <TextInput\n                    placeholder=\"Mobile No.\"\n                    value={mobileToSendLink || ''} // Its taking null if no value is passed. Hence empty string passed\n                    onChange={e => setMobileToSendLink(e.target.value)}\n                    // error={errors && errors['mobile']}\n                  ></TextInput>\n                </div>\n              </div>\n            </form>\n          </>\n        )}\n      </ModalBody>\n      <ModalFooter className={profileContext ? 'justify-content-center' : 'justify-content-end'}>\n        <OutlinedButton className=\"close-modal-btn\" onClick={() => handleModalToggle(false)} disabled={btnLoading}>\n          Cancel\n        </OutlinedButton>\n        <ContainedButton\n          onClick={handleForgetPass}\n          lightBlue={profileContext ? true : false}\n          red={!profileContext ? true : false}\n          disabled={btnLoading}\n          loading={btnLoading}\n        >\n          Send Link\n        </ContainedButton>\n      </ModalFooter>\n    </CustomModal>\n  );\n};\nexport default ResetPasswordModal;\n"],"sourceRoot":""}