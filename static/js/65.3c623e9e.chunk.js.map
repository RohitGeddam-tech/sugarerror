{"version":3,"sources":["pages/Admin/PathLabs/List/PathLabTable.jsx","pages/Admin/PathLabs/List/PathLabsList.jsx","components/Popover/Popover.jsx"],"names":["PathLabTable","setFilter","selectedFilters","openFilterAction","list","filter","isLoading","getSelectedData","useContext","ProfileContext","profile","setProfileData","columnDefs","labelAsIcon","Checkbox","accessKey","keyToCheck","renderIcon","isCheckbox","isMobile","label","dateFilter","show","selectDateRange","selectsDateRange","classes","cursor","renderFilterIcon","icon","Filter","key","cellRenderer","days_left","credit_left","row","formatted_status","className","Popover","button","More","to","pathname","localStorage","getItem","onClick","setItem","uuid","selectedLabId","getListPerPage","useCallback","pg","Table","tableData","data","pagination","renderCheckbox","isButtonCard","DownArrow","listName","PathLabsList","useWindowSize","width","useState","pathLabList","setPathLabList","per_page","current_page","sort","date_from","moment","subtract","format","date_to","loading","setLoading","selectedData","setSelectedData","packageData","PackageFilter","setPackageFilter","cityData","setCityData","CityFilter","setCityFilter","StatusFilter","setStatusFilter","AppliedFilters","setSelectedFilters","statusData","PackageFilterAction","setPackageFilterAction","CityFilterAction","setCityFilterAction","StatusFilterAction","setStatusFilterAction","start","end","setState","setUpdate","getCityData","search","a","fetchRequest","url","method","isAuth","res","status","json","meta","getStatusData","getData","i","length","includes","push","giveCityFilter","giveStatusFilter","givePackageFilter","map","item","value","join","useEffect","ranges","Today","toDate","Yesterday","startOf","endOf","pushFilter","e","filtername","splice","Branches","forEach","items","clearAllFilter","type","applied","clearPackageFilter","clearAllStatusFilter","ExportExcel","path","id","initialSettings","maxDate","Date","startDate","endDate","autoUpdateInput","onCallback","_d","CalendarFilter","SearchBox","placeholder","onChange","checked","style","color","display","justifyContent","alignItems","paddingLeft","children","data-toggle","aria-haspopup","aria-expanded","aria-labelledby"],"mappings":"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","file":"static/js/65.3c623e9e.chunk.js","sourcesContent":["import React, { useCallback, useContext } from 'react';\nimport Table from '../../../../components/Table/Table';\nimport { More, Checkbox, Filter, DownArrow } from '../../../../assets/icons';\nimport Popover from '../../../../components/Popover/Popover';\nimport { Link } from 'react-router-dom';\nimport { ProfileContext } from '../../../../context/context';\n\nconst PathLabTable = ({ setFilter, selectedFilters, openFilterAction, list, filter, isLoading, getSelectedData }) => {\n  const { profile, setProfileData } = useContext(ProfileContext);\n\n  const columnDefs = [\n    {\n      labelAsIcon: Checkbox,\n      accessKey: 'checked',\n      keyToCheck: 'uuid',\n      renderIcon: Checkbox,\n      isCheckbox: true,\n      isMobile: false, // Show this content on mobile or not\n    },\n    {\n      label: 'Date',\n      accessKey: 'date',\n      dateFilter: { show: true, selectDateRange: true },\n      selectsDateRange: true,\n    },\n    {\n      label: 'Lab ID',\n      accessKey: 'lab_id',\n      isMobile: false,\n    },\n    {\n      label: 'Lab Name',\n      accessKey: 'name',\n      classes: 'main-content semi-bold',\n    },\n    {\n      label: 'Mobile No.',\n      accessKey: 'mobile_number',\n      isMobile: false,\n    },\n    {\n      label: 'Package Type',\n      cursor:'pointer',\n      renderFilterIcon: { icon: Filter, key: 'pac' },\n      accessKey: 'package_type',\n      isMobile: false,\n    },\n    {\n      label: 'Source',\n      accessKey: 'source',\n      isMobile: false,\n    },\n    {\n      label: 'Days Left',\n      isMobile: false,\n      cellRenderer: ({ days_left }) => days_left || '0',\n    },\n    {\n      label: 'Credits Left',\n      isMobile: false,\n      cellRenderer: ({ credit_left }) => credit_left || '0',\n    },\n    {\n      label: 'City',\n      cursor:'pointer',\n      renderFilterIcon: { icon: Filter, key: 'city' },\n      accessKey: 'city',\n      isMobile: false,\n    },\n    {\n      label: 'Status',\n      cursor:'pointer',\n      renderFilterIcon: { icon: Filter, key: 'status' },\n      cellRenderer: row =>\n        row.formatted_status === 'Active' ? (\n          <span className=\"status-active\">Active</span>\n        ) : (\n          <span className=\"status-in active\">Package Expired</span>\n        ),\n    },\n    {\n      label: '',\n      accessKey: 'more',\n      isMobile: false,\n      cellRenderer: row => (\n        <div className=\"d-flex align-items-center\">\n          <Popover button={<p className=\"table-icon\">{More}</p>} className=\"view-detail-popover\">\n            <Link\n              to={{ pathname: `/${localStorage.getItem('loginAs')}/lab-details/main-office-details` }}\n              className={`hover-black py-1`}\n              onClick={() => {\n                localStorage.setItem('selectedLabId', row.uuid);\n                setProfileData({ ...profile, selectedLabId: row.uuid });\n              }}\n            >\n              View Lab Details\n            </Link>\n          </Popover>\n        </div>\n      ),\n    },\n  ];\n\n  const getListPerPage = useCallback(pg => {\n    setFilter({ ...filter, ...pg });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Table\n      columnDefs={columnDefs}\n      tableData={list.data}\n      selectedFilters={selectedFilters}\n      openFilterAction={openFilterAction}\n      pagination={{ ...list.pagination, getListPerPage }}\n      renderCheckbox={Checkbox}\n      isButtonCard={<span className=\"next-arrow\">{DownArrow}</span>}\n      setFilter={setFilter}\n      filter={filter}\n      isLoading={isLoading}\n      listName=\"labs\"\n      getSelectedData={getSelectedData}\n    ></Table>\n  );\n};\n\nexport default PathLabTable;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Filter, CalendarFilter } from '../../../../assets/icons';\nimport PathLabTable from './PathLabTable';\nimport useWindowSize from '../../../../hooks/userWindowSize';\nimport SearchBox from '../../../../components/Common/SearchBox/SearchBox';\nimport { fetchRequest } from '../../../../utils/api';\nimport ExportExcel from '../../../../components/ExportExcel/ExportExcel';\nimport moment from 'moment';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nconst PathLabsList = () => {\n  /* eslint-disable no-unused-vars */\n  const [width] = useWindowSize();\n  const [pathLabList, setPathLabList] = useState({ data: [], pagination: {} });\n  const [filter, setFilter] = useState({\n    per_page: 15,\n    current_page: 1,\n    sort: [],\n    date_from: moment().subtract(1, 'year').format('YYYY-MM-DD'),\n    date_to: moment().format('YYYY-MM-DD'),\n  });\n  const [loading, setLoading] = useState(false);\n  const [selectedData, setSelectedData] = useState([]);\n  const [packageData, setpackageData] = useState(['paid', 'free']);\n  const [PackageFilter, setPackageFilter] = useState([]);\n  const [cityData, setCityData] = useState([]);\n  const [CityFilter, setCityFilter] = useState([]);\n  const [StatusFilter, setStatusFilter] = useState([]);\n  const [AppliedFilters , setAppliedFilters] = useState([])\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const [statusData, setStatusData] = useState(['Active', 'Inactive' , 'Package Expired']);\n  const [PackageFilterAction, setPackageFilterAction] = useState(false);\n  const [CityFilterAction, setCityFilterAction] = useState(false);\n  const [StatusFilterAction, setStatusFilterAction] = useState(false);\n  const [start, setState] = useState({ start: moment(), end: moment() });\n  const [update , setUpdate] = useState(null)\n\n  const getSelectedData = useCallback(data => setSelectedData(data), []);\n\n  const getCityData = useCallback(() => {\n    setLoading(true);\n    const { per_page = 15, current_page, search, date_from, date_to, sort } = filter;\n    if (per_page)\n      (async () => {\n        let url = `/super_admin/cities`;\n        const res = await fetchRequest({ url, method: 'GET', isAuth: true });\n        if (res && res.status === 200) {\n          setLoading(false);\n          const { data, meta } = await res.json();\n          setCityData(data);\n          return data;\n        } else {\n          setLoading(false);\n        }\n        return;\n      })();\n  }, []);\n\n  //Status Filter\n\n  const getStatusData = useCallback(() => {\n    setLoading(true);\n    const { per_page = 15, current_page, search, date_from, date_to, sort } = filter;\n    if (per_page)\n      (async () => {\n        let url = `/super_admin/cities`;\n        const res = await fetchRequest({ url, method: 'GET', isAuth: true });\n        if (res && res.status === 200) {\n          setLoading(false);\n          const { data, meta } = await res.json();\n          setCityData(data);\n          return data;\n        } else {\n          setLoading(false);\n        }\n        return;\n      })();\n  }, []);\n\n  const getData = useCallback(() => {\n    setLoading(true);\n    setStatusFilterAction(false);\n    setPackageFilterAction(false)\n    setCityFilterAction(false)\n    for(let i=0; i < PackageFilter.length; i++) {\n      if(!AppliedFilters.includes(PackageFilter[i])) {\n        AppliedFilters.push(PackageFilter[i])\n      }\n    }\n    for(let i=0; i < StatusFilter.length; i++) {\n      if(!AppliedFilters.includes(StatusFilter[i])) {\n        AppliedFilters.push(StatusFilter[i])\n      }\n    }\n    for(let i=0; i < CityFilter.length; i++) {\n      if(!AppliedFilters.includes(CityFilter[i])) {\n        AppliedFilters.push(CityFilter[i])\n      }\n    }\n\n    const { per_page = 15, current_page, search, date_from, date_to, sort } = filter;\n    if (per_page)\n      (async () => {\n        let url = `/super_admin/labs?per_page=${per_page}${current_page ? `&page=${current_page}` : ''}${\n          CityFilter.length !== 0 ? `&cities=${giveCityFilter()}` : ''\n        }${StatusFilter.length !== 0 ? `&status=${giveStatusFilter()}` : ''}${\n          PackageFilter.length !== 0 ? `&package_type=${givePackageFilter()}` : ''\n        }${search ? `&search=${search}` : ''}${date_from ? `&date_from=${date_from}` : ''}${date_to ? `&date_to=${date_to}` : ''}${sort && sort.length ? sort.map(item => `&${item.key}=${item.value}`).join('') : ''}`;\n        const res = await fetchRequest({ url, method: 'GET', isAuth: true });\n        if (res && res.status === 200) {\n          setLoading(false);\n          const { data, meta } = await res.json();\n          setPathLabList({ data, pagination: meta.pagination });\n          return data;\n        } else {\n          setLoading(false);\n        }\n        return;\n      })();\n  }, [filter]);\n\n  useEffect(() => {\n    getData();\n  }, [filter, getData]);\n\n  useEffect(() => {\n    getCityData();\n    getStatusData();\n  },[])\n\n  const handleCallback = (start, end) => {\n    setState({ start, end });\n    setFilter({\n      ...filter,\n      current_page: 1,\n      date_from: moment(start._d).format('YYYY-MM-DD'),\n      date_to: moment(end._d).format('YYYY-MM-DD'),\n    });\n  };\n\n  const label = filter.date_from && moment(filter.date_from).format('DD-MM-YYYY') + ' to ' + moment(filter.date_to).format('DD-MM-YYYY');\n\n  const ranges = {\n    Today: [moment().toDate(), moment().toDate()],\n    Yesterday: [moment().subtract(1, 'days').toDate(), moment().subtract(1, 'days').toDate()],\n    'This Month': [moment().startOf('month').toDate(), moment().endOf('month').toDate()],\n    'Last 7 Days': [moment().subtract(6, 'days').toDate(), moment().toDate()],\n    'Last 30 Days': [moment().subtract(29, 'days').toDate(), moment().toDate()],\n    'Last 6 Months': [moment().subtract(6, 'months').toDate(), moment().toDate()],\n    'Last 1 Year': [moment().subtract(1, 'year').toDate(), moment().toDate()],\n  };\n\n  const pushFilter = (e, filtername, data) => {\n    \n    if (filtername === 'City') {\n      if (!CityFilter.includes(data)) {\n        CityFilter.push(data);\n        setUpdate({status:true,data:data})\n      } else {\n        for (let i = 0; i < CityFilter.length; i++) {\n          if (data === CityFilter[i]) {\n            CityFilter.splice(i, 1);\n            setUpdate({status:false,data:data})\n          }\n        }\n\n      }\n    } else if (filtername === 'Status') {\n      if (!StatusFilter.includes(data)) {\n        StatusFilter.push(data);\n        setUpdate({status:true,data:data})\n      } else {\n        for (let i = 0; i < StatusFilter.length; i++) {\n          if (data === StatusFilter[i]) {\n            StatusFilter.splice(i, 1);\n            setUpdate({status:false,data:data})\n          }\n        }\n\n      }\n    } else {\n      if (!PackageFilter.includes(data)) {\n        PackageFilter.push(data);\n        setUpdate({status:true,data:data})\n      } else {\n        for (let i = 0; i < PackageFilter.length; i++) {\n          if (data === PackageFilter[i]) {\n            PackageFilter.splice(i, 1);\n            setUpdate({status:false,data:data})\n          }\n        }\n\n      }\n    }\n  };\n\n  const mapCities = () => {\n    let AvailabelCities = cityData.map(items => {\n      return (\n        <div key={items}>\n          <label >\n            <input onChange={e => pushFilter(e, 'City', items)} checked={CityFilter.includes(items) ? true : false} type=\"checkbox\" /> {items}\n          </label>\n        </div>\n      );\n    });\n    return AvailabelCities;\n  };\n\n  const giveCityFilter = () => {\n    let Branches = '';\n    CityFilter.forEach(items => {\n      if (Branches === '') {\n        Branches = items;\n      } else {\n        Branches = Branches + ',' + items;\n      }\n    });\n    return Branches;\n  };\n\n  const mapStatus = () => {\n    let AvailabelCities = statusData.map(items => {\n      return (\n        <div key={items}>\n          <label>\n            <input onChange={e => pushFilter(e, 'Status', items)} checked={StatusFilter.includes(items) ? true : false} type=\"checkbox\" /> {items}\n          </label>\n        </div>\n      );\n    });\n    return AvailabelCities;\n  };\n\n  const giveStatusFilter = () => {\n    let status = '';\n    StatusFilter.forEach(items => {\n      if (status === '') {\n        status = items;\n      } else {\n        status = status + ',' + items;\n      }\n    });\n    return status;\n  };\n\n  const mapPackage = () => {\n    let AvailabelPackage = packageData.map(items => {\n      return (\n        <div key={items}>\n          <label key={items}>\n            <input onChange={e => pushFilter(e, 'Package', items)} checked={PackageFilter.includes(items) ? true : false} type=\"checkbox\" /> {items}\n          </label>\n        </div>\n      );\n    });\n    return AvailabelPackage;\n  };\n\n  const givePackageFilter = () => {\n    let status = '';\n    PackageFilter.forEach(items => {\n      if (status === '') {\n        status = items;\n      } else {\n        status = status + ',' + items;\n      }\n    });\n    return status;\n  };\n\n  const clearAllFilter = (type) => {\n    if(type === 'remove_filter') {\n    CityFilter.length = 0;\n    getData()\n    for(let i=0; i < selectedFilters.length; i++) {\n      if(selectedFilters[i] === 'City') {\n         selectedFilters.splice(i,1)\n      }\n    }\n    setCityFilterAction(false);\n    }else {\n      let applied =[]\n        for(let i=0; i<CityFilter.length; i++) {\n          if(AppliedFilters.includes(CityFilter[i])) {\n            applied.push(CityFilter[i])\n          }\n        }\n        CityFilter.length=0\n        setCityFilter([...CityFilter , ...applied])\n        if(CityFilter.length === 0) {\n          for(let i=0; i< selectedFilters.length; i++) {\n            if(selectedFilters[i] === 'City') {\n               selectedFilters.splice(i,1)\n            }\n          }\n        }\n      setCityFilterAction(false);\n    }\n  };\n\n  const clearPackageFilter = (type) => {\n    if(type === 'remove_filter') {\n      PackageFilter.length = 0;\n      getData()\n      for(let i=0; i < selectedFilters.length; i++) {\n        if(selectedFilters[i] === 'Package Type') {\n           selectedFilters.splice(i,1)\n        }\n      }\n      setPackageFilterAction(false);\n    }\n    else {\n        let applied =[]\n        for(let i=0; i<PackageFilter.length; i++) {\n          if(AppliedFilters.includes(PackageFilter[i])) {\n            applied.push(PackageFilter[i])\n          }\n        }\n        PackageFilter.length=0\n        setPackageFilter([...PackageFilter , ...applied])\n        if(PackageFilter.length === 0) {\n          for(let i=0; i< selectedFilters.length; i++) {\n            if(selectedFilters[i] === 'Package Type') {\n               selectedFilters.splice(i,1)\n            }\n          }\n        }\n       setPackageFilterAction(false);\n    }\n  }\n\n  const clearAllStatusFilter = (type) => {\n    if(type === 'remove_filter') {\n    StatusFilter.length = 0;\n    getData()\n    for(let i=0; i < selectedFilters.length; i++) {\n      if(selectedFilters[i] === 'Status') {\n         selectedFilters.splice(i,1)\n      }\n    }\n    setStatusFilterAction(false);\n    }else {\n      let applied =[]\n        for(let i=0; i<StatusFilter.length; i++) {\n          if(AppliedFilters.includes(StatusFilter[i])) {\n            applied.push(StatusFilter[i])\n          }\n        }\n        StatusFilter.length=0\n        setStatusFilter([...StatusFilter , ...applied])\n        if(StatusFilter.length === 0) {\n          for(let i=0; i< selectedFilters.length; i++) {\n            if(selectedFilters[i] === 'Status') {\n               selectedFilters.splice(i,1)\n            }\n          }\n        }\n    setStatusFilterAction(false);\n    }\n  };\n\n  const openFilterAction = (status, type) => {\n    if (type === 'Status') {\n      setStatusFilterAction(true);\n      setCityFilterAction(false);\n      setPackageFilterAction(false);\n      if(!selectedFilters.includes('Status')) {\n        selectedFilters.push(type)\n      }\n      setSelectedFilters(setSelectedFilters);\n    } else if (type === 'City') {\n      setCityFilterAction(true);\n      setPackageFilterAction(false);\n      setStatusFilterAction(false)\n      if(!selectedFilters.includes('City')) {\n        selectedFilters.push(type)\n      }\n      setSelectedFilters(setSelectedFilters);\n    } else if (type === 'Package Type') {\n      setPackageFilterAction(true);\n      setStatusFilterAction(false)\n      setCityFilterAction(false);\n      if(!selectedFilters.includes('Package Type')) {\n        selectedFilters.push(type)\n        }\n      setSelectedFilters(setSelectedFilters);\n    }\n  };\n  return (\n    <div className=\"paper card list-path-lab-container list-container\">\n      <div className=\"content-header\">\n        <div className=\"row\">\n          <div className=\"col-6 col-md-2\">\n            <p className=\"semi-bold title\">All Path Labs</p>\n          </div>\n          <div className=\"col-6 col-md-2\">\n            <div className=\"form-group text-right\">\n              {/* <OutlinedButton className=\"export-excel\" onClick={exportExcel}>\n                Export Excel\n              </OutlinedButton> */}\n              <ExportExcel path={'/super_admin/labs_export'} filter={filter} selectedData={selectedData} />\n            </div>\n          </div>\n\n          <div className=\"col-md-4 customDatePicker-wrapper\">\n            <DateRangePicker\n              className=\"customDatePicker\"\n              id=\"customDatePicker\"\n              initialSettings={{\n                maxDate: new Date(),\n                startDate: moment().subtract(1, 'year').toDate(),\n                endDate: moment().toDate(),\n                ranges: ranges,\n                autoUpdateInput: true,\n              }}\n              onCallback={handleCallback}\n            >\n              <div className=\"customDatePicker-innerwrapper\">\n                <span className={label ? 'range-value' : 'range-placeholder'}>{label ? label : 'Select Range'}</span>\n                <label className=\"table-icon d-inline\">{CalendarFilter}</label>\n              </div>\n            </DateRangePicker>\n          </div>\n          <div className=\"push-4 col-md-4\">\n            <SearchBox setFilter={setFilter} filter={filter} placeholder=\"Search by Name or Mobile No.\" />\n          </div>\n        </div>\n        {width <= 768 ? (\n          <div className=\"d-flex justify-content-end mr-2 filter\">\n            <p className=\"mr-1\">{Filter}</p> <p>Filter</p>\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n      <div className=\"content-body\">\n      {CityFilterAction === true ? (\n            <div className=\"filter_container\">\n              <div className='filter_subcontainer_reff'>\n                {mapCities()}\n              </div>\n                <div className='filter_options'>\n                  <span onClick={() => clearAllFilter('remove_filter')} style={{ color: 'rgba(223, 116, 106, 1)' }}>\n                    Remove filter\n                  </span>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span onClick={() => clearAllFilter('cancel')}>Cancel</span>\n                    {CityFilter.length === 0 ?\n                    <span style={{ paddingLeft: 10 }}>\n                      Apply\n                    </span>\n                     :\n                     <span onClick={() => getData()} style={{ paddingLeft: 10 , color:'blue' }}>\n                      Apply\n                    </span>\n}\n                  </div>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          {PackageFilterAction === true ? (\n            <div className=\"filter_container_pac\">\n              <div className='filter_subcontainer_reff'>\n                {mapPackage()}\n              </div>\n                <div className='filter_options'>\n                  <span onClick={() => clearPackageFilter('remove_filter')} style={{ color: 'rgba(223, 116, 106, 1)' }}>\n                    Remove filter\n                  </span>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span onClick={() => clearPackageFilter('calcel')}>Cancel</span>\n                    {PackageFilter.length === 0 ?\n                    <span style={{ paddingLeft: 10 }}>\n                      Apply\n                    </span>\n                     :\n                     <span onClick={() => getData()} style={{ paddingLeft: 10,color:'blue' }}>\n                        Apply\n                      </span>\n                      }\n                  </div>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          {StatusFilterAction === true ? (\n            <div className=\"filter_container_status\">\n              <div className='filter_subcontainer_reff'>\n                {mapStatus()}\n              </div>\n                <div className='filter_options'>\n                  <span onClick={() => clearAllStatusFilter('remove_filter')} style={{ color: 'rgba(223, 116, 106, 1)' }}>\n                    Remove filter\n                  </span>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span onClick={() => clearAllStatusFilter('cancel')}>Cancel</span>\n                    {StatusFilter.length === 0 ?  \n                    <span style={{ paddingLeft: 10 }}>\n                      Apply\n                    </span>\n                     :\n                     <span onClick={() => getData()} style={{ paddingLeft: 10,color:'blue' }}>\n                        Apply\n                      </span>\n                    }\n                  </div>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        <PathLabTable\n          setFilter={setFilter}\n          selectedFilters={selectedFilters}\n          openFilterAction={openFilterAction}\n          filter={filter}\n          isLoading={loading}\n          list={pathLabList}\n          getSelectedData={getSelectedData}\n        />\n      </div>\n    </div>\n  );\n};\nexport default PathLabsList;\n","import React from 'react';\n\nconst Popover = ({ button, children, className = '' }) => {\n  return (\n    <div className={`nav-item dropdown popover-dropdown`}>\n      <span className=\"nav-item nav-link dropdown-toggle\" id=\"bd-versions\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n        {button}\n      </span>\n      <div className={`dropdown-menu dropdown-menu-md-right ${className}`} aria-labelledby=\"bd-versions\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Popover;\n"],"sourceRoot":""}