{"version":3,"sources":["components/FormInputs/TextInput/TextInput.jsx","components/FormInputs/SelectInput/SelectInput.jsx","components/Notification/Notification.jsx","components/FormInputs/Checkbox/CheckboxInput.jsx","components/Common/Tests/Add/GroupForm.jsx","components/Common/Tests/Add/PackageForm.jsx","components/Common/Tests/Add/PanelForm.jsx","components/FormInputs/TagInput/TagInput.jsx","components/Common/Tests/Add/FormulaForm.jsx","components/Common/Tests/Add/ReportTypes.jsx","components/Common/Tests/Add/TestForm.jsx","components/Common/Tests/Add/AddTestDetails.jsx","components/FormInputs/Textarea/Textarea.jsx","components/FormInputs/AsyncSelectInput/AsyncSelectInput.jsx","utils/masters.js","components/FormInputs/RadioButton/RadioButton.jsx","components/Common/TextEditor/TextEditor.jsx"],"names":["TextInput","type","placeholder","value","name","onChange","onBlur","error","disabled","icon","className","hasGrayBack","showPass","maxLength","ref","useState","showPassword","setShowPassword","hasError","inputRef","useRef","autoComplete","onClick","hidePasswordEye","showPasswordEye","SelectInput","options","isMulti","hideSelectedOptions","isClearable","isLoading","hidePlaceholder","defaultValue","isSearchable","parentClass","parentRef","classNamePrefix","onFocus","current","classList","add","remove","removeSelected","isDisabled","Notification","message","callback","notify","useCallback","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","info","warn","useEffect","CheckboxInput","label","checked","blue","red","checkboxFillColor","CheckBoxBlue","dangerouslySetInnerHTML","__html","GroupForm","props","loginAs","localStorage","getItem","profile","useContext","ProfileContext","testId","useParams","masterTestList","setMasterTestList","tests","setTests","groupName","setGroupName","errors","setErrors","show","notification","setNotification","btnLoading","setBtnLoading","testMasterBaseUrl","selectedRole","uuid","obj","testData","temp","sub_tests","length","map","test","getMasterTestList","search","a","fetchRequest","url","method","isAuth","res","status","json","data","newData","filter","handleAddGroup","validateForm","test_ids","Object","keys","body","val","urlMethod","history","goBack","errObj","e","target","AsyncSelectInput","FilterData","noOptionsMessage","option","viewTestLink","includes","push","loading","defaultState","gender","cost","PackageForm","packageData","setPackageData","console","log","onHandleChange","key","handleAddPackage","preventDefault","GenderList","test_category","short_name","PanelForm","categories","setCategories","panelData","setPanelData","technique","setTechnique","interpretation","setInterpretation","setMethod","remark","setRemark","note","setNote","loadSelectInput","setLoadSelectInput","getCategories","handleAddPanel","test_categories_id","TextEditor","delimiters","TagInput","tags","suggestions","handleDelete","handleAddition","ReactTags","allowUnique","autofocus","FormulaForm","dependentTests","setDependentTests","formula","setFormula","reportTypeId","makeRequest","text","id","i","splice","tag","ReferenceRange","testValidation","setTestValidation","defaultTestValidation","ind","age_from","age_to","range_from","range_to","removeRow","CloseIcon","withIcon","AddTestIcon","PossibleTestResult","defaultPossibleTestResult","possibleTestResult","setPossibleTestResult","result","RadioButton","abnormal","PreDefinedTestResult","preDefineResult","setPreDefineResult","width","operatorsRegExp","numberRegExp","report_type","unit","sample_type","sample_quantity","listable","optional","TestForm","reportTypes","setReportTypes","units","setUnits","sampleTypes","setSampleTypes","setTestData","getReportTypes","getUnits","getSampleTypes","window","scrollTo","details","tempDependentTests","test_dependency","test_validations","possible_test_results","pre_define_result","handleAddTest","report_type_id","unit_id","formattedDependentTests","formattedFormula","parseFloat","sample_type_id","test_dependent_on","range","test_validation","possible_results","formulaErrorKeys","addComma","parseInt","split","formattedFormulaError","AddTestDetails","detailsType","setDetailsType","getSignleTestData","find","Textarea","rows","defaultOptions","loadOptions","inputValue","PatientGenderList","BloodGroupList","CheckedRadioButtonIcon","RadioButtonIcon","editor","ClassicEditor","event","getData","config","toolbar","style","innerHeight"],"mappings":"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","file":"static/js/14.6c04f146.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { hidePasswordEye, showPasswordEye } from '../../../assets/icons';\n\nfunction TextInput({\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onBlur,\n  error,\n  disabled = false,\n  icon,\n  className = '',\n  hasGrayBack = false,\n  showPass,\n  maxLength,\n  ref,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  let hasError = error ? 'has-error' : '';\n  className += ` form-control `;\n  const inputRef = useRef(null);\n  return (\n    <>\n      <div className={`input-group text-input ${hasError} ${hasGrayBack ? 'background-gray' : ''}`}>\n        <input\n          type={(showPass ? (!showPassword ? 'password' : 'text') : type) || 'text'}\n          className={className}\n          name={name}\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          ref={ref || inputRef}\n          disabled={disabled}\n          onBlur={onBlur}\n          maxLength={maxLength}\n        />\n        <label className=\"input-placeholder\">{placeholder}</label>\n        {icon ? <span className=\"input-icon\">{icon}</span> : <></>}\n        {showPass ? (\n          <span className=\"input-icon cursor-pointer\" onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? hidePasswordEye : showPasswordEye}\n          </span>\n        ) : (\n          <></>\n        )}\n        {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n      </div>\n    </>\n  );\n}\nexport default TextInput;\n","import React, { useRef } from 'react';\nimport Select from 'react-select';\n\nconst SelectInput = ({\n  className = '',\n  options = [],\n  value,\n  onChange,\n  placeholder,\n  error,\n  hasGrayBack = false,\n  isMulti = false,\n  hideSelectedOptions = true,\n  isClearable = true,\n  disabled,\n  isLoading,\n  hidePlaceholder,\n  defaultValue,\n  isSearchable = false,\n}) => {\n  let parentClass = `input-group select-control-input ${error ? 'has-error' : ''} ${hasGrayBack ? 'background-gray' : ''} ${\n    value && value.value ? 'has-value' : ''\n  } ${hidePlaceholder ? 'hide-placeholder' : ''} ${disabled ? 'cursor-notAllowed' : ''}`;\n\n  className += ` select-input `;\n  const parentRef = useRef(null);\n  return (\n    <>\n      <div className={parentClass} ref={parentRef}>\n        <Select\n          value={value}\n          onChange={onChange}\n          options={options}\n          className={className}\n          classNamePrefix=\"select-input\"\n          placeholder={<div>{''}</div>}\n          onFocus={() => parentRef.current.classList.add('select-focused')}\n          onBlur={() => parentRef.current.classList.remove('select-focused')}\n          isClearable={isClearable}\n          isMulti={isMulti}\n          removeSelected={false}\n          defaultValue={defaultValue}\n          isDisabled={disabled}\n          isLoading={isLoading}\n          isSearchable={isSearchable}\n        />\n        <label className=\"select-placeholder\">{placeholder}</label>\n      </div>\n      {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n    </>\n  );\n};\nexport default SelectInput;\n","import React, { useEffect, useCallback } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification({ message, type, callback }) {\n  const notify = useCallback(\n    type => {\n      switch (type) {\n        case 'success': {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          setTimeout(() => {\n            callback && callback();\n          }, 1500);\n          break;\n        }\n        case 'error':\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'info':\n          toast.info(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'warn':\n          toast.warn(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [callback, message],\n  );\n\n  useEffect(() => {\n    if (message && type) notify(type);\n  }, [message, notify, type]);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Notification;\n","import React from 'react';\nimport { CheckBoxBlue } from '../../../assets/icons';\n\nfunction CheckboxInput({ name, label, value, checked = false, onClick, blue, red, className = '', disabled }) {\n  let checkboxFillColor = blue ? 'blue' : 'red';\n  return (\n    <div className={`d-flex checkbox-input ${className} pure-material-checkbox ${disabled ? 'disabled' : ''}`}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={onClick} //As it is an Input Element onChange method needed for any changeEvent.\n      />\n      <div\n        className={`mr-3 checkbox-checked ${checkboxFillColor}`}\n        onClick={() => {\n          if (disabled) return;\n          else onClick();\n        }}\n      >\n        {CheckBoxBlue}\n      </div>\n      <label dangerouslySetInnerHTML={{ __html: label }}></label>\n    </div>\n  );\n}\n\nexport default CheckboxInput;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { OutlinedButton } from '../../../../components/Buttons/Button';\nimport RadioButton from '../../../../components/FormInputs/RadioButton/RadioButton';\nimport TextInput from '../../../../components/FormInputs/TextInput/TextInput';\nimport { fetchRequest } from '../../../../utils/api';\nimport Notification from '../../../../components/Notification/Notification';\nimport AsyncSelectInput from '../../../../components/FormInputs/AsyncSelectInput/AsyncSelectInput';\nimport { useParams } from 'react-router-dom';\nimport { ProfileContext } from '../../../../context/context';\nimport { validateForm } from '../../../../utils/custom';\n\nconst GroupForm = props => {\n  const loginAs = localStorage.getItem('loginAs');\n  const { profile } = useContext(ProfileContext);\n  const { testId } = useParams();\n  const [masterTestList, setMasterTestList] = useState([]);\n  const [tests, setTests] = useState([]);\n  const [groupName, setGroupName] = useState('');\n  const [errors, setErrors] = useState({});\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n  const [btnLoading, setBtnLoading] = useState(false);\n\n  let testMasterBaseUrl = '/super_admin/';\n  if(loginAs == \"lab-admin\") testMasterBaseUrl = `/lab_group/${profile?.selectedRole?.uuid}/`;\n  else if(loginAs == \"lab\") testMasterBaseUrl = `/lab/${profile?.selectedRole?.uuid}/`;\n\n  useEffect(() => {\n    if (props.obj && props.obj.testData) {\n      setGroupName(props.obj.testData.name);\n      let temp = props.obj.testData.sub_tests?.length\n        ? props.obj.testData.sub_tests.map(test => ({ label: test.name, value: test.uuid }))\n        : [];\n      setTests(temp);\n    }\n  }, [props]);\n\n  const handleCancel = () => {\n    if (testId) {\n      const viewTestLink = ['lab-admin','lab'].includes(loginAs) ? `/${loginAs}/setting/view-test/${testId}` : `/${loginAs}/view-test/${testId}`;\n      props.history.push(viewTestLink);\n    } else {\n      setGroupName('');\n      setTests([]);\n    }\n  };\n\n  const getMasterTestList = async search => {\n    const res = await fetchRequest({ url: `${testMasterBaseUrl}tests${search ? `?search=${search}` : ''}`, method: 'GET', isAuth: true });\n    if (res && res.status === 200) {\n      const { data } = await res.json();\n      const newData =\n        data && data.length && [...data].filter(test => test.type === 'test').map(test => ({ label: test.name, value: test.uuid }));\n      setMasterTestList(newData);\n      return newData;\n    }\n    return;\n  };\n\n  const handleAddGroup = async () => {\n    setErrors({});\n    setBtnLoading(true);\n    setNotification({ show: false, message: '', type: '' });\n    \n    const errors = validateForm({ name:groupName, test_ids: tests?.length });\n    setErrors({ ...errors });\n\n    if (!Object.keys(errors).length) {\n      let body = {\n        type: 'group',\n        name: groupName,\n        test_ids: tests?.length ? [...tests].map(val => val.value) : [],\n      };\n\n      let url = `${testMasterBaseUrl}tests`, urlMethod = 'POST';\n      \n      if (testId) {\n        url = `${url}/${testId}`;\n        urlMethod = 'PUT';\n      }\n      if (url) {\n        const res = await fetchRequest({ url, method: urlMethod, isAuth: true, body });\n        setBtnLoading(false);\n        if (res && res.status === 200) {\n          const data = await res.json();\n          if (data.success) {\n            data.message && setNotification({ show: true, message: data.message, type: 'success' });\n            setTimeout(() => props.history.goBack(), 2000);\n          }\n        } else {\n          const errObj = await res.json();\n          setErrors({ ...errObj.errors });\n          res.status !== 422 &&\n            !Object.keys(errObj.error ? errObj.error : {}).length &&\n            errObj.message &&\n            setNotification({ show: true, message: errObj.message, type: 'error' });\n        }\n      }\n    } else{\n      setBtnLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-content\">\n      <Notification {...notification} />\n      <div className=\"paper\">\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-5 col-12\">\n            <TextInput\n              placeholder=\"Group Name*\"\n              value={groupName || ''}\n              onChange={e => setGroupName(e.target.value)}\n              error={errors && errors['name']}\n            />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-12 col-12\">\n            <label className=\"gray-label mb-1\">Select Tests*</label>\n            <AsyncSelectInput\n              isMulti\n              options={masterTestList}\n              FilterData={getMasterTestList}\n              noOptionsMessage=\"Search & Select Tests\"\n              value={tests}\n              onChange={option => (option && option.length ? setTests([...option]) : setTests())}\n              error={errors && errors['test_ids']}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row mb-4 text-center\">\n        <div className=\"col-md-12\">\n          <OutlinedButton red className=\"mr-2\" onClick={handleCancel}>\n            Cancel\n          </OutlinedButton>\n          <OutlinedButton blue onClick={handleAddGroup} disabled={btnLoading} loading={btnLoading}>\n            Save\n          </OutlinedButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupForm;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { OutlinedButton } from '../../../../components/Buttons/Button';\nimport AsyncSelectInput from '../../../../components/FormInputs/AsyncSelectInput/AsyncSelectInput';\nimport SelectInput from '../../../../components/FormInputs/SelectInput/SelectInput';\nimport TextInput from '../../../../components/FormInputs/TextInput/TextInput';\nimport Notification from '../../../../components/Notification/Notification';\nimport { ProfileContext } from '../../../../context/context';\nimport { fetchRequest } from '../../../../utils/api';\nimport { validateForm } from '../../../../utils/custom';\nimport { GenderList } from '../../../../utils/masters';\nimport { useParams } from 'react-router-dom';\n\nconst defaultState = {\n  name: '',\n  gender: null,\n  cost: '',\n  tests: [],\n};\n\nconst PackageForm = props => {\n  const loginAs = localStorage.getItem('loginAs');\n  const { profile } = useContext(ProfileContext);\n  const { testId } = useParams();\n  const [packageData, setPackageData] = useState({ ...defaultState });\n  const [errors, setErrors] = useState({});\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [masterTestList, setMasterTestList] = useState([]);\n  const [tests, setTests] = useState([]);\n  const { name, gender, cost } = packageData;\n\n  let testMasterBaseUrl = '';\n  if (loginAs == 'lab-admin') testMasterBaseUrl = `/lab_group/${profile?.selectedRole?.uuid}/`;\n  else if (loginAs == 'lab') testMasterBaseUrl = `/lab/${profile?.selectedRole?.uuid}/`;\n\n  useEffect(() => {\n    if (props.obj && props.obj.testData) {\n      setPackageData({ ...props.obj.testData });\n      let temp = props.obj.testData.sub_tests?.length ? props.obj.testData.sub_tests.map(test => ({ label: test.name, value: test.uuid })) : [];\n      setTests(temp);\n    }\n  }, [props]);\n\n  useEffect(() => {\n    if (packageData?.gender?.value) {\n      getMasterTestList();\n    }\n  }, [packageData.gender]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getMasterTestList = async search => {\n    const res = await fetchRequest({ url: `${testMasterBaseUrl}tests${search ? `?search=${search}` : ''}`, method: 'GET', isAuth: true });\n    if (res && res.status === 200) {\n      const { data } = await res.json();\n      const newData =\n        data &&\n        data.length &&\n        [...data].filter(test => test.type === 'test' || test.type === 'panel').map(test => ({ label: test.name, value: test.uuid }));\n      setMasterTestList([...newData]);\n      return newData;\n    }\n    return;\n  };\n\n  const handleCancel = () => {\n    if (testId) {\n      const viewTestLink = ['lab-admin','lab'].includes(loginAs) ? `/${loginAs}/setting/view-test/${testId}` : `/${loginAs}/view-test/${testId}`;\n      props.history.push(viewTestLink);\n    } else {\n    setPackageData({ ...defaultState });\n      setTests([]);\n    }\n  };\nconsole.log(tests)\n  const onHandleChange = (value, key) => {\n    let obj = { ...packageData };\n    if (key === 'gender' && value !== packageData.gender) {\n      obj.tests = [];\n    }\n    obj[key] = value;\n    setPackageData({ ...obj });\n  };\n\n  const handleAddPackage = async e => {\n    setBtnLoading(true);\n    setErrors({});\n    setNotification({ show: false, message: '', type: '' });\n    e.preventDefault();\n\n    const errors = validateForm({ name, gender: gender && gender.value, tests: tests?.length ? [...tests].map(val => val.value) : null });\n    setErrors({ ...errors });\n\n    if (!Object.keys(errors).length) {\n      let body = {\n        type: 'package',\n        name: packageData.name,\n        cost: packageData.cost,\n        gender: packageData.gender && packageData.gender.value,\n        tests: [...tests].map(val => val.value),\n      };\n\n      let url = `${testMasterBaseUrl}tests`,\n        method = 'POST';\n\n      if (testId) {\n        url = `${url}/${testId}`;\n        method = 'PUT';\n      }\n      if (url) {\n        const res = await fetchRequest({\n          url,\n          method,\n          isAuth: true,\n          body,\n        });\n        res && setBtnLoading(false);\n        if (res && res.status === 200) {\n          const data = await res.json();\n          if (data.success) {\n            data.message && setNotification({ show: true, message: data.message, type: 'success' });\n            setTimeout(() => props.history.goBack(), 2000);\n          }\n        } else {\n          const errObj = await res.json();\n          setErrors({ ...errObj.errors });\n          res.status !== 422 &&\n            !Object.keys(errObj.error ? errObj.error : {}).length &&\n            errObj.message &&\n            setNotification({ show: true, message: errObj.message, type: 'error' });\n        }\n        return;\n      }\n    } else {\n      setBtnLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-content\">\n      <Notification {...notification} />\n      <div className=\"paper\">\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-5 col-12\">\n            <TextInput\n              placeholder=\"Package Name*\"\n              value={name || ''}\n              onChange={e => onHandleChange(e.target.value, 'name')}\n              error={errors && errors['name']}\n            />\n          </div>\n          <div className=\"form-group col-md-4 col-12\">\n            <SelectInput\n              placeholder=\"Gender*\"\n              options={GenderList}\n              value={gender}\n              onChange={data => onHandleChange(data, 'gender')}\n              error={errors && errors['gender']}\n            />\n          </div>\n          <div className=\"form-group col-md-3 col-12\">\n            <TextInput\n              placeholder=\"Cost (in ₹)\"\n              value={cost || ''}\n              onChange={e => onHandleChange(e.target.value, 'cost')}\n              error={errors && errors['cost']}\n            />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-12 col-12\">\n            <label className=\"gray-label mb-1\">Select Tests*</label>\n            <AsyncSelectInput\n              isMulti\n              options={masterTestList}\n              FilterData={getMasterTestList}\n              noOptionsMessage=\"Search & Select Tests\"\n              value={tests}\n              onChange={option => (option && option.length ? setTests([...option]) : setTests())}\n              error={errors && errors['tests']}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row mb-4 text-center\">\n        <div className=\"col-md-12\">\n          <OutlinedButton\n            red\n            className=\"mr-2\"\n            onClick={handleCancel}\n            disabled={btnLoading}\n          >\n            Cancel\n          </OutlinedButton>\n          <OutlinedButton blue onClick={handleAddPackage} disabled={btnLoading} btnLoading={btnLoading}>\n            Save\n          </OutlinedButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PackageForm;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { OutlinedButton } from '../../../../components/Buttons/Button';\nimport TextEditor from '../../../../components/Common/TextEditor/TextEditor';\nimport AsyncSelectInput from '../../../../components/FormInputs/AsyncSelectInput/AsyncSelectInput';\nimport RadioButton from '../../../../components/FormInputs/RadioButton/RadioButton';\nimport SelectInput from '../../../../components/FormInputs/SelectInput/SelectInput';\nimport Textarea from '../../../../components/FormInputs/Textarea/Textarea';\nimport TextInput from '../../../../components/FormInputs/TextInput/TextInput';\nimport Notification from '../../../../components/Notification/Notification';\nimport { ProfileContext } from '../../../../context/context';\nimport { fetchRequest } from '../../../../utils/api';\nimport { validateForm } from '../../../../utils/custom';\nimport { GenderList } from '../../../../utils/masters';\n\nconst defaultState = {\n  type: 'test',\n  test_category: null,\n  name: '',\n  short_name: '',\n  gender: null,\n  cost: '',\n};\n\nconst PanelForm = props => {\n  const loginAs = localStorage.getItem('loginAs');\n  const { profile } = useContext(ProfileContext);\n  const [categories, setCategories] = useState([]);\n  const { testId } = useParams();\n  const [errors, setErrors] = useState({});\n  const [panelData, setPanelData] = useState({ ...defaultState });\n  const [masterTestList, setMasterTestList] = useState([]);\n  const [tests, setTests] = useState([]);\n  const { test_category, name, short_name, gender, cost } = panelData;\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n  const [btnLoading, setBtnLoading] = useState(false);\n  //Editor initials\n  const [technique, setTechnique] = useState('');\n  const [interpretation, setInterpretation] = useState('');\n  const [method, setMethod] = useState('');\n  const [remark, setRemark] = useState('');\n  const [note, setNote] = useState('');\n  const [loadSelectInput, setLoadSelectInput] = useState(false);\n\n  let testMasterBaseUrl = '/super_admin/';\n  if(loginAs == \"lab-admin\") testMasterBaseUrl = `/lab_group/${profile?.selectedRole?.uuid}/`;\n  else if(loginAs == \"lab\") testMasterBaseUrl = `/lab/${profile?.selectedRole?.uuid}/`;\n\n  useEffect(() => {\n    getCategories();\n    setTimeout(() => {\n      setLoadSelectInput(true);\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    if (props.obj && props.obj.testData) {\n      setPanelData({ ...props.obj.testData });\n      let temp = props.obj.testData.sub_tests?.length ? props.obj.testData.sub_tests.map(test => ({ label: test.name, value: test.uuid })) : [];\n      setTests(temp);\n      //Editor state\n      setTechnique(props.obj.testData.technique);\n      setInterpretation(props.obj.testData.interpretation);\n      setMethod(props.obj.testData.method);\n      setRemark(props.obj.testData.remark);\n      setNote(props.obj.testData.note);\n    }\n  }, [props]);\n\n  const handleCancel = () => {\n    if (testId) {\n      const viewTestLink = ['lab-admin','lab'].includes(loginAs) ? `/${loginAs}/setting/view-test/${testId}` : `/${loginAs}/view-test/${testId}`;\n      props.history.push(viewTestLink);\n    } else {\n      setPanelData({ ...defaultState });\n      setTests([]);\n      //Editor state\n      setTechnique('');\n      setInterpretation('');\n      setMethod('');\n      setRemark('');\n      setNote('');\n    }\n  };\n\n  const getCategories = async () => {\n    const res = await fetchRequest({ url: `${testMasterBaseUrl}test_categories`, method: 'GET', isAuth: true });\n    if (res && res.status === 200) {\n      const { data } = await res.json();\n      const newData = data && data.length && [...data].map(test_category => ({ label: test_category.name, value: test_category.uuid }));\n      setCategories(newData);\n      return data;\n    }\n    return;\n  };\n\n  const getMasterTestList = async search => {\n    const res = await fetchRequest({ url: `${testMasterBaseUrl}tests${search ? `?search=${search}` : ''}`, method: 'GET', isAuth: true });\n    if (res && res.status === 200) {\n      const { data } = await res.json();\n      const newData =\n        data &&\n        data.length &&\n        [...data].filter(test => test.type === 'test' || test.type === 'group').map(test => ({ label: test.name, value: test.uuid }));\n      setMasterTestList([...newData]);\n      return newData;\n    }\n    return;\n  };\n\n  const onHandleChange = (value, key) => {\n    let obj = { ...panelData };\n    obj[key] = value;\n    setPanelData({ ...obj });\n  };\n\n  const handleAddPanel = async () => {\n    setErrors({});\n    setBtnLoading(true);\n    setNotification({ show: false, message: '', type: '' });\n\n    const errors = validateForm({ name, test_categories_id : test_category && test_category.value, gender : gender && gender.value, test_ids: tests?.length });\n    setErrors({ ...errors });\n\n    if (!Object.keys(errors).length) {\n      let body = {\n        type: 'panel',\n        test_categories_id: test_category && test_category.value,\n        name,\n        short_name,\n        gender: gender && gender.value,\n        cost,\n        test_ids: [...tests].map(val => val.value),\n        technique,\n        interpretation,\n        method,\n        remark,\n        note,\n      };\n\n      let url = `${testMasterBaseUrl}tests`, urlMethod = 'POST';\n      \n      if (testId) {\n        url = `${url}/${testId}`;\n        urlMethod = 'PUT';\n      }\n      if (url) {\n        const res = await fetchRequest({ url, method: urlMethod, isAuth: true, body });\n        setBtnLoading(false);\n        if (res && res.status === 200) {\n          const data = await res.json();\n          if (data.success) {\n            data.message && setNotification({ show: true, message: data.message, type: 'success' });\n            setTimeout(() => props.history.goBack(), 2000);\n          }\n        } else {\n          const errObj = await res.json();\n          setErrors({ ...errObj.errors });\n          res.status !== 422 &&\n            !Object.keys(errObj.error ? errObj.error : {}).length &&\n            errObj.message &&\n            setNotification({ show: true, message: errObj.message, type: 'error' });\n        }\n      }\n    } else{\n      setBtnLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-content\">\n      <Notification {...notification} />\n      <div className=\"paper\">\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-5 col-12\">\n            <SelectInput\n              options={categories}\n              value={test_category}\n              placeholder=\"Category*\"\n              onChange={value => onHandleChange(value, 'test_category')}\n              error={errors && errors['test_categories_id']}\n            ></SelectInput>\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-5 col-12\">\n            <TextInput\n              placeholder=\"Panel Name*\"\n              value={name || ''}\n              onChange={e => onHandleChange(e.target.value, 'name')}\n              error={errors && errors['name']}\n            />\n          </div>\n          <div className=\"form-group col-md-3 col-12\">\n            <TextInput\n              placeholder=\"Short Name\"\n              value={short_name || ''}\n              onChange={e => onHandleChange(e.target.value, 'short_name')}\n              error={errors && errors['short_name']}\n            />\n          </div>\n          <div className=\"form-group col-md-3 col-12\">\n            <SelectInput\n              options={GenderList}\n              value={gender}\n              placeholder=\"Gender*\"\n              onChange={value => onHandleChange(value, 'gender')}\n              error={errors && errors['gender']}\n            ></SelectInput>\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-3 col-12\">\n            <TextInput\n              placeholder=\"Cost\"\n              value={cost || ''}\n              onChange={e => onHandleChange(e.target.value, 'cost')}\n              error={errors && errors['cost']}\n            />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-12 col-12\">\n            <label className=\"gray-label mb-1\">Select Tests or Groups*</label>\n            {loadSelectInput ? (\n              <AsyncSelectInput\n                isMulti\n                options={masterTestList}\n                FilterData={getMasterTestList}\n                noOptionsMessage=\"Search & Select Tests\"\n                value={tests}\n                onChange={option => (option && option.length ? setTests([...option]) : setTests())}\n                error={errors && errors['test_ids']}\n              />\n            ) : (\n              <SelectInput isLoading></SelectInput>\n            )}\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-3 col-12 text-right gray-label\">Technique :</div>\n          <div className=\"form-group col-md-8 col-12\">\n            <TextEditor value={technique || ''} onChange={data => setTechnique(data)} error={errors && errors['technique']} />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-3 col-12 text-right gray-label\">Interpretation :</div>\n          <div className=\"form-group col-md-8 col-12\">\n            <TextEditor value={interpretation || ''} onChange={data => setInterpretation(data)} error={errors && errors['interpretation']} />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-3 col-12 text-right gray-label\">Method :</div>\n          <div className=\"form-group col-md-8 col-12\">\n            <TextEditor value={method || ''} onChange={data => setMethod(data)} error={errors && errors['method']} />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-3 col-12 text-right gray-label\">Remark :</div>\n          <div className=\"form-group col-md-8 col-12\">\n            <TextEditor value={remark || ''} onChange={data => setRemark(data)} error={errors && errors['remark']} />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-3 col-12 text-right gray-label\">Note :</div>\n          <div className=\"form-group col-md-8 col-12\">\n            <TextEditor value={note || ''} onChange={data => setNote(data)} error={errors && errors['note']} />\n          </div>\n        </div>\n      </div>\n      <div className=\"row mb-4 text-center\">\n        <div className=\"col-md-12\">\n          <OutlinedButton red className=\"mr-2\" onClick={handleCancel}>\n            Cancel\n          </OutlinedButton>\n          <OutlinedButton blue onClick={handleAddPanel} disabled={btnLoading} loading={btnLoading}>\n            Save\n          </OutlinedButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PanelForm;\n","import React from 'react';\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nconst TagInput = ({ tags, suggestions, handleDelete, handleAddition, error }) => {\n  return (\n    <div>\n      <ReactTags\n        tags={tags}\n        suggestions={suggestions}\n        handleDelete={handleDelete}\n        handleAddition={handleAddition}\n        allowUnique={false}\n        delimiters={delimiters}\n        placeholder=\"\"\n        autofocus={false}\n      />\n      {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n    </div>\n  );\n};\nexport default TagInput;\n","import React, { useState, useCallback, useContext } from 'react';\nimport AsyncSelectInput from '../../../../components/FormInputs/AsyncSelectInput/AsyncSelectInput';\nimport TagInput from '../../../../components/FormInputs/TagInput/TagInput';\nimport { ProfileContext } from '../../../../context/context';\nimport { makeRequest } from '../../../../utils/api';\n\nconst FormulaForm = ({ dependentTests, setDependentTests, formula, setFormula, error, reportTypeId }) => {\n  const [masterTestList, setMasterTestList] = useState([]);\n  const loginAs = localStorage.getItem('loginAs');\n  const { profile } = useContext(ProfileContext);\n\n  let testMasterBaseUrl = '/super_admin/';\n  if(loginAs == \"lab-admin\") testMasterBaseUrl = `/lab_group/${profile?.selectedRole?.uuid}/`;\n  else if(loginAs == \"lab\") testMasterBaseUrl = `/lab/${profile?.selectedRole?.uuid}/`;\n\n  const getMasterTestList = useCallback(\n    async search => {\n      const {data, status} = await makeRequest({\n        url: `${testMasterBaseUrl}tests?${search ? `search=${search}&` : ''}${reportTypeId ? `report_type=${reportTypeId}` : ''}`,\n        method: 'GET',\n        isAuth: true,\n      });\n      if (status === 200 && data) {\n        const newData =\n          data.data &&\n          data.data.length &&\n          [...data.data]\n            .filter(test => test.type === 'test')\n            .map(test => ({ label: test.name, value: test.uuid, text: test.name, id: test.name, type: 'test' }));\n        setMasterTestList(newData);\n        return newData;\n      }\n      return;\n    },\n    [reportTypeId],\n  );\n\n  const handleDelete = i => {\n    formula.splice(i, 1);\n    setFormula(formula);\n  };\n\n  const handleAddition = tag => {\n    setFormula([...formula, { ...tag }]);\n  };\n\n  return (\n    <div className=\"paper\">\n      <label className=\"paper-label semi-bold mb-3\">Formula</label>\n      <div className=\"row mb-4\">\n        <div className=\"form-group col-12\">\n          <label className=\"gray-label\">Search & Select Dependent Tests</label>\n          <AsyncSelectInput\n            isMulti\n            options={masterTestList}\n            noOptionsMessage=\"Search & Select Tests\"\n            FilterData={getMasterTestList}\n            value={dependentTests}\n            onChange={option => (option && option.length ? setDependentTests([...option]) : setDependentTests())}\n            error={error && error['formula.test_dependent_on']}\n          />\n        </div>\n      </div>\n      <div className=\"row mb-4\">\n        <div className=\"form-group col-12\">\n          <label className=\"gray-label\">Formula : </label> <br />\n          <TagInput\n            tags={formula}\n            suggestions={dependentTests}\n            handleDelete={handleDelete}\n            handleAddition={handleAddition}\n            error={error && error['formattedFormulaError']}\n          ></TagInput>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormulaForm;\n","import React from 'react';\nimport { AddTestIcon, CloseIcon } from '../../../../assets/icons';\nimport { TextButton } from '../../../../components/Buttons/Button';\nimport TextEditor from '../../../../components/Common/TextEditor/TextEditor';\nimport RadioButton from '../../../../components/FormInputs/RadioButton/RadioButton';\nimport SelectInput from '../../../../components/FormInputs/SelectInput/SelectInput';\nimport Textarea from '../../../../components/FormInputs/Textarea/Textarea';\nimport TextInput from '../../../../components/FormInputs/TextInput/TextInput';\nimport { GenderList } from '../../../../utils/masters';\n\nconst ReferenceRange = ({ testValidation, setTestValidation, defaultTestValidation, errors }) => {\n  const addNewRange = () => {\n    setTestValidation([...testValidation, { ...defaultTestValidation }]);\n  };\n  const removeRow = ind => {\n    let temp = [...testValidation];\n    temp.splice(ind, 1);\n    setTestValidation([...temp]);\n  };\n  const onHandleChange = (value, key, ind) => {\n    let obj = [...testValidation];\n    obj[ind][key] = value;\n    setTestValidation([...obj]);\n  };\n  return (\n    <div className=\"paper test-range-form\">\n      <label className=\"paper-label semi-bold mb-3\">Report Type - Reference Range</label>\n      <table className=\"custom-table report-type-table mb-3\">\n        <thead>\n          <tr>\n            <th>Gender</th>\n            <th>Min. Age (in days)</th>\n            <th>Max. Age (in days)</th>\n            <th>Lower Value</th>\n            <th>Upper Value</th>\n            <th>Text</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {testValidation &&\n            testValidation.length &&\n            testValidation.map((data, ind) => (\n              <tr key={ind}>\n                <td>\n                  <SelectInput\n                    options={GenderList}\n                    value={\n                      data.gender && typeof data.gender === 'string'\n                        ? { label: data.gender, value: data.gender }\n                        : data.gender || GenderList[0]\n                    }\n                    onChange={val => onHandleChange(val, 'gender', ind)}\n                    error={errors && errors[`test_validation.${ind}.gender`]}\n                  ></SelectInput>\n                </td>\n                <td>\n                  <TextInput\n                    type=\"number\"\n                    value={data.age_from || ''}\n                    onChange={e => onHandleChange(e.target.value, 'age_from', ind)}\n                    error={errors && errors[`test_validation.${ind}.age_from`]}\n                  />\n                </td>\n                <td>\n                  <TextInput\n                    type=\"number\"\n                    value={data.age_to || ''}\n                    onChange={e => onHandleChange(e.target.value, 'age_to', ind)}\n                    error={errors && errors[`test_validation.${ind}.age_to`]}\n                  />\n                </td>\n                <td>\n                  <TextInput\n                    type=\"number\"\n                    value={data.range_from || ''}\n                    onChange={e => onHandleChange(e.target.value, 'range_from', ind)}\n                    error={errors && errors[`test_validation.${ind}.range_from`]}\n                  />\n                </td>\n                <td>\n                  <TextInput\n                    type=\"number\"\n                    value={data.range_to || ''}\n                    onChange={e => onHandleChange(e.target.value, 'range_to', ind)}\n                    error={errors && errors[`test_validation.${ind}.range_to`]}\n                  />\n                </td>\n                <td>\n                  <TextInput\n                    value={data.text || ''}\n                    onChange={e => onHandleChange(e.target.value, 'text', ind)}\n                    error={errors && errors[`test_validation.${ind}.text`]}\n                  />\n                </td>\n                <td>\n                  {testValidation.length > 1 ? (\n                    <TextButton className=\"row-remove-btn\" onClick={() => removeRow(ind)}>\n                      {CloseIcon}\n                    </TextButton>\n                  ) : (\n                    ''\n                  )}\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <TextButton blue withIcon onClick={addNewRange}>\n        <div className=\"d-flex\">\n          <span className=\"add-circle-outline  mr-2\">{AddTestIcon}</span>\n          <p>ADD MORE</p>\n        </div>\n      </TextButton>\n    </div>\n  );\n};\n\nconst PossibleTestResult = ({ defaultPossibleTestResult, possibleTestResult, setPossibleTestResult, errors }) => {\n  const addNewRange = () => {\n    setPossibleTestResult([...possibleTestResult, ...defaultPossibleTestResult]);\n  };\n  const removeRow = ind => {\n    let temp = [...possibleTestResult];\n    temp.splice(ind, 1);\n    setPossibleTestResult([...temp]);\n  };\n  const onHandleChange = (value, key, ind) => {\n    let obj = [...possibleTestResult];\n    obj[ind] = {\n      ...obj[ind],\n      [key]: value,\n    };\n    setPossibleTestResult([...obj]);\n  };\n  return (\n    <div className=\"paper possible-test-result-form\">\n      <label className=\"paper-label semi-bold mb-3\">Report Type - Possible Test Results</label>\n      <table className=\"custom-table report-type-table mb-3\">\n        <thead>\n          <tr>\n            <th>Possible Test Results</th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {possibleTestResult &&\n            possibleTestResult.length &&\n            possibleTestResult.map((data, ind) => (\n              <tr key={ind}>\n                <td>\n                  <TextInput\n                    value={data.result || ''}\n                    onChange={e => onHandleChange(e.target.value, 'result', ind)}\n                    error={errors && errors[`test_validation.${ind}.age_from`]}\n                  />\n                </td>\n                <td>\n                  <div className=\"d-flex justify-content-center\">\n                    <RadioButton\n                      className=\"mr-4\"\n                      label=\"Normal\"\n                      checked={!data.abnormal}\n                      onClick={() => onHandleChange(false, 'abnormal', ind)}\n                    ></RadioButton>\n                    <RadioButton\n                      label=\"Abnormal\"\n                      checked={data.abnormal}\n                      onClick={() => onHandleChange(true, 'abnormal', ind)}\n                    ></RadioButton>\n                  </div>\n                </td>\n                <td>\n                  {possibleTestResult.length > 1 ? (\n                    <TextButton className=\"row-remove-btn\" onClick={() => removeRow(ind)}>\n                      {CloseIcon}\n                    </TextButton>\n                  ) : (\n                    ''\n                  )}\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <TextButton blue withIcon onClick={addNewRange}>\n        <div className=\"d-flex\">\n          <span className=\"add-circle-outline  mr-2\"></span>\n          <p>ADD MORE</p>\n        </div>\n      </TextButton>\n    </div>\n  );\n};\n\nconst PreDefinedTestResult = ({ preDefineResult, setPreDefineResult, errors }) => {\n  return (\n    <div className=\"paper pre-defined-test-result-form\">\n      <label className=\"paper-label semi-bold mb-3\">Report Type - Pre-defined Test Results</label>\n      <table className=\"custom-table report-type-table mb-3\">\n        <thead>\n          <tr>\n            <th width=\"50%\">Pre-defined Test Results</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <TextEditor\n                value={preDefineResult || ''}\n                onChange={data => setPreDefineResult(data)}\n                error={errors && errors['pre_define_result']}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport { ReferenceRange, PossibleTestResult, PreDefinedTestResult };\n","import React, { useEffect, useState, useContext } from 'react';\nimport CheckboxInput from '../../../../components/FormInputs/Checkbox/CheckboxInput';\nimport SelectInput from '../../../../components/FormInputs/SelectInput/SelectInput';\nimport TextInput from '../../../../components/FormInputs/TextInput/TextInput';\nimport Textarea from '../../../../components/FormInputs/Textarea/Textarea';\nimport FormulaForm from './FormulaForm';\nimport { PossibleTestResult, PreDefinedTestResult, ReferenceRange } from './ReportTypes';\nimport { fetchRequest } from '../../../../utils/api';\nimport RadioButton from '../../../../components/FormInputs/RadioButton/RadioButton';\nimport { GenderList } from '../../../../utils/masters';\nimport { OutlinedButton } from '../../../../components/Buttons/Button';\nimport Notification from '../../../../components/Notification/Notification';\nimport { useParams } from 'react-router-dom';\nimport AsyncSelectInput from '../../../../components/FormInputs/AsyncSelectInput/AsyncSelectInput';\nimport { ProfileContext } from '../../../../context/context';\nimport { validateForm } from '../../../../utils/custom';\nimport { TextEditor } from '../../../../components/Common/TextEditor/TextEditor';\n\nconst operatorsRegExp = /[$&+,:;=?@#|'<>^*()%!-/%]/;\nconst numberRegExp = /^-?\\d+\\.?\\d*$/;\nconst defaultState = {\n  type: 'test',\n  test_category: null,\n  report_type: null,\n  unit: null,\n  name: '',\n  short_name: '',\n  gender: null,\n  cost: '',\n  sample_type: null,\n  sample_quantity: '',\n  listable: true,\n  optional: false,\n  formula: [],\n};\n\nconst defaultTestValidation = { gender: GenderList[0], age_from: '', age_to: '', range_from: '', range_to: '', text: '' };\nconst defaultPossibleTestResult = [{ result: '', abnormal: false }];\nconst TestForm = props => {\n  const loginAs = localStorage.getItem('loginAs');\n  const { profile } = useContext(ProfileContext);\n  const [categories, setCategories] = useState([]);\n  const [reportTypes, setReportTypes] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [sampleTypes, setSampleTypes] = useState([]);\n  const [errors, setErrors] = useState({});\n  const { testId } = useParams();\n  // const [loading, setLoading] = useState(false);\n  const [testData, setTestData] = useState({ ...defaultState });\n  const [testValidation, setTestValidation] = useState([{ ...defaultTestValidation }]);\n  const [possibleTestResult, setPossibleTestResult] = useState([...defaultPossibleTestResult]);\n  const [preDefineResult, setPreDefineResult] = useState();\n  const { test_category, report_type, unit, name, short_name, gender, cost, sample_type, sample_quantity, listable, optional, formula } = testData;\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [dependentTests, setDependentTests] = useState([]);\n  //Editor initials\n  const [technique, setTechnique] = useState('');\n  const [interpretation, setInterpretation] = useState('');\n  const [method, setMethod] = useState('');\n  const [remark, setRemark] = useState('');\n  const [note, setNote] = useState('');\n\n  let testMasterBaseUrl = '/super_admin/';\n  if(loginAs == \"lab-admin\") testMasterBaseUrl = `/lab_group/${profile?.selectedRole?.uuid}/`;\n  else if(loginAs == \"lab\") testMasterBaseUrl = `/lab/${profile?.selectedRole?.uuid}/`;\n\n  useEffect(() => {\n    getCategories();\n    getReportTypes();\n    getUnits();\n    getSampleTypes();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    if (props.obj && props.obj.testData) {\n      const testData = { ...props.obj.testData };\n      testData.formula = testData.formula?.length\n        ? testData.formula.map(({ type, value, details }) =>\n            type === 'test'\n              ? { label: details.name, value, id: value, text: details.name, type }\n              : { label: value, value, id: value, text: value, type },\n          )\n        : [];\n      let tempDependentTests = testData.test_dependency?.length\n        ? testData.test_dependency.map(val => ({ label: val.test.name, value: val.test.uuid, text: val.test.name, id: val.test.uuid, type: 'test' }))\n        : [];\n      setDependentTests(tempDependentTests);\n      setTestData(testData);\n      //Editor state\n      setTechnique(testData.technique)\n      setInterpretation(testData.interpretation)\n      setMethod(testData.method)\n      setRemark(testData.remark)\n      setNote(testData.note);\n\n      testData?.test_validations?.length && setTestValidation(testData.test_validations);\n      testData?.possible_test_results?.length && setPossibleTestResult(testData.possible_test_results);\n      setPreDefineResult(testData.pre_define_result);\n    }\n  }, [props]);\n\n  const handleCancel = () => {\n    if (testId) {\n      const viewTestLink = ['lab-admin','lab'].includes(loginAs) ? `/${loginAs}/setting/view-test/${testId}` : `/${loginAs}/view-test/${testId}`;\n      props.history.push(viewTestLink);\n    } else {\n      setTestData({ ...defaultState });\n      //Editor state\n      setTechnique('')\n      setInterpretation('')\n      setMethod('')\n      setRemark('')\n      setNote('');\n\n      setTestValidation([{ ...defaultTestValidation }]);\n      setPossibleTestResult([...defaultPossibleTestResult]);\n      setPreDefineResult();\n    }\n  };\n\n  const getCategories = async () => {\n    const res = await fetchRequest({ url: `${testMasterBaseUrl}test_categories`, method: 'GET', isAuth: true });\n    if (res && res.status === 200) {\n      const { data } = await res.json();\n      const newData = data && data.length && [...data].map(test_category => ({ label: test_category.name, value: test_category.uuid }));\n      setCategories(newData);\n      return data;\n    }\n    return;\n  };\n\n  const getReportTypes = async () => {\n    const res = await fetchRequest({ url: `${testMasterBaseUrl}report_types`, method: 'GET', isAuth: true });\n    if (res && res.status === 200) {\n      const { data } = await res.json();\n      const newData = data && data.length && [...data].map(report_type => ({ label: report_type.name, value: report_type.uuid }));\n      setReportTypes(newData);\n      return data;\n    }\n    return;\n  };\n\n  const getUnits = async search => {\n    const res = await fetchRequest({\n      url: `${testMasterBaseUrl}units${search ? `?search=${search}` : ''}`,\n      method: 'GET',\n      isAuth: true,\n    });\n    if (res && res.status === 200) {\n      const { data } = await res.json();\n      const newData = data && data.length && [...data].map(unit => ({ label: unit.name, value: unit.uuid }));\n      setUnits(newData);\n      return newData;\n    }\n  };\n\n  const getSampleTypes = async () => {\n    const res = await fetchRequest({ url: `${testMasterBaseUrl}samples`, method: 'GET', isAuth: true });\n    if (res && res.status === 200) {\n      const { data } = await res.json();\n      const newData = data && data.length && [...data].map(sample_type => ({ label: sample_type.name, value: sample_type.uuid }));\n      setSampleTypes(newData);\n      return data;\n    }\n    return;\n  };\n\n  const onHandleChange = (value, key) => {\n    let obj = { ...testData };\n    obj[key] = value;\n    setTestData(obj);\n  };\n\n  const handleAddTest = async () => {\n    setErrors({});\n    setBtnLoading(true);\n    setNotification({ show: false, message: '', type: '' });\n    \n    const errors = validateForm({ name, test_categories_id : test_category && test_category.value, report_type_id : report_type && report_type.value, unit_id : unit && unit.value, gender : gender && gender.value });\n    setErrors({ ...errors });\n\n    if (!Object.keys(errors).length) {\n      const formattedDependentTests = dependentTests?.length ? [...dependentTests].map(val => val.value) : [];\n      const formattedFormula = [...formula]?.length\n        ? [...formula].map(val => {\n            if (val.type === 'test') {\n              return { type: 'test', value: val.value || val.id };\n            } else {\n              return numberRegExp.test(parseFloat(val.text)) \n                ? { type: 'int', value: parseFloat(val.text) } \n                : operatorsRegExp.test(val.text)\n                ? { type: 'operator', value: val.text }\n                : { type: 'none', value: val.text };\n            }\n          })\n        : null;\n\n      let body = {\n        type: 'test',\n        test_categories_id: test_category && test_category.value,\n        report_type_id: report_type && report_type.value,\n        unit_id: unit && unit.value,\n        name,\n        short_name,\n        gender: gender && gender.value,\n        cost,\n        sample_type_id: sample_type && sample_type.value,\n        sample_quantity: parseFloat(sample_quantity),\n        listable,\n        optional,\n        technique,\n        interpretation,\n        method,\n        remark,\n        note,\n        formula: null,\n      };\n\n      if (formattedFormula) {\n        body = {\n          ...body,\n          formula: {\n            test_dependent_on: formattedDependentTests?.length ? [...formattedDependentTests] : null,\n            formula: [...formattedFormula],\n          },\n        };\n      }\n\n      if (report_type && report_type.label === 'Range') {\n        let temp =\n          testValidation && testValidation.length\n            ? [...testValidation].map(range => ({\n                ...range,\n                gender: range.gender && typeof range.gender === 'string' ? range.gender : range.gender.value,\n              }))\n            : null;\n\n        body = {\n          ...body,\n          test_validation: temp,\n        };\n      }\n      if (report_type && report_type.label === 'Possible Test Results') {\n        let temp = possibleTestResult && possibleTestResult.length ? [...possibleTestResult] : null;\n\n        body = {\n          ...body,\n          possible_results: temp,\n        };\n      }\n      if (report_type && report_type.label === 'Pre-Defined Test Result') {\n        body = {\n          ...body,\n          pre_define_result: preDefineResult,\n        };\n      }\n\n      let url = `${testMasterBaseUrl}tests`, urlMethod = 'POST';\n      \n      if (testId) {\n        url = `${url}/${testId}`;\n        urlMethod = 'PUT';\n      }\n      if (url) {\n        const res = await fetchRequest({ url, method: urlMethod, isAuth: true, body });\n        setBtnLoading(false);\n        if (res && res.status === 200) {\n          const data = await res.json();\n          if (data.success) {\n            data.message && setNotification({ show: true, message: data.message, type: 'success' });\n            setTimeout(() => props.history.goBack(), 2000);\n          }\n        } else {\n          const errObj = await res.json();\n          const errors = { ...errObj.errors };\n          const formulaErrorKeys = Object.keys(errors).filter(key => key.includes('formula.formula'));\n          const tags = formulaErrorKeys?.length\n            ? formulaErrorKeys.map((key, ind) => {\n                const addComma = ind + 1 === formulaErrorKeys.length ? ', ' : ' ';\n                return parseInt(key.split('.')[2]) + 1 + addComma;\n              })\n            : null;\n          if (tags) errors.formattedFormulaError = tags + 'inputs are not valid.';\n\n          setErrors(errors);\n          res.status !== 422 &&\n            !Object.keys(errObj.error ? errObj.error : {}).length &&\n            errObj.message &&\n            setNotification({ show: true, message: errObj.message, type: 'error' });\n        }\n      }\n    }else{\n      setBtnLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-content\">\n    <Notification {...notification} />\n      <div className=\"paper\">\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-5 col-12\">\n            <SelectInput\n              options={categories}\n              value={test_category}\n              placeholder=\"Category*\"\n              onChange={value => onHandleChange(value, 'test_category')}\n              error={errors && errors['test_categories_id']}\n            ></SelectInput>\n          </div>\n          <div className=\"form-group col-md-4 col-12\">\n            <SelectInput\n              options={reportTypes}\n              value={report_type}\n              placeholder=\"Report Type*\"\n              onChange={value => onHandleChange(value, 'report_type')}\n              error={errors && errors['report_type_id']}\n            ></SelectInput>\n          </div>\n          <div className=\"form-group col-md-3 col-12\">\n            {/* <SelectInput\n              options={units}\n              value={unit}\n              placeholder=\"Unit\"\n              onChange={value => onHandleChange(value, 'unit')}\n              error={errors && errors['unit_id']}\n            ></SelectInput> */}\n            <AsyncSelectInput\n              placeholder=\"Unit*\"\n              options={units}\n              FilterData={getUnits}\n              value={unit}\n              onChange={value => onHandleChange(value, 'unit')}\n              error={errors && errors['unit_id']}\n            />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-5 col-12\">\n            <TextInput\n              placeholder=\"Test Name*\"\n              value={name || ''}\n              onChange={e => onHandleChange(e.target.value, 'name')}\n              error={errors && errors['name']}\n            />\n          </div>\n          <div className=\"form-group col-md-3 col-12\">\n            <TextInput\n              placeholder=\"Short Name\"\n              value={short_name || ''}\n              onChange={e => onHandleChange(e.target.value, 'short_name')}\n              error={errors && errors['short_name']}\n            />\n          </div>\n          <div className=\"form-group col-md-3 col-12\">\n            <SelectInput\n              options={GenderList}\n              value={gender}\n              placeholder=\"Gender*\"\n              onChange={value => onHandleChange(value, 'gender')}\n              error={errors && errors['gender']}\n            ></SelectInput>\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"form-group col-md-3 col-12\">\n            <TextInput\n              placeholder=\"Cost\"\n              value={cost || ''}\n              onChange={e => onHandleChange(e.target.value, 'cost')}\n              error={errors && errors['cost']}\n              type=\"number\"\n            />\n          </div>\n          <div className=\"form-group col-md-5 col-12\">\n            <SelectInput\n              options={sampleTypes}\n              value={sample_type}\n              placeholder=\"Sample Type\"\n              onChange={value => onHandleChange(value, 'sample_type')}\n              error={errors && errors['sample_type']}\n            ></SelectInput>\n          </div>\n          <div className=\"form-group col-md-4 col-12\">\n            <TextInput\n              placeholder=\"Sample Quantity (Optional)\"\n              value={sample_quantity || ''}\n              onChange={e => onHandleChange(e.target.value, 'sample_quantity')}\n              error={errors && errors['sample_quantity']}\n            />\n          </div>\n        </div>\n        <div className=\"row mb-3\">\n          <div className=\"form-group col-md-3\">\n            <CheckboxInput name=\"trial_package\" label=\"Listable\" checked={listable} blue onClick={() => onHandleChange(!listable, 'listable')} />\n          </div>\n          <div className=\"form-group col-md-3\">\n            <CheckboxInput name=\"trial_package\" label=\"Optional\" checked={optional} blue onClick={() => onHandleChange(!optional, 'optional')} />\n          </div>\n        </div>\n          <div className=\"row mb-4\">\n            <div className=\"col-md-3 col-12 text-right gray-label\">Technique :</div>\n            <div className=\"form-group col-md-8 col-12\">\n              <TextEditor\n                value={technique || ''}\n                onChange={data => setTechnique(data)}\n                error={errors && errors['technique']}\n              />\n            </div>\n          </div>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-3 col-12 text-right gray-label\">Interpretation :</div>\n          <div className=\"form-group col-md-8 col-12\">\n            <TextEditor\n              value={interpretation || ''}\n              onChange={data => setInterpretation(data)}\n              error={errors && errors['interpretation']}\n            />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-3 col-12 text-right gray-label\">Method :</div>\n          <div className=\"form-group col-md-8 col-12\">\n            <TextEditor value={method || ''} onChange={data => setMethod(data)} error={errors && errors['method']} />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-3 col-12 text-right gray-label\">Remark :</div>\n          <div className=\"form-group col-md-8 col-12\">\n            <TextEditor value={remark || ''} onChange={data => setRemark(data)} error={errors && errors['remark']} />\n          </div>\n        </div>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-3 col-12 text-right gray-label\">Note :</div>\n          <div className=\"form-group col-md-8 col-12\">\n            <TextEditor value={note || ''} onChange={data => setNote(data)} error={errors && errors['note']} />\n          </div>\n        </div>\n      </div>\n      {report_type && (report_type.label === 'Range' || report_type.label === 'Numeric Test Result') && (\n        <FormulaForm\n          dependentTests={dependentTests}\n          setDependentTests={setDependentTests}\n          formula={formula}\n          setFormula={value => onHandleChange(value, 'formula')}\n          error={errors}\n          reportTypeId={report_type.value}\n        ></FormulaForm>\n      )}\n      {report_type && report_type.label === 'Range' && (\n        <ReferenceRange\n          defaultTestValidation={defaultTestValidation}\n          testValidation={testValidation}\n          setTestValidation={setTestValidation}\n          errors={errors}\n        ></ReferenceRange>\n      )}\n      {report_type && report_type.label === 'Possible Test Results' && (\n        <PossibleTestResult\n          defaultPossibleTestResult={defaultPossibleTestResult}\n          possibleTestResult={possibleTestResult}\n          setPossibleTestResult={setPossibleTestResult}\n          errors={errors}\n        ></PossibleTestResult>\n      )}\n      {report_type && report_type.label === 'Pre-Defined Test Result' && (\n        <PreDefinedTestResult preDefineResult={preDefineResult} setPreDefineResult={setPreDefineResult} errors={errors}></PreDefinedTestResult>\n      )}\n      <div className=\"row mb-4 text-center\">\n        <div className=\"col-md-12\">\n          <OutlinedButton red className=\"mr-2\" onClick={handleCancel}>\n            Cancel\n          </OutlinedButton>\n          <OutlinedButton blue onClick={handleAddTest} disabled={btnLoading} loading={btnLoading}>\n            Save\n          </OutlinedButton>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default TestForm;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ProfileContext } from '../../../../context/context';\nimport { fetchRequest } from '../../../../utils/api';\nimport { GenderList } from '../../../../utils/masters';\nimport RadioButton from '../../../FormInputs/RadioButton/RadioButton';\nimport GroupForm from './GroupForm';\nimport PackageForm from './PackageForm';\nimport PanelForm from './PanelForm';\nimport TestForm from './TestForm';\n\nconst AddTestDetails = props => {\n  const loginAs = localStorage.getItem('loginAs');\n  const { profile } = useContext(ProfileContext);\n  const [detailsType, setDetailsType] = useState('test');\n  const { testId } = useParams();\n  const [testData, setTestData] = useState(null);\n  // const [loading, setLoading] = useState(false);\n\n  let testMasterBaseUrl = '/super_admin/';\n  if(loginAs == \"lab-admin\") testMasterBaseUrl = `/lab_group/${profile?.selectedRole?.uuid}/`;\n  else if(loginAs == \"lab\") testMasterBaseUrl = `/lab/${profile?.selectedRole?.uuid}/`;\n  \n  const getSignleTestData = useCallback(async () => {\n    // setLoading(true);\n    if (testId) {\n      const res = await fetchRequest({ url: `${testMasterBaseUrl}tests/${testId}`, method: 'GET', isAuth: true });\n      if (res && res.status === 200) {\n        // setLoading(false);\n        const { data } = await res.json();\n        setTestData({\n          ...data,\n          test_category: { label: data.test_category.name, value: data.test_category.uuid },\n          report_type: { label: data.report_type.name, value: data.report_type.uuid, ...data.report_type },\n          unit: { label: data.unit?.name, value: data.unit?.uuid, ...data.unit },\n          sample_type: { label: data.sample_type?.name, value: data.sample_type?.uuid, ...data.sample_type },\n          gender: GenderList.find(gender => gender.value === data.gender),\n        });\n        setDetailsType(data.type);\n        return data;\n      } // else { setLoading(false); }\n      return;\n    }\n  }, [testId]);\n\n  useEffect(() => {\n    if (testId) getSignleTestData();\n  }, [testId, getSignleTestData]);\n\n  return (\n    <div className=\"add-test-container\">\n      <div className=\"paper select-test-type\">\n        <label className=\"paper-label semi-bold mb-3\">Select and add details</label>\n        <div className=\"d-flex\">\n          {!testId ? (\n            <>\n              <RadioButton label=\"Test\" checked={detailsType == \"test\"} onClick={() => setDetailsType('test')} className=\"mr-5\"></RadioButton>\n              <RadioButton label=\"Group\" checked={detailsType == \"group\"} onClick={() => setDetailsType('group')} className=\"mr-5\"></RadioButton>\n              <RadioButton label=\"Panel\" checked={detailsType == \"panel\"}onClick={() => setDetailsType('panel')} className=\"mr-5\"></RadioButton>\n              {['lab-admin','lab'].includes(loginAs) && <RadioButton label=\"Package\" checked={detailsType == \"package\"} onClick={() => setDetailsType('package')}></RadioButton>}\n            </>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n      {/* Form Type Test */}\n      {detailsType === 'test' && <TestForm obj={{ setDetailsType, testData }} {...props}></TestForm>}\n\n      {/* Form Group Test */}\n      {detailsType === 'group' && <GroupForm obj={{ setDetailsType, testData }} {...props}></GroupForm>}\n\n      {/* Form Panel Test */}\n      {detailsType === 'panel' && <PanelForm obj={{ setDetailsType, testData }} {...props}></PanelForm>}\n\n      {/* Form Package Test */}\n      {['lab-admin','lab'].includes(loginAs) && detailsType === 'package' && <PackageForm obj={{ setDetailsType, testData }} {...props}></PackageForm>}\n      </div>\n  );\n};\n\nexport default AddTestDetails;\n","import React from 'react';\n\nfunction Textarea({ placeholder, rows = 2, value, name, onChange, error, disabled = false, icon, className = '', maxLength, hasGrayBack }) {\n  let hasError = error ? 'has-error' : '';\n  className += ` form-control ${value ? 'has-value' : ''} ${hasGrayBack ? 'background-gray' : ''}`;\n  // const inputRef = useRef(null);\n  // if (error) {\n  //   inputRef.current.focus();\n  // }\n  return (\n    <>\n      <div className={`input-group text-area ${hasError}`}>\n        <textarea className={className} value={value} rows={rows} onChange={onChange} maxLength={maxLength} />\n        <label>{placeholder}</label>\n        {icon ? <span className=\"input-icon\">{icon}</span> : <></>}\n      </div>\n      {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n    </>\n  );\n}\n\nexport default Textarea;\n","import React, { useRef } from 'react';\nimport AsyncSelect from 'react-select/async';\n\nconst AsyncSelectInput = ({\n  className = '',\n  options = [],\n  noOptionsMessage,\n  value,\n  onChange,\n  placeholder,\n  error,\n  hasGrayBack = false,\n  isMulti = false,\n  hideSelectedOptions = true,\n  isClearable = true,\n  disabled,\n  isLoading,\n  FilterData,\n}) => {\n  let parentClass = `input-group select-control-input ${error ? 'has-error' : ''} ${hasGrayBack ? 'background-gray' : ''} ${\n    value && value.value ? 'has-value' : ''\n  } ${disabled ? 'cursor-notAllowed' : ''}`;\n\n  className += ` select-input `;\n  const parentRef = useRef(null);\n\n  const loadOptions = inputValue => {\n    return inputValue.length && FilterData(inputValue);\n  };\n\n  return (\n    <>\n      <div className={parentClass} ref={parentRef}>\n        <AsyncSelect\n          value={value}\n          defaultOptions={options}\n          noOptionsMessage={() => noOptionsMessage}\n          onChange={onChange}\n          loadOptions={loadOptions}\n          className={className}\n          classNamePrefix=\"select-input\"\n          placeholder={<div>{''}</div>}\n          onFocus={() => parentRef.current.classList.add('select-focused')}\n          onBlur={() => parentRef.current.classList.remove('select-focused')}\n          isClearable={isClearable}\n          isMulti={isMulti}\n          removeSelected={false}\n          isDisabled={disabled}\n          isLoading={isLoading}\n        />\n        <label className=\"select-placeholder\">{placeholder}</label>\n      </div>\n      {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n    </>\n  );\n};\nexport default AsyncSelectInput;\n","const GenderList = [\n  { label: 'Both', value: 'both' },\n  { label: 'Male', value: 'male' },\n  { label: 'Female', value: 'female' },\n];\n\nconst PatientGenderList = [\n  { label: 'Male', value: 'male' },\n  { label: 'Female', value: 'female' },\n];\n\nconst OperatorList = [\n  { label: '+', value: '+' },\n  { label: '-', value: '-' },\n  { label: '*', value: '*' },\n  { label: '/', value: '/' },\n  { label: '(', value: '(' },\n  { label: ')', value: ')' },\n];\n\nconst BloodGroupList = [\n  { label: 'A+', value: 'A+' },\n  { label: 'A-', value: 'A-' },\n  { label: 'B+', value: 'B+' },\n  { label: 'B-', value: 'B-' },\n  { label: 'O+', value: 'O+' },\n  { label: 'O-', value: 'O-' },\n  { label: 'AB+', value: 'AB+' },\n  { label: 'AB-', value: 'AB-' },\n];\n\nexport { GenderList, PatientGenderList, OperatorList, BloodGroupList };\n","import React from 'react';\nimport { CheckedRadioButtonIcon, RadioButtonIcon } from '../../../assets/icons';\n\nfunction RadioButton({ className, name, label, value, checked = false, onClick, blue, red }) {\n  return (\n    <div className={`d-flex radio-button ${className}`}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={onClick} //As it is an Input Element onChange method needed for any changeEvent.\n      />\n      <div className=\"mr-2 radio-checked\" onClick={onClick}>\n        {checked ? CheckedRadioButtonIcon : RadioButtonIcon}\n      </div>\n      <label dangerouslySetInnerHTML={{ __html: label }}></label>\n    </div>\n  );\n}\n\nexport default RadioButton;\n","import React from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nexport const TextEditor = ({value, onChange,error}) => {\n    return (\n        <div className=\"ck-editor-wrapper\">\n            <CKEditor\n                editor={ ClassicEditor }\n                data={value}\n                onChange={ ( event, editor ) => {\n                    const data = editor.getData();\n                    onChange(data)\n                } }\n                config={{\n                    toolbar: ['heading', '|', 'bold', 'italic', 'bulletedList', 'numberedList','insertTable','undo','redo',],\n                }}\n                style={{ innerHeight : 200}}\n            />\n            {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n        </div>\n    )\n}\n\nexport default TextEditor;"],"sourceRoot":""}