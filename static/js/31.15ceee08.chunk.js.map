{"version":3,"sources":["components/FormInputs/TextInput/TextInput.jsx","components/FormInputs/SelectInput/SelectInput.jsx","components/Notification/Notification.jsx","components/Common/Card/Card.jsx","hooks/useDebounce.js","components/Common/SearchBox/SearchBox.jsx","utils/constants.js","pages/Admin/Dashboard/DemoRequest/DemoRequest.jsx","components/FormInputs/Checkbox/CheckboxInput.jsx","components/Paginate/Paginate.jsx","components/Modal/TableCardModal.jsx","components/Table/Table.jsx","components/Popover/Popover.jsx"],"names":["TextInput","type","placeholder","value","name","onChange","onBlur","error","disabled","icon","className","hasGrayBack","showPass","maxLength","ref","useState","showPassword","setShowPassword","hasError","inputRef","useRef","autoComplete","onClick","hidePasswordEye","showPasswordEye","SelectInput","options","isMulti","hideSelectedOptions","isClearable","isLoading","hidePlaceholder","defaultValue","isSearchable","parentClass","parentRef","classNamePrefix","onFocus","current","classList","add","remove","removeSelected","isDisabled","Notification","message","callback","notify","useCallback","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","info","warn","useEffect","Card","title","children","list","cardType","centerHeader","cardName","searchBox","onSelectInputChange","input","length","role","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","memo","setFilter","filter","searchTerm","setSearchTerm","debouncedSearchTerm","search","current_page","e","target","Search","rupeeSymbol","conversionList","key","label","defaultLoadingState","all","statusList","demoRequestList","DemoRequest","setStatusList","selectedStatus","setSelectedStatus","date_from","moment","format","date_to","stats","setStats","setDemoRequest","loading","setLoading","show","notification","setNotification","columnDefs","dateFilter","selectDateRange","accessKey","cellRenderer","row","first_name","last_name","status","formatted_name","renderIcon","More","Restore","button","map","item","handleUpdateStatus","uuid","start","end","setState","getStatus","getStats","updateLoadingState","tempLoader","a","fetchRequest","url","method","isAuth","statusRes","json","data","res","getDemoRequest","demoRequestRes","id","body","errObj","ranges","Today","toDate","Yesterday","subtract","Tomorrow","initialSettings","maxDate","startDate","endDate","onCallback","_d","CalendarFilter","tableData","converted","total_demo_given_count","CheckboxInput","checked","blue","red","checkboxFillColor","CheckBoxBlue","dangerouslySetInnerHTML","__html","props","useContext","ProfileContext","profile","setProfileData","width","listName","perPageObj","initials","setInitials","per_page","pageState","setPageState","total_pages","total","getListPerPage","handlePageClick","selectedPage","selected","handlePerPage","obj","perPageData","perPageValue","localStorage","setItem","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","previousLinkClassName","nextLinkClassName","forcePage","defaultState","isModalOpen","TableCardModal","actionObject","MobileCardComponent","modal","handleModalToggle","modalIsOpen","closeModal","backdropClose","Modal","ind","classes","isAmount","keys","split","dataValue","Array","isArray","Fragment","Filter","renderFilterIcon","sortOrder","setSortOrder","handleSort","dataToSort","sort","some","push","findIndex","isSorted","Table","selectedFilters","openFilterAction","pagination","footerLink","renderCheckbox","isButtonCard","getListData","blankDataMessage","getSelectedData","tableClassName","useWindowSize","setActionObject","selectedData","setSelectedData","selectAll","setSelectAll","setCheckedData","val","arr","setSelectAllData","cursor","labelAsIcon","isCheckbox","keyToCheck","includes","style","backgroundColor","fontSize","padding","borderRadius","height","viewBox","fill","xmlns","d","colSpan","Math","random","renderIconText","isMobile","Paginate","withIcon","link","to","pathname","Popover","data-toggle","aria-haspopup","aria-expanded","aria-labelledby"],"mappings":"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","file":"static/js/31.15ceee08.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { hidePasswordEye, showPasswordEye } from '../../../assets/icons';\n\nfunction TextInput({\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onBlur,\n  error,\n  disabled = false,\n  icon,\n  className = '',\n  hasGrayBack = false,\n  showPass,\n  maxLength,\n  ref,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  let hasError = error ? 'has-error' : '';\n  className += ` form-control `;\n  const inputRef = useRef(null);\n  return (\n    <>\n      <div className={`input-group text-input ${hasError} ${hasGrayBack ? 'background-gray' : ''}`}>\n        <input\n          type={(showPass ? (!showPassword ? 'password' : 'text') : type) || 'text'}\n          className={className}\n          name={name}\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          ref={ref || inputRef}\n          disabled={disabled}\n          onBlur={onBlur}\n          maxLength={maxLength}\n        />\n        <label className=\"input-placeholder\">{placeholder}</label>\n        {icon ? <span className=\"input-icon\">{icon}</span> : <></>}\n        {showPass ? (\n          <span className=\"input-icon cursor-pointer\" onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? hidePasswordEye : showPasswordEye}\n          </span>\n        ) : (\n          <></>\n        )}\n        {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n      </div>\n    </>\n  );\n}\nexport default TextInput;\n","import React, { useRef } from 'react';\nimport Select from 'react-select';\n\nconst SelectInput = ({\n  className = '',\n  options = [],\n  value,\n  onChange,\n  placeholder,\n  error,\n  hasGrayBack = false,\n  isMulti = false,\n  hideSelectedOptions = true,\n  isClearable = true,\n  disabled,\n  isLoading,\n  hidePlaceholder,\n  defaultValue,\n  isSearchable = false,\n}) => {\n  let parentClass = `input-group select-control-input ${error ? 'has-error' : ''} ${hasGrayBack ? 'background-gray' : ''} ${\n    value && value.value ? 'has-value' : ''\n  } ${hidePlaceholder ? 'hide-placeholder' : ''} ${disabled ? 'cursor-notAllowed' : ''}`;\n\n  className += ` select-input `;\n  const parentRef = useRef(null);\n  return (\n    <>\n      <div className={parentClass} ref={parentRef}>\n        <Select\n          value={value}\n          onChange={onChange}\n          options={options}\n          className={className}\n          classNamePrefix=\"select-input\"\n          placeholder={<div>{''}</div>}\n          onFocus={() => parentRef.current.classList.add('select-focused')}\n          onBlur={() => parentRef.current.classList.remove('select-focused')}\n          isClearable={isClearable}\n          isMulti={isMulti}\n          removeSelected={false}\n          defaultValue={defaultValue}\n          isDisabled={disabled}\n          isLoading={isLoading}\n          isSearchable={isSearchable}\n        />\n        <label className=\"select-placeholder\">{placeholder}</label>\n      </div>\n      {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n    </>\n  );\n};\nexport default SelectInput;\n","import React, { useEffect, useCallback } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification({ message, type, callback }) {\n  const notify = useCallback(\n    type => {\n      switch (type) {\n        case 'success': {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          setTimeout(() => {\n            callback && callback();\n          }, 1500);\n          break;\n        }\n        case 'error':\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'info':\n          toast.info(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'warn':\n          toast.warn(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [callback, message],\n  );\n\n  useEffect(() => {\n    if (message && type) notify(type);\n  }, [message, notify, type]);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '../../FormInputs/SelectInput/SelectInput';\nimport SearchBox from '../SearchBox/SearchBox';\n\nconst Card = ({\n  title,\n  children,\n  list = [],\n  value,\n  cardType = 'table',\n  centerHeader = false,\n  cardName = '',\n  className = '',\n  searchBox,\n  onSelectInputChange,\n  isLoading = false,\n  input,\n}) => {\n  return (\n    <div className={`paper paper-card ${cardType === 'number' ? 'number-card' : ''} ${cardName} ${className}`}>\n      <div className={`content-header d-flex align-items-baseline ${centerHeader ? 'justify-content-center' : 'justify-content-between'}`}>\n        <p className=\"title\">{title}</p>\n        {input ? (\n          input\n        ) : list.length ? (\n          <div className=\"select-wrapper\">\n            <SelectInput\n              options={list}\n              value={value}\n              onChange={value => onSelectInputChange(value)}\n              isClearable={false}\n              isSearchable={false}\n            />\n          </div>\n        ) : (\n          <></>\n        )}\n        {searchBox ? <SearchBox /> : <></>}\n      </div>\n      {isLoading ? (\n        <div className=\"text-center\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : cardType === 'number' ? (\n        <div className=\"count font-weight-bold\">{children}</div>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\nCard.propTypes = { title: PropTypes.string, content: PropTypes.string, list: PropTypes.array };\n\nexport default Card;\n","import { useEffect, useState } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { memo, useEffect, useState } from 'react';\nimport { Search } from '../../../assets/icons';\nimport useDebounce from '../../../hooks/useDebounce';\nimport TextInput from '../../FormInputs/TextInput/TextInput';\n\nconst SearchBox = ({ setFilter, filter, className = '', placeholder }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  // const [results, setResults] = useState([]);\n  // const [isSearching, setIsSearching] = useState(false);\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(\n    () => {\n      if (setFilter) {\n        if (debouncedSearchTerm) {\n          setFilter({ ...filter, search: debouncedSearchTerm, current_page: 1 });\n          // setIsSearching(true);\n          // searchCharacters(debouncedSearchTerm).then(results => {\n          //   setIsSearching(false);\n          //   setResults(results);\n          // });\n        } else {\n          setFilter({ ...filter, search: '',current_page: 1 });\n          // setResults([]);\n        }\n      }\n    },\n    [debouncedSearchTerm], // eslint-disable-line react-hooks/exhaustive-deps\n    // Only call effect if debounced search term changes\n  );\n\n  return (\n    <div className={`form-group search-input-wrapper ${className}`}>\n      <TextInput\n        placeholder={placeholder}\n        value={searchTerm || ''} // Its taking null if no value is passed. Hence empty string passed\n        onChange={e => setSearchTerm(e.target.value)}\n        icon={Search}\n        className=\"search-input\"\n      ></TextInput>\n    </div>\n  );\n};\n\nexport default memo(SearchBox);\n","const rupeeSymbol = '₹';\n\nexport { rupeeSymbol };\n","import React, { useCallback, useEffect, useState } from 'react';\nimport SelectInput from '../../../../components/FormInputs/SelectInput/SelectInput';\nimport Card from '../../../../components/Common/Card/Card';\nimport Table from '../../../../components/Table/Table';\nimport { More, Restore, CalendarFilter } from '../../../../assets/icons';\nimport { fetchRequest } from '../../../../utils/api';\n// import DateInput from '../../../../components/FormInputs/DateInput/DateInput';\nimport moment from 'moment';\nimport Popover from '../../../../components/Popover/Popover';\nimport Notification from '../../../../components/Notification/Notification';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nconst conversionList = [\n  { key: 'converted', label: 'Converted' },\n  { key: 'not_converted', label: 'Not Converted' },\n  { key: 'trial_given', label: 'Trial Given' },\n  { key: 'unable_to_contact', label: 'Unable to Contact' },\n];\n\nconst defaultLoadingState = {\n  all: false,\n  statusList: false,\n  demoRequestList: false,\n};\n\nconst DemoRequest = () => {\n  /* eslint-disable no-unused-vars */\n  const [statusList, setStatusList] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [filter, setFilter] = useState({\n    date_from: moment().format('YYYY-MM-DD'),\n    date_to: moment().format('YYYY-MM-DD'),\n  });\n  const [stats, setStats] = useState([]);\n  const [demoRequestList, setDemoRequest] = useState([]);\n  const [loading, setLoading] = useState({\n    ...defaultLoadingState,\n  });\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n  const columnDefs = [\n    {\n      label: 'Date',\n      dateFilter: { show: true, selectDateRange: true },\n      accessKey: 'preferred_date',\n    },\n    {\n      label: 'Time',\n      accessKey: 'preferred_time',\n    },\n    {\n      label: 'Lab Name',\n      accessKey: 'lab_name',\n    },\n    {\n      label: 'Name',\n      accessKey: 'first_name',\n      cellRenderer: row => `${row.first_name} ${row.last_name}`,\n    },\n    {\n      label: 'Mobile No.',\n      accessKey: 'contact_number',\n    },\n    {\n      label: 'City',\n      accessKey: 'city',\n    },\n    {\n      label: 'Conversion',\n      accessKey: 'conversion',\n      cellRenderer: row => <span className={`status-${row.status.name}`}>{row.status.formatted_name}</span>,\n    },\n    {\n      label: 'Action',\n      accessKey: 'more',\n      renderIcon: More,\n      cellRenderer: row => (\n        <div className=\"d-flex align-items-center\">\n          {Restore}\n          <Popover button={<p className=\"table-icon\">{More}</p>}>\n            {conversionList.map(\n              (item, key) =>\n                item.key !== row.status.name && (\n                  <div\n                    key={key}\n                    onClick={() => (item.key ? handleUpdateStatus(row.uuid, item.key) : null)}\n                    className={`conversion status-${item.key} py-1`}\n                  >\n                    {item.label}\n                  </div>\n                ),\n            )}\n          </Popover>\n        </div>\n      ),\n    },\n  ];\n  const [state, setState] = useState({ start: moment(), end: moment() });\n\n  useEffect(() => {\n    getStatus();\n    getStats();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateLoadingState = (key, isLoading) => {\n    const tempLoader = { ...loading };\n    tempLoader[key] = isLoading;\n    setLoading(tempLoader);\n  };\n\n  const getStatus = () => {\n    updateLoadingState('statusList', true);\n    (async () => {\n      const statusRes = await fetchRequest({ url: '/super_admin/demo_statuses', method: 'GET', isAuth: true });\n      if (statusRes && statusRes.status === 200) {\n        updateLoadingState('statusList', false);\n\n        const { data } = await statusRes.json();\n        let statusList = [];\n        statusList = [\n          { label: 'All Demos', value: ' ' },\n          ...data.map(item => ({\n            label: item.formatted_name,\n            value: item.name,\n            ...item,\n          })),\n        ];\n        setStatusList(statusList);\n        setSelectedStatus();\n      } else {\n        updateLoadingState('statusList', false);\n      }\n      return;\n    })();\n  };\n\n  const getStats = () => {\n    updateLoadingState('all', true);\n    (async () => {\n      const res = await fetchRequest({\n        url: `/super_admin/todays_book_demo_stats`,\n        method: 'GET',\n        isAuth: true,\n      });\n\n      if (res && res.status === 200) {\n        updateLoadingState('all', false);\n        const data = await res.json();\n        setStats(data.data);\n        return data;\n      } else {\n        updateLoadingState('all', false);\n      }\n      return;\n    })();\n  };\n\n  const getDemoRequest = useCallback(async () => {\n    updateLoadingState('demoRequestList', true);\n    const { date_from, date_to } = filter;\n    let url = `/super_admin/demo_requests${date_from ? `?date_from=${date_from}` : ''}${\n      date_to && date_to !== 'Invalid date' ? `&date_to=${date_to}` : ''\n    }&status=${selectedStatus ? selectedStatus.value : ''}`;\n    const demoRequestRes = await fetchRequest({\n      url,\n      method: 'GET',\n      isAuth: true,\n    });\n    if (demoRequestRes && demoRequestRes.status === 200) {\n      updateLoadingState('demoRequestList', false);\n      const { data } = await demoRequestRes.json();\n      setDemoRequest(data);\n    } else {\n      updateLoadingState('demoRequestList', false);\n    }\n  }, [filter, selectedStatus]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (filter) getDemoRequest();\n  }, [filter, getDemoRequest]);\n\n  useEffect(() => {\n    if (selectedStatus && selectedStatus.value) getDemoRequest();\n  }, [selectedStatus, getDemoRequest]);\n\n  const handleUpdateStatus = async (id, status) => {\n    setNotification({ show: false, message: '', type: '' });\n    const demoRequestRes = await fetchRequest({\n      url: `/super_admin/demo_request/${id}`,\n      method: 'PUT',\n      isAuth: true,\n      body: { status },\n    });\n    if (demoRequestRes && demoRequestRes.status === 200) {\n      setNotification({ show: true, message: 'Demo request status updated successfully.', type: 'success' });\n      getDemoRequest(filter);\n    } else {\n      const errObj = await demoRequestRes.json();\n      demoRequestRes.status !== 422 && errObj.message && setNotification({ show: true, message: errObj.message, type: 'error' });\n    }\n  };\n\n  const handleCallback = (start, end) => {\n    setState({ start, end });\n    setFilter({ ...filter, date_from: moment(start._d).format('YYYY-MM-DD'), date_to: moment(end._d).format('YYYY-MM-DD') });\n  };\n\n  const label = filter.date_from && moment(filter.date_from).format('DD-MM-YYYY') + ' to ' + moment(filter.date_to).format('DD-MM-YYYY');\n\n  const ranges = {\n    Today: [moment().toDate(), moment().toDate()],\n    Yesterday: [moment().subtract(1, 'days').toDate(), moment().subtract(1, 'days').toDate()],\n    'Last 7 Days': [moment().subtract(6, 'days').toDate(), moment().toDate()],\n    Tomorrow: [moment().add(1, 'days').toDate(), moment().add(1, 'days').toDate()],\n    'Next 7 Days': [moment().add(1, 'days').toDate(), moment().add(7, 'days').toDate()],\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <Notification {...notification} />\n      <div className=\"row mb-3\">\n        <div className=\"col-md-3 col-12\">\n          <DateRangePicker\n            className=\"customDatePicker\"\n            initialSettings={{\n              maxDate: moment().add(1, 'months').format('MM/DD/YYYY'),\n              startDate: moment().toDate(),\n              endDate: moment().toDate(),\n              ranges: ranges,\n            }}\n            onCallback={handleCallback}\n          >\n            <div className=\"customDatePicker-innerwrapper\">\n              <span className={label ? 'range-value' : 'range-placeholder'}>{label ? label : 'Select Range'}</span>\n              <label className=\"table-icon d-inline\">{CalendarFilter}</label>\n            </div>\n          </DateRangePicker>\n          {/* <DateInput value={selectedDate} onChange={date => setDate(date)} returnFormat={'YYYY-MM-DD'} /> */}\n        </div>\n        <div className=\"col-md-3 col-12\">\n          <SelectInput\n            options={statusList}\n            value={selectedStatus || statusList[0]}\n            onChange={value => setSelectedStatus(value)}\n            isClearable={false}\n            isLoading={loading['statusList']}\n            isSearchable={false}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-9 col-12\">\n          <Card title=\"Demo Request\">\n            <Table columnDefs={columnDefs} tableData={demoRequestList} isLoading={loading['all'] || loading['demoRequestList']} />\n          </Card>\n        </div>\n        <div className=\"col-md-3 col-12\">\n          <Card title=\"Converted Demos today\" cardType=\"number\" centerHeader={true} isLoading={loading['all']}>\n            {stats.converted}\n          </Card>\n          <Card title=\"Total Demo’s given today\" cardType=\"number\" centerHeader={true} isLoading={loading['all']}>\n            {stats.total_demo_given_count}\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DemoRequest;\n","import React from 'react';\nimport { CheckBoxBlue } from '../../../assets/icons';\n\nfunction CheckboxInput({ name, label, value, checked = false, onClick, blue, red, className = '', disabled }) {\n  let checkboxFillColor = blue ? 'blue' : 'red';\n  return (\n    <div className={`d-flex checkbox-input ${className} pure-material-checkbox ${disabled ? 'disabled' : ''}`}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={onClick} //As it is an Input Element onChange method needed for any changeEvent.\n      />\n      <div\n        className={`mr-3 checkbox-checked ${checkboxFillColor}`}\n        onClick={() => {\n          if (disabled) return;\n          else onClick();\n        }}\n      >\n        {CheckBoxBlue}\n      </div>\n      <label dangerouslySetInnerHTML={{ __html: label }}></label>\n    </div>\n  );\n}\n\nexport default CheckboxInput;\n","import React, { memo, useCallback, useEffect, useState, useContext } from 'react';\nimport SelectInput from '../FormInputs/SelectInput/SelectInput';\nimport ReactPaginate from 'react-paginate';\nimport { ProfileContext } from '../../context/context';\n\nconst Pagination = props => {\n  const { profile, setProfileData } = useContext(ProfileContext);\n  const { width, data, filter, listName } = props;\n  const [initials, setInitials] = useState({\n    data: [],\n    perPageObj: { label: '15', value: 15 },\n  });\n  const [pageState, setPageState] = useState({ per_page: 15, current_page: 1 });\n\n  useEffect(() => {\n    setInitials(initials => ({ ...initials, ...data }));\n  }, [data]);\n\n  const { total_pages, total, perPageObj } = initials;\n  const { current_page, per_page } = pageState;\n\n  useEffect(() => {\n    if (filter.current_page === 1) {\n      setPageState(pageState => ({ ...pageState, current_page: 1 }));\n    }\n  }, [filter]);\n\n  useEffect(() => {\n    if (current_page && per_page) data.getListPerPage({ ...filter, current_page, per_page });\n  }, [current_page, per_page]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handlePageClick = useCallback(\n    e => {\n      const selectedPage = e.selected + 1;\n      setPageState({\n        ...pageState,\n        current_page: selectedPage,\n      });\n    },\n    [pageState],\n  );\n\n  const handlePerPage = useCallback(\n    obj => {\n      setInitials({\n        ...initials,\n        perPageObj: obj,\n      });\n      setPageState({\n        current_page: 1,\n        per_page: obj ? obj.value : initials.per_page,\n      });\n      setProfileData({ ...profile, perPageData: obj ? obj.value : initials.per_page, perPageValue: obj });\n      localStorage.setItem('perPageData', obj ? obj.value : initials.per_page);\n    },\n    [profile, initials], // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return (\n    <div className=\"paginate-container d-flex\">\n      {width > 768 ? (\n        <div className=\"per-page-wrapper d-flex\">\n          <div>Rows per page :</div>\n          <div className=\"form-group \">\n            <SelectInput\n              className=\"per-page-select\"\n              value={perPageObj}\n              onChange={handlePerPage}\n              options={[\n                { label: '15', value: 15 },\n                { label: '50', value: 50 },\n                { label: '100', value: 100 },\n                { label: '150', value: 150 },\n              ]}\n              isClearable={false}\n            ></SelectInput>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n      <div className=\"d-flex flex-column flex-md-row w-100 align-items-md-center justify-content-md-between\">\n        <div className=\"order-md-2 text-right page-count\">\n          <p>\n            {`${(current_page - 1) * per_page + 1}-${\n              current_page * per_page < total ? current_page * per_page : total\n            } of ${total} ${listName}`}\n          </p>\n        </div>\n        <div className=\"page-numbers-listing\">\n          <ReactPaginate\n            previousLabel={'Prev'}\n            nextLabel={'Next'}\n            breakLabel={'...'}\n            breakClassName={'break-me'}\n            pageCount={total_pages}\n            marginPagesDisplayed={1}\n            pageRangeDisplayed={width > 768 ? 1 : 1}\n            onPageChange={handlePageClick}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            activeClassName={'active'}\n            previousLinkClassName={total_pages < 2 ? 'disabled' : ''}\n            nextLinkClassName={total_pages < 2 ? 'disabled' : ''}\n            forcePage={current_page - 1}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default memo(Pagination);\n","import React, { useState, useEffect } from 'react';\nimport { rupeeSymbol } from '../../utils/constants';\nimport Card from '../Common/Card/Card';\nimport { CustomModal, ModalBody } from './Modal';\n\nconst defaultState = {\n  data: null,\n  isModalOpen: false,\n};\n\nconst TableCardModal = ({ actionObject = defaultState, MobileCardComponent }) => {\n  const { columnDefs, tableData, isModalOpen } = actionObject;\n\n  const [modal, handleModalToggle] = useState(isModalOpen);\n\n  useEffect(() => {\n    handleModalToggle(isModalOpen);\n  }, [actionObject, isModalOpen]);\n\n  return (\n    <CustomModal className=\"table-card-modal\" modalIsOpen={modal} closeModal={handleModalToggle} backdropClose={true}>\n      <ModalBody className=\"my-4 text-center\">\n        {MobileCardComponent ? (\n          <MobileCardComponent columnDefs={columnDefs} tableData={tableData}/>\n        ) : (\n          <Card title=\"Test Visit Details\">\n            {columnDefs &&\n              columnDefs.length &&\n              columnDefs.map(({ label, accessKey, renderIcon, classes = '',cellRenderer,defaultValue,isAmount = false, }, ind) => {\n                let keys = accessKey ? accessKey.split('.') || [] : null,\n                        dataValue = Array.isArray(keys) ? (keys.length > 1 ? tableData[`${keys[0]}`][`${keys[1]}`] : tableData[`${keys[0]}`]) : null;\n                return (\n                <React.Fragment key={ind}>\n                  {!renderIcon && (\n                    <div className=\"d-flex card-row\">\n                      <div className=\"label\">{`${label} : `}</div>\n                      {cellRenderer ? (\n                        <div className={`value ${classes}`}>{cellRenderer(tableData, ind)}</div>\n                      ) : dataValue || defaultValue ? (\n                        <div className={`value ${classes}`}>\n                          {isAmount ? rupeeSymbol + ' ' : ''}\n                          {dataValue || defaultValue}\n                        </div>\n                      ) : null}\n                    </div>\n                  )}\n                </React.Fragment>\n              )})}\n          </Card>\n        )}\n      </ModalBody>\n    </CustomModal>\n  );\n};\n\nexport default TableCardModal;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport Paginate from '../Paginate/Paginate';\nimport { TextButton } from '../Buttons/Button';\nimport useWindowSize from '../../hooks/userWindowSize';\nimport TableCardModal from '../Modal/TableCardModal';\nimport { rupeeSymbol } from '../../utils/constants';\nimport CheckboxInput from '../FormInputs/Checkbox/CheckboxInput';\n\nconst Filter = ({ setFilter, renderFilterIcon, filter }) => {\n  const [sortOrder, setSortOrder] = useState('desc');\n  const handleSort = useCallback(() => {\n    let value = sortOrder === 'desc' ? 'asc' : 'desc';\n    setSortOrder(value);\n    let dataToSort = [...filter.sort];\n    if (!dataToSort.some(item => item.key === renderFilterIcon.key)) {\n      dataToSort.push({ key: renderFilterIcon.key, value });\n    } else dataToSort = dataToSort.map(item => (item.key === renderFilterIcon.key ? { key: renderFilterIcon.key, value } : item));\n    setFilter({ ...filter, sort: dataToSort });\n  }, [sortOrder, filter]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  let ind = filter && filter.sort && filter.sort.findIndex(item => item.key === renderFilterIcon.key);\n  let isSorted = ind !== -1 ? true : false;\n  return (\n    <p\n      className={`table-icon d-inline ${isSorted ? 'is-sorted ' + (filter && filter.sort && filter.sort[ind].value) || '' : ''}`}\n      onClick={handleSort}\n    >\n      {renderFilterIcon.icon}\n    </p>\n  );\n};\n\nconst Table = ({\n  title,\n  columnDefs,\n  tableData,\n  selectedFilters,\n  openFilterAction,\n  pagination,\n  footerLink,\n  renderCheckbox,\n  isButtonCard,\n  getListData,\n  setFilter,\n  filter,\n  blankDataMessage = 'No Records Found !',\n  isLoading = false,\n  listName = '',\n  getSelectedData,\n  tableClassName = '',\n  MobileCardComponent,\n}) => {\n  const [width] = useWindowSize();\n  const [actionObject, setActionObject] = useState();\n  const [StatusFilterAction, setStatusFilterAction] = useState(false);\n  // const [date, setDate] = useState(null);\n  // const [dateRange, setDateRange] = useState({ startDate: null, endDate: null });\n  const [selectedData, setSelectedData] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n\n  useEffect(() => {\n    if (selectAll || selectedData.length) getSelectedData(selectAll ? selectAll : selectedData);\n  }, [selectAll, selectedData, getSelectedData]);\n\n  const setCheckedData = useCallback(\n    val => {\n      let arr = [...selectedData];\n      if (!arr.some(item => item === val)) {\n        arr.push(val);\n      } else {\n        arr = arr.filter(item => item !== val);\n      }\n      setSelectedData([...arr]);\n      if (arr.length >= 0 && arr.length !== tableData.length) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n    },\n    [selectedData], // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  const setSelectAllData = useCallback(() => {\n    const data = tableData.map(item => item.uuid);\n    selectAll ? setSelectedData([]) : setSelectedData(data);\n    setSelectAll(!selectAll);\n  }, [selectAll]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      {width > 768 ? (\n        <table className={`custom-table ${tableClassName}`}>\n          <thead>\n            <tr>\n              {columnDefs.map(({ label, cursor, labelAsIcon, renderFilterIcon, width, dateFilter, isCheckbox, keyToCheck }, key) => (\n                <th key={key} width={width}>\n                  {label ? (\n                    selectedFilters && selectedFilters.includes(label) ? (\n                      <span\n                        onClick={() => openFilterAction(true, label)}\n                        style={{\n                          backgroundColor: 'rgba(166, 219, 252, 0.3)',\n                          fontSize: 12,\n                          padding: 5,\n                          borderRadius: 5,\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {label}{' '}\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path\n                            d=\"M0.833452 1.74002C2.18012 3.46669 4.66679 6.66669 4.66679 6.66669V10.6667C4.66679 11.0334 4.96678 11.3334 5.33345 11.3334H6.66679C7.03345 11.3334 7.33345 11.0334 7.33345 10.6667V6.66669C7.33345 6.66669 9.81345 3.46669 11.1601 1.74002C11.5001 1.30002 11.1868 0.666687 10.6335 0.666687H1.36012C0.806785 0.666687 0.493452 1.30002 0.833452 1.74002Z\"\n                            fill=\"#B7B7B7\"\n                          />\n                        </svg>\n                      </span>\n                    ) : (\n                      <span style={{ cursor: cursor ? cursor : '' }} onClick={() => (openFilterAction ? openFilterAction(true, label) : '')}>\n                        {label}\n                      </span>\n                    )\n                  ) : isCheckbox ? (\n                    <CheckboxInput\n                      checked={selectAll}\n                      value={selectAll}\n                      blue\n                      className={!selectAll && selectedData.length > 0 ? 'checkbox-some-checked' : ''}\n                      onClick={() => setSelectAllData()}\n                    />\n                  ) : (\n                    <p>{labelAsIcon}</p>\n                  )}{' '}\n                  {renderFilterIcon ? <Filter filter={filter} setFilter={setFilter} renderFilterIcon={renderFilterIcon} /> : ''}\n                  {dateFilter?.show ? <label></label> : ''}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {isLoading ? (\n              <tr>\n                <td colSpan={columnDefs.length} className=\"text-center mb-4\">\n                  <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                </td>\n              </tr>\n            ) : tableData && tableData.length ? (\n              tableData.map((data, key) => (\n                <tr key={Math.random()}>\n                  {columnDefs.map(({ accessKey, renderIcon, cellRenderer, defaultValue, isAmount = false, isCheckbox, keyToCheck }) => {\n                    let keys = accessKey ? accessKey.split('.') || [] : null,\n                      dataValue = Array.isArray(keys) ? (keys.length > 1 ? data[`${keys[0]}`][`${keys[1]}`] : data[`${keys[0]}`]) : null;\n                    return cellRenderer ? (\n                      <td key={Math.random()}>{cellRenderer(data, key)}</td>\n                    ) : dataValue || defaultValue ? (\n                      <td key={Math.random()}>\n                        {isAmount ? rupeeSymbol + ' ' : ''}\n                        {dataValue || defaultValue}\n                      </td>\n                    ) : isCheckbox ? (\n                      <td key={Math.random()}>\n                        {/* <p className=\"table-icon\">{renderIcon}</p> */}\n                        <CheckboxInput\n                          checked={selectAll ? selectAll : selectedData.some(item => item === data[keyToCheck])}\n                          value={selectAll ? selectAll : selectedData.some(item => item === data[keyToCheck])}\n                          blue\n                          onClick={() => setCheckedData(data[keyToCheck])}\n                        />\n                      </td>\n                    ) : renderIcon ? (\n                      <td key={Math.random()}>\n                        <p className=\"table-icon\">{renderIcon}</p>\n                      </td>\n                    ) : (\n                      <td key={Math.random()}>-</td>\n                    );\n                  })}\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={columnDefs.length} className=\"text-center\">\n                  {blankDataMessage}\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      ) : (\n        <div className=\"table-mobile\">\n          {isLoading ? (\n            <div className=\"text-center mb-4\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          ) : tableData && tableData.length ? (\n            tableData.map((data, ind) => (\n              <div key={ind} className=\"data-card d-flex align-items-center\" onClick={() =>\n                isButtonCard && setActionObject({\n                  columnDefs,\n                  tableData: data,\n                  isModalOpen: true,\n                })\n              }>\n                {renderCheckbox ? <p className=\"table-icon card-mobile-checkbox mr-4\">{renderCheckbox}</p> : <></>}\n                <div className=\"w-100\">\n                  {columnDefs.map(\n                    (\n                      {\n                        label,\n                        cellRenderer,\n                        accessKey,\n                        renderIcon,\n                        renderIconText = '',\n                        classes = '',\n                        isMobile = true,\n                        isCheckbox = false,\n                        defaultValue,\n                        isAmount = false,\n                      },\n                      key,\n                    ) => {\n                      let keys = accessKey ? accessKey.split('.') || [] : null,\n                        dataValue = Array.isArray(keys) ? (keys.length > 1 ? data[`${keys[0]}`][`${keys[1]}`] : data[`${keys[0]}`]) : null;\n                      return (\n                        <React.Fragment key={key}>\n                          {!renderIcon && isMobile ? (\n                            <ul className=\"card-row single-detail\">\n                              <li className=\"label\">{`${label} : `}</li>\n                              {cellRenderer ? (\n                                <li className={`value ${classes}`}>{cellRenderer(data, key)}</li>\n                              ) : dataValue || defaultValue ? (\n                                <li className={`value ${classes}`}>\n                                  {isAmount ? rupeeSymbol + ' ' : ''}\n                                  {dataValue || defaultValue}\n                                </li>\n                              ) : null}\n                            </ul>\n                          ) : renderIcon && !isCheckbox && isMobile ? (\n                            <div className=\"data-card-action pt-2 mt-3\">\n                              <p className=\"table-icon d-flex justify-content-center align-items-center\">\n                                {renderIcon} {renderIconText ? <p className=\"icon-text\">{renderIconText}</p> : ''}\n                              </p>\n                            </div>\n                          ) : null}\n                        </React.Fragment>\n                      );\n                    },\n                  )}\n                </div>\n                {isButtonCard ? (\n                  <p\n                    className=\"table-icon card-mobile-button ml-auto modal-link\"\n                  >\n                    {isButtonCard}\n                  </p>\n                ) : (\n                  <></>\n                )}\n              </div>\n            ))\n          ) : (\n            <table>\n              <tbody>\n                <tr>\n                  <td colSpan={columnDefs.length} className=\"text-center\">\n                    {blankDataMessage}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          )}\n        </div>\n      )}\n      {pagination && pagination.total ? <Paginate width={width} data={pagination} filter={filter} listName={listName}></Paginate> : <></>}\n      {footerLink && tableData && tableData.length ? (\n        <div className=\"d-flex justify-content-center table-footer\">\n          <TextButton\n            blue\n            withIcon\n            className=\"semi-bold\"\n            link\n            to={{\n              pathname: footerLink,\n              title: title,\n            }}\n            title={title}\n          >\n            VIEW ALL\n          </TextButton>\n        </div>\n      ) : (\n        ''\n      )}\n      <TableCardModal actionObject={actionObject} MobileCardComponent={MobileCardComponent}></TableCardModal>\n    </>\n  );\n};\nexport default Table;\n","import React from 'react';\n\nconst Popover = ({ button, children, className = '' }) => {\n  return (\n    <div className={`nav-item dropdown popover-dropdown`}>\n      <span className=\"nav-item nav-link dropdown-toggle\" id=\"bd-versions\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n        {button}\n      </span>\n      <div className={`dropdown-menu dropdown-menu-md-right ${className}`} aria-labelledby=\"bd-versions\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Popover;\n"],"sourceRoot":""}