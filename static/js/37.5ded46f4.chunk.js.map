{"version":3,"sources":["components/FormInputs/TextInput/TextInput.jsx","components/FormInputs/SelectInput/SelectInput.jsx","components/Notification/Notification.jsx","components/Common/Card/Card.jsx","hooks/useDebounce.js","components/Common/SearchBox/SearchBox.jsx","pages/Pathology/ReferredDoctor/Add/AddDoctor.jsx","utils/masters.js"],"names":["TextInput","type","placeholder","value","name","onChange","onBlur","error","disabled","icon","className","hasGrayBack","showPass","maxLength","ref","useState","showPassword","setShowPassword","hasError","inputRef","useRef","autoComplete","onClick","hidePasswordEye","showPasswordEye","SelectInput","options","isMulti","hideSelectedOptions","isClearable","isLoading","hidePlaceholder","defaultValue","isSearchable","parentClass","parentRef","classNamePrefix","onFocus","current","classList","add","remove","removeSelected","isDisabled","Notification","message","callback","notify","useCallback","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","info","warn","useEffect","Card","title","children","list","cardType","centerHeader","cardName","searchBox","onSelectInputChange","input","length","role","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","memo","setFilter","filter","searchTerm","setSearchTerm","debouncedSearchTerm","search","current_page","e","target","Search","defaultState","first_name","last_name","mobile","email","address","pincode","city","state","gender","degree","blood_group","AddDoctor","props","profile","useContext","ProfileContext","initials","setInitials","setError","disabledInput","setDisabledInput","show","notification","setNotification","btnLoading","setBtnLoading","branchList","setBranchList","branch","setSelectedBranch","updateDoctor","setUpdateDoctor","location","lab_id","lab_name","label","selectedRole","uuid","a","fetchRequest","url","method","isAuth","statusRes","status","json","data","map","item","getDetailsFromMobile","res","specialist_in","onHandleChange","key","obj","toString","handleSubmit","preventDefault","errors","validateForm","Object","keys","postObj","body","history","goBack","errObj","onSubmit","PatientGenderList","red","blue","loading","GenderList","BloodGroupList"],"mappings":"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","file":"static/js/37.5ded46f4.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { hidePasswordEye, showPasswordEye } from '../../../assets/icons';\n\nfunction TextInput({\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onBlur,\n  error,\n  disabled = false,\n  icon,\n  className = '',\n  hasGrayBack = false,\n  showPass,\n  maxLength,\n  ref,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  let hasError = error ? 'has-error' : '';\n  className += ` form-control `;\n  const inputRef = useRef(null);\n  return (\n    <>\n      <div className={`input-group text-input ${hasError} ${hasGrayBack ? 'background-gray' : ''}`}>\n        <input\n          type={(showPass ? (!showPassword ? 'password' : 'text') : type) || 'text'}\n          className={className}\n          name={name}\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          ref={ref || inputRef}\n          disabled={disabled}\n          onBlur={onBlur}\n          maxLength={maxLength}\n        />\n        <label className=\"input-placeholder\">{placeholder}</label>\n        {icon ? <span className=\"input-icon\">{icon}</span> : <></>}\n        {showPass ? (\n          <span className=\"input-icon cursor-pointer\" onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? hidePasswordEye : showPasswordEye}\n          </span>\n        ) : (\n          <></>\n        )}\n        {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n      </div>\n    </>\n  );\n}\nexport default TextInput;\n","import React, { useRef } from 'react';\nimport Select from 'react-select';\n\nconst SelectInput = ({\n  className = '',\n  options = [],\n  value,\n  onChange,\n  placeholder,\n  error,\n  hasGrayBack = false,\n  isMulti = false,\n  hideSelectedOptions = true,\n  isClearable = true,\n  disabled,\n  isLoading,\n  hidePlaceholder,\n  defaultValue,\n  isSearchable = false,\n}) => {\n  let parentClass = `input-group select-control-input ${error ? 'has-error' : ''} ${hasGrayBack ? 'background-gray' : ''} ${\n    value && value.value ? 'has-value' : ''\n  } ${hidePlaceholder ? 'hide-placeholder' : ''} ${disabled ? 'cursor-notAllowed' : ''}`;\n\n  className += ` select-input `;\n  const parentRef = useRef(null);\n  return (\n    <>\n      <div className={parentClass} ref={parentRef}>\n        <Select\n          value={value}\n          onChange={onChange}\n          options={options}\n          className={className}\n          classNamePrefix=\"select-input\"\n          placeholder={<div>{''}</div>}\n          onFocus={() => parentRef.current.classList.add('select-focused')}\n          onBlur={() => parentRef.current.classList.remove('select-focused')}\n          isClearable={isClearable}\n          isMulti={isMulti}\n          removeSelected={false}\n          defaultValue={defaultValue}\n          isDisabled={disabled}\n          isLoading={isLoading}\n          isSearchable={isSearchable}\n        />\n        <label className=\"select-placeholder\">{placeholder}</label>\n      </div>\n      {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n    </>\n  );\n};\nexport default SelectInput;\n","import React, { useEffect, useCallback } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification({ message, type, callback }) {\n  const notify = useCallback(\n    type => {\n      switch (type) {\n        case 'success': {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          setTimeout(() => {\n            callback && callback();\n          }, 1500);\n          break;\n        }\n        case 'error':\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'info':\n          toast.info(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'warn':\n          toast.warn(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [callback, message],\n  );\n\n  useEffect(() => {\n    if (message && type) notify(type);\n  }, [message, notify, type]);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '../../FormInputs/SelectInput/SelectInput';\nimport SearchBox from '../SearchBox/SearchBox';\n\nconst Card = ({\n  title,\n  children,\n  list = [],\n  value,\n  cardType = 'table',\n  centerHeader = false,\n  cardName = '',\n  className = '',\n  searchBox,\n  onSelectInputChange,\n  isLoading = false,\n  input,\n}) => {\n  return (\n    <div className={`paper paper-card ${cardType === 'number' ? 'number-card' : ''} ${cardName} ${className}`}>\n      <div className={`content-header d-flex align-items-baseline ${centerHeader ? 'justify-content-center' : 'justify-content-between'}`}>\n        <p className=\"title\">{title}</p>\n        {input ? (\n          input\n        ) : list.length ? (\n          <div className=\"select-wrapper\">\n            <SelectInput\n              options={list}\n              value={value}\n              onChange={value => onSelectInputChange(value)}\n              isClearable={false}\n              isSearchable={false}\n            />\n          </div>\n        ) : (\n          <></>\n        )}\n        {searchBox ? <SearchBox /> : <></>}\n      </div>\n      {isLoading ? (\n        <div className=\"text-center\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : cardType === 'number' ? (\n        <div className=\"count font-weight-bold\">{children}</div>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\nCard.propTypes = { title: PropTypes.string, content: PropTypes.string, list: PropTypes.array };\n\nexport default Card;\n","import { useEffect, useState } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { memo, useEffect, useState } from 'react';\nimport { Search } from '../../../assets/icons';\nimport useDebounce from '../../../hooks/useDebounce';\nimport TextInput from '../../FormInputs/TextInput/TextInput';\n\nconst SearchBox = ({ setFilter, filter, className = '', placeholder }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  // const [results, setResults] = useState([]);\n  // const [isSearching, setIsSearching] = useState(false);\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(\n    () => {\n      if (setFilter) {\n        if (debouncedSearchTerm) {\n          setFilter({ ...filter, search: debouncedSearchTerm, current_page: 1 });\n          // setIsSearching(true);\n          // searchCharacters(debouncedSearchTerm).then(results => {\n          //   setIsSearching(false);\n          //   setResults(results);\n          // });\n        } else {\n          setFilter({ ...filter, search: '',current_page: 1 });\n          // setResults([]);\n        }\n      }\n    },\n    [debouncedSearchTerm], // eslint-disable-line react-hooks/exhaustive-deps\n    // Only call effect if debounced search term changes\n  );\n\n  return (\n    <div className={`form-group search-input-wrapper ${className}`}>\n      <TextInput\n        placeholder={placeholder}\n        value={searchTerm || ''} // Its taking null if no value is passed. Hence empty string passed\n        onChange={e => setSearchTerm(e.target.value)}\n        icon={Search}\n        className=\"search-input\"\n      ></TextInput>\n    </div>\n  );\n};\n\nexport default memo(SearchBox);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { OutlinedButton } from '../../../../components/Buttons/Button';\nimport Card from '../../../../components/Common/Card/Card';\nimport SelectInput from '../../../../components/FormInputs/SelectInput/SelectInput';\nimport TextInput from '../../../../components/FormInputs/TextInput/TextInput';\nimport Notification from '../../../../components/Notification/Notification';\nimport { ProfileContext } from '../../../../context/context';\nimport { fetchRequest } from '../../../../utils/api';\nimport { validateForm } from '../../../../utils/custom';\nimport { PatientGenderList } from '../../../../utils/masters';\n\nconst defaultState = {\n  first_name: '',\n  last_name: '',\n  mobile: '',\n  email: null,\n  address: null,\n  pincode: '',\n  city: '',\n  state: '',\n  gender: '',\n  degree: '',\n  blood_group: null,\n};\n\nconst AddDoctor = props => {\n  const { profile } = useContext(ProfileContext);\n  const [initials, setInitials] = useState({ ...defaultState });\n  const [error, setError] = useState({});\n  const [disabledInput, setDisabledInput] = useState(false);\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [branchList, setBranchList] = useState([]);\n  const [branch, setSelectedBranch] = useState({});\n  const [updateDoctor, setUpdateDoctor] = useState(false);\n\n  useEffect(() => {\n    if (props.location.state) {\n      const { lab_id, lab_name } = props.location.state;\n      setInitials({ ...props.location.state });\n      setUpdateDoctor(true);\n      setSelectedBranch({ label: lab_name, value: lab_id });\n    } else setUpdateDoctor(false);\n  }, [props.location.state]);\n\n  useEffect(() => {\n    if (profile.selectedRole.uuid && profile.selectedRole.role.name === 'lab_admin') {\n      (async () => {\n        const statusRes = await fetchRequest({ url: `/lab_group/${profile.selectedRole.uuid}/get_labs`, method: 'GET', isAuth: true });\n        if (statusRes && statusRes.status === 200) {\n          const { data } = await statusRes.json();\n          setBranchList(data.map(item => ({ value: item.uuid, label: item.name })));\n        }\n        return;\n      })();\n    }\n  }, [profile.selectedRole]);\n\n  const getDetailsFromMobile = async mobile => {\n    setDisabledInput(false);\n    setError({});\n    setNotification({ show: false, message: '', type: '' });\n    const res = await fetchRequest({ url: `/get_user_details?mobile=${mobile}`, method: 'GET', isAuth: true });\n    if (res && res.status === 200) {\n      const { data } = await res.json();\n      if (data && data.length !== 0) {\n        setInitials({\n          ...initials,\n          address: '',\n          pincode: '',\n          city: '',\n          state: '',\n          gender: '',\n          specialist_in: '',\n          degree: '',\n          uuid: null,\n          ...data,\n        });\n        setDisabledInput(true);\n      } else {\n        setInitials({\n          ...initials,\n          first_name: '',\n          last_name: '',\n          email: '',\n          address: '',\n          pincode: '',\n          city: '',\n          state: '',\n          gender: '',\n          specialist_in: '',\n          degree: '',\n          mobile,\n          uuid: null,\n        });\n      }\n      return data;\n    }\n    return;\n  };\n\n  const onHandleChange = (value, key) => {\n    let obj = { ...initials };\n    obj[key] = value;\n    setInitials({ ...obj });\n    if (key === 'mobile' && value.toString().length === 10) getDetailsFromMobile(value);\n    else setDisabledInput(false);\n  };\n\n  const handleSubmit = async e => {\n    setBtnLoading(true);\n    setError({});\n    setNotification({ show: false, message: '', type: '' });\n    e.preventDefault();\n\n    const errors = validateForm({ first_name, last_name, mobile, pincode, city, state, gender, branch });\n    setError({ ...errors });\n\n    if (!Object.keys(errors).length) {\n      let postObj = {\n        ...initials,\n        gender: initials.gender && initials.gender.value,\n      };\n      delete postObj.uuid;\n      let url = `/lab/${branch && branch.value ? branch.value : profile.selectedRole.uuid}/referred_by${updateDoctor ? `/${initials.uuid}` : ''}`;\n      const res = await fetchRequest({\n        url,\n        method: updateDoctor ? 'PUT' : 'POST',\n        isAuth: true,\n        body: postObj,\n      });\n      res && setBtnLoading(false);\n      if (res && res.status === 200) {\n        const data = await res.json();\n        if (data.success) {\n          data.message && setNotification({ show: true, message: data.message, type: 'success' });\n          setTimeout(() => props.history.goBack(), 2000);\n        }\n      } else {\n        const errObj = await res.json();\n        setError({ ...errObj.errors });\n        res.status !== 422 &&\n          !Object.keys(errObj.error ? errObj.error : {}).length &&\n          errObj.message &&\n          setNotification({ show: true, message: errObj.message, type: 'error' });\n      }\n      return;\n    } else {\n      setBtnLoading(false);\n    }\n  };\n\n  const { first_name, last_name, mobile, email, address, pincode, city, state, degree, gender, specialist_in } = initials;\n  return (\n    <div className=\"add-package-container\">\n      <Notification {...notification} />\n      <div className=\"row\">\n        <div className=\"col-md-8 col-12\">\n          <form onSubmit={handleSubmit}>\n            <Card title=\"Doctor's Details\">\n              <div className=\"row mb-4\">\n                <div className=\"form-group col-md-6 col-12\">\n                  <TextInput\n                    placeholder=\"Mobile No.*\"\n                    value={mobile || ''}\n                    onChange={e => onHandleChange(e.target.value, 'mobile')}\n                    error={error && error['mobile']}\n                  />\n                </div>\n                <div className=\"form-group col-md-6 col-12\">\n                  <TextInput\n                    placeholder=\"Email\"\n                    value={email || ''}\n                    onChange={e => onHandleChange(e.target.value, 'email')}\n                    error={error && error['email']}\n                    disabled={disabledInput}\n                  />\n                </div>\n              </div>\n              <div className=\"row mb-4\">\n                <div className=\"form-group col-md-6 col-12\">\n                  <TextInput\n                    placeholder=\"First Name*\"\n                    value={first_name || ''}\n                    onChange={e => onHandleChange(e.target.value, 'first_name')}\n                    error={error && error['first_name']}\n                    disabled={disabledInput}\n                  />\n                </div>\n                <div className=\"form-group col-md-6 col-12\">\n                  <TextInput\n                    placeholder=\"Last Name*\"\n                    value={last_name || ''}\n                    onChange={e => onHandleChange(e.target.value, 'last_name')}\n                    error={error && error['last_name']}\n                    disabled={disabledInput}\n                  />\n                </div>\n              </div>\n              <div className=\"row mb-4\">\n                <div className=\"form-group col-md-12 col-12\">\n                  <TextInput\n                    placeholder=\"Address\"\n                    value={address || ''}\n                    onChange={e => onHandleChange(e.target.value, 'address')}\n                    error={error && error['address']}\n                  />\n                </div>\n              </div>\n              <div className=\"row mb-4\">\n                <div className=\"form-group col-md-4 col-12\">\n                  <TextInput\n                    placeholder=\"Pincode*\"\n                    value={pincode || ''}\n                    onChange={e => onHandleChange(e.target.value, 'pincode')}\n                    error={error && error['pincode']}\n                  />\n                </div>\n                <div className=\"form-group col-md-4 col-12\">\n                  <TextInput\n                    placeholder=\"City*\"\n                    value={city || ''}\n                    onChange={e => onHandleChange(e.target.value, 'city')}\n                    error={error && error['city']}\n                  />\n                </div>\n                <div className=\"form-group col-md-4 col-12\">\n                  <TextInput\n                    placeholder=\"State*\"\n                    value={state || ''}\n                    onChange={e => onHandleChange(e.target.value, 'state')}\n                    error={error && error['state']}\n                  />\n                </div>\n              </div>\n              <div className=\"row mb-4\">\n                <div className=\"form-group col-md-4 col-12\">\n                  <SelectInput\n                    placeholder=\"Gender*\"\n                    options={PatientGenderList}\n                    value={gender}\n                    onChange={data => onHandleChange(data, 'gender')}\n                    error={error && error['gender']}\n                  />\n                </div>\n                <div className=\"form-group col-md-4 col-12\">\n                  <TextInput\n                    placeholder=\"Degree\"\n                    value={degree || ''}\n                    onChange={e => onHandleChange(e.target.value, 'degree')}\n                    error={error && error['degree']}\n                  />\n                </div>\n                <div className=\"form-group col-md-4 col-12\">\n                  <TextInput\n                    placeholder=\"Specialization\"\n                    value={specialist_in || ''}\n                    onChange={e => onHandleChange(e.target.value, 'specialist_in')}\n                    error={error && error['specialist_in']}\n                  />\n                </div>\n              </div>\n              {profile.selectedRole.role.name === 'lab_admin' && (\n                <div className=\"row\">\n                  <div className=\"form-group col-md-6\">\n                    <SelectInput\n                      placeholder=\"Select Branch*\"\n                      options={branchList}\n                      value={branch}\n                      onChange={data => setSelectedBranch(data)}\n                      disabled={updateDoctor}\n                      error={error && error['branch']}\n                    />\n                  </div>\n                </div>\n              )}\n              <div className=\"row mt-5 mb-4\">\n                <div className=\"col-12\">\n                  <div className=\"w-100 d-flex justify-content-center\">\n                    <OutlinedButton\n                      className=\"mr-2\"\n                      onClick={() => (updateDoctor ? props.history.goBack() : setInitials(defaultState))}\n                      red\n                      disabled={btnLoading}\n                    >\n                      Cancel\n                    </OutlinedButton>\n                    <OutlinedButton className=\"\" blue type=\"submit\" loading={btnLoading} disabled={btnLoading}>\n                      Save\n                    </OutlinedButton>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddDoctor;\n","const GenderList = [\n  { label: 'Both', value: 'both' },\n  { label: 'Male', value: 'male' },\n  { label: 'Female', value: 'female' },\n];\n\nconst PatientGenderList = [\n  { label: 'Male', value: 'male' },\n  { label: 'Female', value: 'female' },\n];\n\nconst OperatorList = [\n  { label: '+', value: '+' },\n  { label: '-', value: '-' },\n  { label: '*', value: '*' },\n  { label: '/', value: '/' },\n  { label: '(', value: '(' },\n  { label: ')', value: ')' },\n];\n\nconst BloodGroupList = [\n  { label: 'A+', value: 'A+' },\n  { label: 'A-', value: 'A-' },\n  { label: 'B+', value: 'B+' },\n  { label: 'B-', value: 'B-' },\n  { label: 'O+', value: 'O+' },\n  { label: 'O-', value: 'O-' },\n  { label: 'AB+', value: 'AB+' },\n  { label: 'AB-', value: 'AB-' },\n];\n\nexport { GenderList, PatientGenderList, OperatorList, BloodGroupList };\n"],"sourceRoot":""}