{"version":3,"sources":["components/Notification/Notification.jsx","utils/constants.js","components/Common/Tests/Add/ViewTest.jsx","components/Modal/ConfirmationModal.jsx"],"names":["Notification","message","type","callback","notify","useCallback","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","error","info","warn","useEffect","rupeeSymbol","ViewTest","props","loginAs","localStorage","getItem","profile","useContext","ProfileContext","testId","useParams","useState","testData","setTestData","loading","setLoading","actionObject","setActionObject","show","notification","setNotification","testMasterBaseUrl","selectedRole","uuid","getSignleTestData","a","fetchRequest","url","method","isAuth","res","status","json","data","handleDeleteTest","includes","history","push","className","role","test_category","name","report_type","unit","short_name","gender","cost","sample_type","technique","parse","interpretation","remark","note","link","to","Edit","red","onClick","title","msg","cancelAction","confirmAction","handleFailure","handleSuccess","isModalOpen","defaultState","isThankYouModal","ConfirmationModal","redirect","modal","handleModalToggle","handleConfirmAction","body","errObj","Object","keys","length","confirmActionType","modalIsOpen","closeModal"],"mappings":"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","file":"static/js/15.2035aaaa.chunk.js","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification({ message, type, callback }) {\n  const notify = useCallback(\n    type => {\n      switch (type) {\n        case 'success': {\n          toast.success(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          setTimeout(() => {\n            callback && callback();\n          }, 1500);\n          break;\n        }\n        case 'error':\n          toast.error(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'info':\n          toast.info(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        case 'warn':\n          toast.warn(message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          break;\n        default:\n          break;\n      }\n    },\n    [callback, message],\n  );\n\n  useEffect(() => {\n    if (message && type) notify(type);\n  }, [message, notify, type]);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default Notification;\n","const rupeeSymbol = 'â‚¹';\n\nexport { rupeeSymbol };\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Edit } from '../../../../assets/icons';\nimport { OutlinedButton } from '../../../../components/Buttons/Button';\nimport { fetchRequest } from '../../../../utils/api';\nimport { rupeeSymbol } from '../../../../utils/constants';\nimport Notification from '../../../../components/Notification/Notification';\nimport ConfirmationModal from '../../../../components/Modal/ConfirmationModal';\nimport { ProfileContext } from '../../../../context/context';\nimport parse from 'html-react-parser';\n\nconst ViewTest = props => {\n  const loginAs = localStorage.getItem('loginAs');\n  const { profile } = useContext(ProfileContext);\n  const { testId } = useParams();\n  const [testData, setTestData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [actionObject, setActionObject] = useState({});\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n\n  let testMasterBaseUrl = '/super_admin/';\n  if(loginAs == \"lab-admin\") testMasterBaseUrl = `/lab_group/${profile?.selectedRole?.uuid}/`;\n  else if(loginAs == \"lab\") testMasterBaseUrl = `/lab/${profile?.selectedRole?.uuid}/`;\n\n  const getSignleTestData = useCallback(async () => {\n    setLoading(true);\n    if (testId) {\n      const res = await fetchRequest({ url: `${testMasterBaseUrl}tests/${testId}`, method: 'GET', isAuth: true });\n      if (res && res.status === 200) {\n        setLoading(false);\n        const { data } = await res.json();\n        setTestData(data);\n        return data;\n      } else {\n        setLoading(false);\n      }\n      return;\n    }\n  }, [testId]);\n\n  useEffect(() => {\n    if (testId) getSignleTestData();\n  }, [testId, getSignleTestData]);\n\n  const handleDeleteTest = data => {\n    if (data.success) {\n      setNotification({ show: true, message: data.message, type: 'success' });\n      let url = ['lab-admin','lab'].includes(loginAs) ? `/${localStorage.getItem('loginAs')}/setting/tests/list` : `/${localStorage.getItem('loginAs')}/tests/list`;\n      setTimeout(() => props.history.push(url), 3000);\n    } else setNotification({ show: true, message: data.message, type: 'error' });\n  };\n\n  return (\n    <div className=\"form-content view-test-container\">\n      <Notification {...notification} />\n      <div className=\"paper card \">\n        <div className={`content-header d-flex align-items-baseline justify-content-between`}>\n          <p className=\"semi-bold title text-capitalize\">{testData.type || \"test\"} Details</p>\n        </div>\n        {loading ? (\n          <div className=\"text-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        ) : testData ? (\n          <div className=\"edit-user-data-card pl-2\">\n            {testData.type !== \"group\" && <div className=\"d-flex card-row mb-2\">\n              <div className=\"semi-bold label\">Category : </div>\n              <div className=\"value\">{(testData.test_category && testData.test_category.name) || '-'}</div>\n            </div>}\n            {testData.type === \"test\" && <div className=\"d-flex card-row mb-2\">\n              <div className=\"semi-bold label\">Report Type : </div>\n              <div className=\"value\">{testData.report_type?.name || '-'}</div>\n            </div>}\n            {testData.type === \"test\" && <div className=\"d-flex card-row mb-2\">\n              <div className=\"semi-bold label\">Unit : </div>\n              <div className=\"value\">{testData.unit?.name || '-'}</div>\n            </div>}\n            <div className=\"d-flex card-row mb-2\">\n              <div className=\"semi-bold label text-capitalize\">{testData.type || \"test\"} Name : </div>\n              <div className=\"value mr-5\">{testData.name || '-'}</div>\n              {testData.type !== \"group\" && <><div className=\"semi-bold label\">Short Name : </div>\n              <div className=\"value\">{testData.short_name || '-'}</div></>}\n            </div>\n            <div className=\"d-flex card-row mb-2\">\n              <div className=\"semi-bold label\">Gender : </div>\n              <div className=\"value\">{testData.gender || '-'}</div>\n            </div>\n            {testData.type !== \"group\" && <div className=\"d-flex card-row mb-3\">\n              <div className=\"semi-bold label\">Cost : </div>\n              <div className=\"value\">\n                {rupeeSymbol} {testData.cost || '-'}\n              </div>\n            </div>}\n            {testData.type === \"test\" && <div className=\"d-flex card-row mb-3\">\n              <div className=\"semi-bold label\">Sample Type : </div>\n              <div className=\"value\">{testData.sample_type?.name || '-'}</div>\n            </div>}\n            {testData.type !== \"group\" && <div className=\"d-flex card-row mb-3\">\n              <div className=\"semi-bold label\">Technique : </div>\n              <div className=\"value editor-content\">{testData.technique ? parse(`${testData.technique}`) : '-'}</div>\n            </div>}\n            {testData.type !== \"group\" && <div className=\"d-flex card-row mb-3\">\n              <div className=\"semi-bold label\">Interpretation : </div>\n              <div className=\"value editor-content\">{testData.interpretation ? parse(`${testData.interpretation}`) : '-'}</div>\n            </div>}\n            {testData.type !== \"group\" && <div className=\"d-flex card-row mb-3\">\n              <div className=\"semi-bold label\">Method : </div>\n              <div className=\"value editor-content\">{testData.method ? parse(`${testData.method}`) : '-'}</div>\n            </div>}\n            {testData.type !== \"group\" && <div className=\"d-flex card-row mb-3\">\n              <div className=\"semi-bold label\">Remark : </div>\n              <div className=\"value editor-content\">{testData.remark ? parse(`${testData.remark}`) : '-'}</div>\n            </div>}\n            {testData.type !== \"group\" && <div className=\"d-flex card-row mb-3\">\n              <div className=\"semi-bold label\">Note : </div>\n              <div className=\"value editor-content\">{testData.note ? parse(`${testData.note}`) : '-'}</div>\n            </div>}\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n      <div className=\"mb-4 text-center\">\n        <OutlinedButton className=\"mr-2 edit-test-btn\" link to={['lab-admin','lab'].includes(loginAs) ? `/${localStorage.getItem('loginAs')}/setting/edit-test/${testId}` : `/${localStorage.getItem('loginAs')}/edit-test/${testId}`}>\n          <div className=\"d-flex\">\n            <p className=\"mr-2 edit-pencil\">{Edit}</p>\n            <p className=\"edit-test-label\">Edit</p>\n          </div>\n        </OutlinedButton>\n        <OutlinedButton\n          red\n          className=\"mr-2\"\n          onClick={() => {\n            setNotification({ show: false, message: '', type: '' });\n            setActionObject({\n              title: 'Confirmation',\n              msg: 'Are you sure you want to delete this test? It will be erased completely and you cannot undo it.',\n              cancelAction: 'Go Back',\n              confirmAction: 'Delete',\n              method: 'DELETE',\n              url: `${testMasterBaseUrl}tests/${testId}`,\n              handleFailure: handleDeleteTest,\n              handleSuccess: handleDeleteTest,\n              isModalOpen: true,\n              setNotification\n            });\n          }}\n        >\n          Delete\n        </OutlinedButton>\n      </div>\n      <ConfirmationModal actionObject={actionObject} />\n    </div>\n  );\n};\n\nexport default ViewTest;\n","import React, { useState, useEffect } from 'react';\nimport { ContainedButton, OutlinedButton } from '../Buttons/Button';\nimport { CustomModal, ModalHeader, ModalBody, ModalFooter } from './Modal';\nimport { fetchRequest } from '../../utils/api';\n\nconst defaultState = {\n  title: '',\n  msg: '',\n  cancelAction: '',\n  confirmAction: '',\n  method: '',\n  data: null,\n  url: '',\n  handleSuccess: '',\n  isModalOpen: false,\n  isThankYouModal: false,\n};\n\nconst ConfirmationModal = ({ actionObject = defaultState }) => {\n  const {\n    title,\n    msg,\n    cancelAction,\n    confirmAction,\n    method,\n    data,\n    url,\n    handleSuccess,\n    isModalOpen,\n    redirect,\n    history,\n    setNotification,\n    isThankYouModal,\n  } = actionObject;\n  const [modal, handleModalToggle] = useState(isModalOpen);\n\n  useEffect(() => {\n    handleModalToggle(isModalOpen);\n  }, [actionObject, isModalOpen]);\n\n  const handleConfirmAction = async () => {\n    if (redirect) {\n      history.push(redirect);\n      return;\n    }\n    const res = await fetchRequest({ url, method, isAuth: true, body: data });\n    if (res && res.status === 200) {\n      const data = await res.json();\n      if (data.success) {\n        handleModalToggle(false);\n        handleSuccess(data);\n      }\n    } else {\n      const errObj = await res.json();\n      setNotification && setNotification({ show: false, message: '', type: '' });\n      res.status !== 422 &&\n        !Object.keys(errObj.error ? errObj.error : {}).length &&\n        errObj.message &&\n        setNotification && setNotification({ show: true, message: errObj.message, type: 'error' });\n      handleModalToggle(false);\n    }\n    return;\n  };\n\n  let confirmActionType = method === 'DELETE' ? 'red' : 'black';\n\n  return (\n    <CustomModal className=\"confirmation-modal\" modalIsOpen={modal} closeModal={handleModalToggle}>\n      <ModalHeader className=\"justify-content-center\">\n        <h2 className=\"black-heading\">{title}</h2>\n      </ModalHeader>\n      <ModalBody className=\"mb-4 text-center\">\n        <p>{msg}</p>\n      </ModalBody>\n      <ModalFooter className=\"justify-content-center\">\n        {isThankYouModal ? (\n          <ContainedButton red onClick={() => handleModalToggle(false)}>\n            {cancelAction}\n          </ContainedButton>\n        ) : (\n          <OutlinedButton className=\"close-modal-btn mr-2\" onClick={() => handleModalToggle(false)}>\n            {cancelAction}\n          </OutlinedButton>\n        )}\n        {confirmAction && (\n          <ContainedButton onClick={handleConfirmAction} {...{ [confirmActionType]: true }}>\n            {confirmAction}\n          </ContainedButton>\n        )}\n      </ModalFooter>\n    </CustomModal>\n  );\n};\n\nexport default ConfirmationModal;\n"],"sourceRoot":""}