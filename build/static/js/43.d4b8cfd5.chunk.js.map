{"version":3,"sources":["pages/Admin/ContactLeads/ContactLeads.jsx","components/Popover/Popover.jsx"],"names":["columnDefs","labelAsIcon","Checkbox","accessKey","keyToCheck","renderIcon","isCheckbox","isMobile","label","dateFilter","show","selectDateRange","classes","cursor","renderFilterIcon","icon","Filter","key","cellRenderer","row","className","status","formatted_status","button","More","link","to","pathname","localStorage","getItem","uuid","state","leadId","ContactLeads","useWindowSize","width","useState","data","pagination","contactLeads","setContactLeads","per_page","sort","current_page","date_from","moment","subtract","format","date_to","filter","setFilter","loading","setLoading","selectedData","setSelectedData","name","formatted","typeData","TypeFilter","setTypeFilter","TypeFilterAction","setTypeFilterAction","AppliedFilters","statusData","setStatusData","StatusFilter","setStatusFilter","StatusFilterAction","setStatusFilterAction","attendenceData","setattendenceData","AttendenceFilter","setAttendenceFilter","AttendenceFilterAction","setAttendenceFilterAction","setUpdate","start","end","setState","selectedFilters","setSelectedFilters","getData","useCallback","i","length","includes","push","search","a","url","giveStatusFilter","getAttendeceFilter","getTypeFilter","map","item","value","join","fetchRequest","method","isAuth","res","json","meta","useEffect","getAttendedByData","getStatusData","getSelectedData","ranges","Today","toDate","Yesterday","startOf","endOf","pushFilter","e","filtername","splice","forEach","items","attendence","type","clearAllTypeFilter","applied","clearAllStatusFilter","clearAllAttFilter","path","id","initialSettings","maxDate","Date","startDate","endDate","autoUpdateInput","onCallback","_d","CalendarFilter","placeholder","onChange","checked","onClick","style","color","display","justifyContent","alignItems","paddingLeft","full_name","tableData","openFilterAction","getListPerPage","pg","renderCheckbox","isButtonCard","DownArrow","isLoading","listName","Popover","children","data-toggle","aria-haspopup","aria-expanded","aria-labelledby"],"mappings":"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","file":"static/js/43.d4b8cfd5.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { Checkbox, DownArrow, Filter, More, CalendarFilter } from '../../../assets/icons';\nimport { TextButton } from '../../../components/Buttons/Button';\nimport Popover from '../../../components/Popover/Popover';\nimport Table from '../../../components/Table/Table';\nimport useWindowSize from '../../../hooks/userWindowSize';\nimport { fetchRequest } from '../../../utils/api';\nimport SearchBox from '../../../components/Common/SearchBox/SearchBox';\nimport ExportExcel from '../../../components/ExportExcel/ExportExcel';\nimport moment from 'moment';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\n\nconst columnDefs = [\n  {\n    labelAsIcon: Checkbox,\n    accessKey: 'checked',\n    keyToCheck: 'uuid',\n    renderIcon: Checkbox,\n    isCheckbox: true,\n    isMobile: false, // Show this content on mobile or not\n  },\n  {\n    label: 'Date',\n    accessKey: 'created_at',\n    dateFilter: { show: true, selectDateRange: false },\n  },\n  {\n    label: 'Name',\n    accessKey: 'name',\n    classes: 'main-content semi-bold',\n  },\n  {\n    label: 'Email ID',\n    accessKey: 'email',\n    isMobile: false,\n  },\n  {\n    label: 'Mobile No.',\n    accessKey: 'mobile',\n    isMobile: false,\n  },\n  {\n    label: 'Type',\n    cursor:'pointer',\n    accessKey: 'type',\n    renderFilterIcon: { icon: Filter, key: 'ref' },\n    isMobile: false,\n  },\n  {\n    label: 'Status',\n    cursor:'pointer',\n    accessKey: 'formatted_status',\n    isMobile: false,\n    renderFilterIcon: { icon: Filter, key: 'ref' },\n    cellRenderer: row => <span className={`semi-bold status-${row.status}`}>{row.formatted_status}</span>,\n  },\n  {\n    label: 'Attended by',\n    cursor:'pointer',\n    accessKey: 'attended_user.full_name',\n    renderFilterIcon: { icon: Filter, key: 'ref' },\n    isMobile: false,\n  },\n  {\n    label: '',\n    accessKey: 'more',\n    isMobile: false,\n    cellRenderer: row => (\n      <div className=\"d-flex align-items-center\">\n        <Popover button={<p className=\"table-icon\">{More}</p>} className=\"view-detail-popover\">\n          <TextButton\n            link\n            to={{ pathname: `/${localStorage.getItem('loginAs')}/contact-leads/${row.uuid}`, state: { leadId: row.uuid } }}\n            className={`list-btn`}\n          >\n            View All Details\n          </TextButton>\n        </Popover>\n      </div>\n    ),\n  },\n];\n\nconst ContactLeads = () => {\n  /* eslint-disable no-unused-vars */\n  const [width] = useWindowSize();\n  const [contactLeads, setContactLeads] = useState({ data: [], pagination: {} });\n  const [filter, setFilter] = useState({\n    per_page: 15,\n    sort: [],\n    current_page: 1,\n    date_from: moment().subtract(1, 'year').format('YYYY-MM-DD'),\n    date_to: moment().format('YYYY-MM-DD'),\n  });\n  const [loading, setLoading] = useState(false);\n  const [selectedData, setSelectedData] = useState([]);\n\n  const [typeData, setTypeData] = useState([\n    { name: 'Contact Form', formatted: 'contact_form' },\n    { name: 'Lab Registration', formatted: 'lab_registration' },\n  ]);\n  const [TypeFilter, setTypeFilter] = useState([]);\n  const [TypeFilterAction, setTypeFilterAction] = useState(false);\n  const [AppliedFilters , setAppliedFilters] = useState([])\n  const [statusData, setStatusData] = useState([]);\n  const [StatusFilter, setStatusFilter] = useState([]);\n  const [StatusFilterAction, setStatusFilterAction] = useState(false);\n\n  const [attendenceData, setattendenceData] = useState([]);\n  const [AttendenceFilter, setAttendenceFilter] = useState([]);\n  const [AttendenceFilterAction, setAttendenceFilterAction] = useState(false);\n  const [update , setUpdate] = useState(null)\n  const [state, setState] = useState({ start: moment(), end: moment() });\n  const [selectedFilters, setSelectedFilters] = useState([]);\n\n  const getStatusData = () => {\n    setLoading(true);\n    const { per_page = 15, current_page, search, date_from, date_to, sort } = filter;\n    (async () => {\n      let url = `/super_admin/contact_statuses`;\n      const res = await fetchRequest({ url, method: 'GET', isAuth: true });\n      setLoading(false);\n      if (res && res.status === 200) {\n        const { data, meta } = await res.json();\n        setStatusData(data);\n        return data;\n      }\n\n      return;\n    })();\n  };\n\n  const getAttendedByData = () => {\n    setLoading(true);\n    const { per_page = 15, current_page, search, date_from, date_to, sort } = filter;\n    (async () => {\n      let url = `/super_admin/contact_lead_attended_by`;\n      const res = await fetchRequest({ url, method: 'GET', isAuth: true });\n      setLoading(false);\n      if (res && res.status === 200) {\n        const { data, meta } = await res.json();\n        setattendenceData(data);\n        return data;\n      }\n\n      return;\n    })();\n  };\n\n  const getData = useCallback(() => {\n    setLoading(true);\n    setStatusFilterAction(false)\n    setAttendenceFilterAction(false)\n    setTypeFilterAction(false)\n    for(let i=0; i < AttendenceFilter.length; i++) {\n      if(!AppliedFilters.includes(AttendenceFilter[i])) {\n        AppliedFilters.push(AttendenceFilter[i])\n      }\n    }\n    for(let i=0; i < StatusFilter.length; i++) {\n      if(!AppliedFilters.includes(StatusFilter[i])) {\n        AppliedFilters.push(StatusFilter[i])\n      }\n    }\n    for(let i=0; i < TypeFilter.length; i++) {\n      if(!AppliedFilters.includes(TypeFilter[i])) {\n        AppliedFilters.push(TypeFilter[i])\n      }\n    }\n\n    const { per_page = 15, current_page, search, date_from, date_to, sort } = filter;\n    (async () => {\n      let url = `/super_admin/contact_lead?per_page=${per_page}${current_page ? `&page=${current_page}` : ''}${\n        search ? `&search=${search}` : ''\n      }${StatusFilter.length !== 0 ? `&status=${giveStatusFilter()}` : ''}${\n        AttendenceFilter.length !== 0 ? `&attended_by=${getAttendeceFilter()}` : ''\n      }${TypeFilter.length !== 0 ? `&type=${getTypeFilter()}` : ''}${date_from ? `&date_from=${date_from}` : ''}${\n        date_to && date_to !== 'Invalid date' ? `&date_to=${date_to}` : ''\n      }${sort && sort.length ? sort.map(item => `&${item.key}=${item.value}`).join('') : ''}`;\n      const res = await fetchRequest({ url, method: 'GET', isAuth: true });\n      setLoading(false);\n      if (res && res.status === 200) {\n        const { data, meta } = await res.json();\n        setContactLeads({ data, pagination: meta.pagination });\n        return data;\n      }\n\n      return;\n    })();\n  }, [filter]);\n\n  useEffect(() => {\n    getData({});\n  }, [getData]);\n\n  useEffect(() => {\n    getAttendedByData();\n    getStatusData();\n  },[])\n  const getListPerPage = pg => {\n    setFilter({ ...filter, ...pg });\n  };\n\n  const getSelectedData = useCallback(data => setSelectedData(data), []);\n\n  const handleCallback = (start, end) => {\n    setState({ start, end });\n    setFilter({\n      ...filter,\n      date_from: moment(start._d).format('YYYY-MM-DD'),\n      date_to: moment(end._d).format('YYYY-MM-DD'),\n      current_page: 1,\n    });\n  };\n\n  const label = filter.date_from && moment(filter.date_from).format('DD-MM-YYYY') + ' to ' + moment(filter.date_to).format('DD-MM-YYYY');\n\n  const ranges = {\n    Today: [moment().toDate(), moment().toDate()],\n    Yesterday: [moment().subtract(1, 'days').toDate(), moment().subtract(1, 'days').toDate()],\n    'This Month': [moment().startOf('month').toDate(), moment().endOf('month').toDate()],\n    'Last 7 Days': [moment().subtract(6, 'days').toDate(), moment().toDate()],\n    'Last 30 Days': [moment().subtract(29, 'days').toDate(), moment().toDate()],\n    'Last 6 Months': [moment().subtract(6, 'months').toDate(), moment().toDate()],\n    'Last 1 Year': [moment().subtract(1, 'year').toDate(), moment().toDate()],\n  };\n\n  const pushFilter = (e, filtername, data) => {\n    if (filtername === 'Attendedby') {\n      if (!AttendenceFilter.includes(data)) {\n        AttendenceFilter.push(data);\n        setUpdate({status:true,data:data})\n      } else {\n        for (let i = 0; i < AttendenceFilter.length; i++) {\n          if (data === AttendenceFilter[i]) {\n            AttendenceFilter.splice(i, 1);\n            setUpdate({status:true,data:data})\n          }\n        }\n\n      }\n    } else if (filtername === 'Status') {\n      if (!StatusFilter.includes(data)) {\n        StatusFilter.push(data);\n        setUpdate({status:true,data:data})\n      } else {\n        for (let i = 0; i < StatusFilter.length; i++) {\n          if (data === StatusFilter[i]) {\n            StatusFilter.splice(i, 1);\n            setUpdate({status:true,data:data})\n          }\n        }\n      }\n    } else {\n      if (!TypeFilter.includes(data)) {\n        TypeFilter.push(data);\n        setUpdate({status:true,data:data})\n      } else {\n        for (let i = 0; i < TypeFilter.length; i++) {\n          if (data === TypeFilter[i]) {\n            TypeFilter.splice(i, 1);\n            setUpdate({status:true,data:data})\n          }\n        }\n\n      }\n    }\n  };\n\n  const giveStatusFilter = () => {\n    let status = '';\n    StatusFilter.forEach(items => {\n      if (status === '') {\n        status = items;\n      } else {\n        status = status + ',' + items;\n      }\n    });\n    return status;\n  };\n\n  const getAttendeceFilter = () => {\n    let attendence = '';\n    AttendenceFilter.forEach(items => {\n      if (attendence === '') {\n        attendence = items;\n      } else {\n        attendence = attendence + ',' + items;\n      }\n    });\n    return attendence;\n  };\n\n  const getTypeFilter = () => {\n    let type = '';\n    TypeFilter.forEach(items => {\n      if (type === '') {\n        type = items;\n      } else {\n        type = type + ',' + items;\n      }\n    });\n    return type;\n  };\n\n  const mapStatus = () => {\n    let AvailableStatus = statusData.map(items => {\n      return (\n        <div key={items.status}>\n          <label>\n            <input onChange={e => pushFilter(e, 'Status', items.status)} checked={StatusFilter.includes(items.status) ? true : false} type=\"checkbox\" /> {items.formatted_status}\n          </label>\n        </div>\n      );\n    });\n    return AvailableStatus;\n  };\n\n  const mapType = () => {\n    let AvailableStatus = typeData.map(items => {\n      return (\n        <div key={items.formatted}>\n          <label >\n            <input onChange={e => pushFilter(e, 'Type', items.formatted)} checked={TypeFilter.includes(items.formatted) ? true : false} type=\"checkbox\" /> {items.name}\n          </label>\n        </div>\n      );\n    });\n    return AvailableStatus;\n  };\n\n  const mapAttendence = () => {\n    let Availabelmember = attendenceData.map(items => {\n      return (\n        <div key={items.uuid}>\n          <label>\n            <input onChange={e => pushFilter(e, 'Attendedby', items.uuid)} checked={AttendenceFilter.includes(items.uuid) ? true : false} type=\"checkbox\" /> {items.full_name}\n          </label>\n        </div>\n      );\n    });\n    return Availabelmember;\n  };\n\n  const clearAllTypeFilter = (type) => {\n    if(type === 'remove_filter') {\n    TypeFilter.length = 0;\n    getData()\n    for(let i=0; i < selectedFilters.length; i++) {\n      if(selectedFilters[i] === 'Type') {\n         selectedFilters.splice(i,1)\n      }\n    }\n    setTypeFilterAction(false);\n    }\n    else {\n      let applied =[]\n      for(let i=0; i<TypeFilter.length; i++) {\n        if(AppliedFilters.includes(TypeFilter[i])) {\n          applied.push(TypeFilter[i])\n        }\n      }\n      TypeFilter.length=0\n      setTypeFilter([...TypeFilter , ...applied])\n      if(TypeFilter.length === 0) {\n        for(let i=0; i< selectedFilters.length; i++) {\n          if(selectedFilters[i] === 'Type') {\n             selectedFilters.splice(i,1)\n          }\n        }\n      }\n      setTypeFilterAction(false);\n    }\n  };\n\n  const clearAllStatusFilter = (type) => {\n    if(type === 'remove_filter') {\n    StatusFilter.length = 0;\n    getData()\n    for(let i=0; i < selectedFilters.length; i++) {\n      if(selectedFilters[i] === 'Status') {\n         selectedFilters.splice(i,1)\n      }\n    }\n    setStatusFilterAction(false);\n    }else {\n      let applied =[]\n      for(let i=0; i<StatusFilter.length; i++) {\n        if(AppliedFilters.includes(StatusFilter[i])) {\n          applied.push(StatusFilter[i])\n        }\n      }\n      StatusFilter.length=0\n      setStatusFilter([...StatusFilter , ...applied])\n      if(StatusFilter.length === 0) {\n        for(let i=0; i< selectedFilters.length; i++) {\n          if(selectedFilters[i] === 'Status') {\n             selectedFilters.splice(i,1)\n          }\n        }\n      }\n      setStatusFilterAction(false);\n    }\n  };\n\n  const clearAllAttFilter = (type) => {\n    if(type === 'remove_filter') {\n    AttendenceFilter.length = 0;\n    getData()\n    for(let i=0; i < selectedFilters.length; i++) {\n      if(selectedFilters[i] === 'Attended by') {\n         selectedFilters.splice(i,1)\n      }\n    }\n    setAttendenceFilterAction(false);\n    }\n    else {\n      let applied =[]\n      for(let i=0; i<AttendenceFilter.length; i++) {\n        if(AppliedFilters.includes(AttendenceFilter[i])) {\n          applied.push(AttendenceFilter[i])\n        }\n      }\n      AttendenceFilter.length=0\n      setAttendenceFilter([...AttendenceFilter , ...applied])\n      if(AttendenceFilter.length === 0) {\n        for(let i=0; i< selectedFilters.length; i++) {\n          if(selectedFilters[i] === 'Attended by') {\n             selectedFilters.splice(i,1)\n          }\n        }\n      }\n      setAttendenceFilterAction(false);\n\n    }\n  };\n\n  const openFilterAction = (status, type) => {\n    if (type === 'Status') {\n      setStatusFilterAction(true);\n      setAttendenceFilterAction(false);\n      setTypeFilterAction(false);\n      if(!selectedFilters.includes('Status')) {\n        selectedFilters.push(type)\n        }\n      setSelectedFilters(setSelectedFilters);\n    } else if (type === 'Type') {\n      setTypeFilterAction(true);\n      setAttendenceFilterAction(false);\n      setStatusFilterAction(false);\n      if(!selectedFilters.includes('Type')) {\n        selectedFilters.push(type)\n        }\n        setSelectedFilters(setSelectedFilters);\n    } else if (type === 'Attended by') {\n      setAttendenceFilterAction(true);\n      setStatusFilterAction(false);\n      setTypeFilterAction(false);\n      if(!selectedFilters.includes('Attended by')) {\n        selectedFilters.push(type)\n        }\n        setSelectedFilters(setSelectedFilters);\n    }\n  };\n\n  return (\n    <div className=\"paper card contact-lead-container list-container\">\n      <div className=\"content-header\">\n        <div className=\"row\">\n          <div className=\"col-6 col-md-2\">\n            <p className=\"semi-bold title\">All Contact Leads</p>\n          </div>\n          <div className=\"col-6 col-md-2\">\n            <div className=\"form-group text-right\">\n              <ExportExcel path={'/super_admin/contact_lead_export'} filter={filter} selectedData={selectedData} />\n            </div>\n          </div>\n\n\n          <div className=\"col-md-4 col-12 customDatePicker-wrapper\">\n            {/* <DateInput\n            placeholder={selectedDate ? '' : 'Date'}\n            value={selectedDate}\n            onChange={date => setFilter({ ...filter, selectedDate: date })}\n            returnFormat={'YYYY-MM-DD'}\n          /> */}\n            <DateRangePicker\n              className=\"customDatePicker\"\n              id=\"customDatePicker\"\n              initialSettings={{\n                maxDate: new Date(),\n                startDate: moment().subtract(1, 'year').toDate(),\n                endDate: moment().toDate(),\n                ranges: ranges,\n                autoUpdateInput: true,\n              }}\n              onCallback={handleCallback}\n            >\n              <div className=\"customDatePicker-innerwrapper\">\n                <span className={label ? 'range-value' : 'range-placeholder'}>{label ? label : 'Select Range'}</span>\n                <label className=\"table-icon d-inline\">{CalendarFilter}</label>\n              </div>\n            </DateRangePicker>\n          </div>\n          <div className=\"push-4 col-md-4\">\n            <SearchBox setFilter={setFilter} filter={filter} placeholder=\"Search by Name or Mobile No.\" />\n          </div>\n        </div>\n        {width <= 768 ? (\n          <div className=\"d-flex justify-content-end mr-2 filter\">\n            <p className=\"mr-1\">{Filter}</p> <p>Filter</p>\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n      <div className=\"content-body\">\n          {StatusFilterAction === true ? (\n              <div className=\"filter_container\">\n                <div className=\"filter_subcontainer_reff\">\n                {mapStatus()}\n                </div>\n                <div className='filter_options'>\n                  <span onClick={() => clearAllStatusFilter('remove_filter')} style={{ color: 'rgba(223, 116, 106, 1)' }}>\n                    Remove filter\n                  </span>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span onClick={() => clearAllStatusFilter('cancel')}>Cancel</span>\n                    {StatusFilter.length === 0 ?\n                    <span style={{ paddingLeft: 10 }}>\n                      Apply\n                    </span>\n                     :\n                    <span onClick={() => getData()} style={{ paddingLeft: 10,color:'blue' }}>\n                     Apply\n                    </span>\n                    }\n                  </div>\n                </div>\n              </div>\n          ) : (\n            <div></div>\n          )}\n\n          {AttendenceFilterAction === true ? (\n            <div className=\"filter_container_att\">\n               <div className='filter_subcontainer_reff'>\n                {mapAttendence()}\n              </div>\n                <div className='filter_options'>\n                  <span onClick={() => clearAllAttFilter('remove_filter')} style={{ color: 'rgba(223, 116, 106, 1)' }}>\n                    Remove filter\n                  </span>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span onClick={() => clearAllAttFilter('cancel')}>Cancel</span>\n                    {AttendenceFilter.length === 0 ? \n                    <span style={{ paddingLeft: 10 }}>\n                      Apply\n                    </span>\n                     :\n                     <span onClick={() => getData()} style={{ paddingLeft: 10,color:'blue' }}>\n                      Apply\n                    </span>\n                    }\n                  </div>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          {TypeFilterAction === true ? (\n            <div className=\"filter_container_type\">\n              <div className='filter_subcontainer_reff'>\n                {mapType()}\n              </div>\n                <div className='filter_options'>\n                  <span onClick={() => clearAllTypeFilter('remove_filter')} style={{ color: 'rgba(223, 116, 106, 1)' }}>\n                    Remove filter\n                  </span>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <span onClick={() => clearAllTypeFilter('cancel')}>Cancel</span>\n                    {TypeFilter.length === 0 ?\n                    <span style={{ paddingLeft: 10 }}>\n                      Apply\n                    </span>\n                     :\n                     <span onClick={() => getData()} style={{ paddingLeft: 10,color:'blue' }}>\n                        Apply\n                      </span>\n                      }\n                  </div>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n\n        <Table\n          columnDefs={columnDefs}\n          tableData={contactLeads.data}\n          selectedFilters={selectedFilters}\n          openFilterAction={openFilterAction}\n          pagination={{ ...contactLeads.pagination, getListPerPage }}\n          renderCheckbox={Checkbox}\n          isButtonCard={<span className=\"next-arrow\">{DownArrow}</span>}\n          setFilter={setFilter}\n          filter={filter}\n          isLoading={loading}\n          listName=\"leads\"\n          getSelectedData={getSelectedData}\n        ></Table>\n      </div>\n    </div>\n  );\n};\nexport default ContactLeads;\n","import React from 'react';\n\nconst Popover = ({ button, children, className = '' }) => {\n  return (\n    <div className={`nav-item dropdown popover-dropdown`}>\n      <span className=\"nav-item nav-link dropdown-toggle\" id=\"bd-versions\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n        {button}\n      </span>\n      <div className={`dropdown-menu dropdown-menu-md-right ${className}`} aria-labelledby=\"bd-versions\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Popover;\n"],"sourceRoot":""}