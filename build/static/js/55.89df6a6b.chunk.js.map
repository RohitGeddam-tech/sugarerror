{"version":3,"sources":["components/FormInputs/TextInput/TextInput.jsx","components/FormInputs/SelectInput/SelectInput.jsx","components/Common/Card/Card.jsx","hooks/useDebounce.js","components/Common/SearchBox/SearchBox.jsx","utils/constants.js","pages/Admin/Dashboard/Statistics/Statistics.jsx","components/Graphs/PieChart.js"],"names":["TextInput","type","placeholder","value","name","onChange","onBlur","error","disabled","icon","className","hasGrayBack","showPass","maxLength","ref","useState","showPassword","setShowPassword","hasError","inputRef","useRef","autoComplete","onClick","hidePasswordEye","showPasswordEye","SelectInput","options","isMulti","hideSelectedOptions","isClearable","isLoading","hidePlaceholder","defaultValue","isSearchable","parentClass","parentRef","classNamePrefix","onFocus","current","classList","add","remove","removeSelected","isDisabled","Card","title","children","list","cardType","centerHeader","cardName","searchBox","onSelectInputChange","input","length","role","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","memo","setFilter","filter","searchTerm","setSearchTerm","debouncedSearchTerm","search","current_page","e","target","Search","rupeeSymbol","Statistics","stats","setStats","loading","setLoading","isAssistAdmin","setAssistAdmin","profile","useContext","ProfileContext","getStats","selectedRole","a","fetchRequest","url","method","isAuth","res","status","json","data","temp","lab_registration_graph","compilePieChartData","client_conversion_graph","legendPosition","height","width","total_registered_patients","total_registered_lab","total_revenue","total_credit_used","PieChart","Number","cutoutPercentage","maintainAspectRatio","responsive","elements","arc","borderWidth","legend","position","fullWidth","labels","boxWidth","padding"],"mappings":"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","file":"static/js/55.89df6a6b.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { hidePasswordEye, showPasswordEye } from '../../../assets/icons';\n\nfunction TextInput({\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onBlur,\n  error,\n  disabled = false,\n  icon,\n  className = '',\n  hasGrayBack = false,\n  showPass,\n  maxLength,\n  ref,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  let hasError = error ? 'has-error' : '';\n  className += ` form-control `;\n  const inputRef = useRef(null);\n  return (\n    <>\n      <div className={`input-group text-input ${hasError} ${hasGrayBack ? 'background-gray' : ''}`}>\n        <input\n          type={(showPass ? (!showPassword ? 'password' : 'text') : type) || 'text'}\n          className={className}\n          name={name}\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          ref={ref || inputRef}\n          disabled={disabled}\n          onBlur={onBlur}\n          maxLength={maxLength}\n        />\n        <label className=\"input-placeholder\">{placeholder}</label>\n        {icon ? <span className=\"input-icon\">{icon}</span> : <></>}\n        {showPass ? (\n          <span className=\"input-icon cursor-pointer\" onClick={() => setShowPassword(!showPassword)}>\n            {showPassword ? hidePasswordEye : showPasswordEye}\n          </span>\n        ) : (\n          <></>\n        )}\n        {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n      </div>\n    </>\n  );\n}\nexport default TextInput;\n","import React, { useRef } from 'react';\nimport Select from 'react-select';\n\nconst SelectInput = ({\n  className = '',\n  options = [],\n  value,\n  onChange,\n  placeholder,\n  error,\n  hasGrayBack = false,\n  isMulti = false,\n  hideSelectedOptions = true,\n  isClearable = true,\n  disabled,\n  isLoading,\n  hidePlaceholder,\n  defaultValue,\n  isSearchable = false,\n}) => {\n  let parentClass = `input-group select-control-input ${error ? 'has-error' : ''} ${hasGrayBack ? 'background-gray' : ''} ${\n    value && value.value ? 'has-value' : ''\n  } ${hidePlaceholder ? 'hide-placeholder' : ''} ${disabled ? 'cursor-notAllowed' : ''}`;\n\n  className += ` select-input `;\n  const parentRef = useRef(null);\n  return (\n    <>\n      <div className={parentClass} ref={parentRef}>\n        <Select\n          value={value}\n          onChange={onChange}\n          options={options}\n          className={className}\n          classNamePrefix=\"select-input\"\n          placeholder={<div>{''}</div>}\n          onFocus={() => parentRef.current.classList.add('select-focused')}\n          onBlur={() => parentRef.current.classList.remove('select-focused')}\n          isClearable={isClearable}\n          isMulti={isMulti}\n          removeSelected={false}\n          defaultValue={defaultValue}\n          isDisabled={disabled}\n          isLoading={isLoading}\n          isSearchable={isSearchable}\n        />\n        <label className=\"select-placeholder\">{placeholder}</label>\n      </div>\n      {error ? <p className=\"assistive-text error-text\">{error}</p> : <p className=\"assistive-text\"></p>}\n    </>\n  );\n};\nexport default SelectInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '../../FormInputs/SelectInput/SelectInput';\nimport SearchBox from '../SearchBox/SearchBox';\n\nconst Card = ({\n  title,\n  children,\n  list = [],\n  value,\n  cardType = 'table',\n  centerHeader = false,\n  cardName = '',\n  className = '',\n  searchBox,\n  onSelectInputChange,\n  isLoading = false,\n  input,\n}) => {\n  return (\n    <div className={`paper paper-card ${cardType === 'number' ? 'number-card' : ''} ${cardName} ${className}`}>\n      <div className={`content-header d-flex align-items-baseline ${centerHeader ? 'justify-content-center' : 'justify-content-between'}`}>\n        <p className=\"title\">{title}</p>\n        {input ? (\n          input\n        ) : list.length ? (\n          <div className=\"select-wrapper\">\n            <SelectInput\n              options={list}\n              value={value}\n              onChange={value => onSelectInputChange(value)}\n              isClearable={false}\n              isSearchable={false}\n            />\n          </div>\n        ) : (\n          <></>\n        )}\n        {searchBox ? <SearchBox /> : <></>}\n      </div>\n      {isLoading ? (\n        <div className=\"text-center\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      ) : cardType === 'number' ? (\n        <div className=\"count font-weight-bold\">{children}</div>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\nCard.propTypes = { title: PropTypes.string, content: PropTypes.string, list: PropTypes.array };\n\nexport default Card;\n","import { useEffect, useState } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { memo, useEffect, useState } from 'react';\nimport { Search } from '../../../assets/icons';\nimport useDebounce from '../../../hooks/useDebounce';\nimport TextInput from '../../FormInputs/TextInput/TextInput';\n\nconst SearchBox = ({ setFilter, filter, className = '', placeholder }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  // const [results, setResults] = useState([]);\n  // const [isSearching, setIsSearching] = useState(false);\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(\n    () => {\n      if (setFilter) {\n        if (debouncedSearchTerm) {\n          setFilter({ ...filter, search: debouncedSearchTerm, current_page: 1 });\n          // setIsSearching(true);\n          // searchCharacters(debouncedSearchTerm).then(results => {\n          //   setIsSearching(false);\n          //   setResults(results);\n          // });\n        } else {\n          setFilter({ ...filter, search: '',current_page: 1 });\n          // setResults([]);\n        }\n      }\n    },\n    [debouncedSearchTerm], // eslint-disable-line react-hooks/exhaustive-deps\n    // Only call effect if debounced search term changes\n  );\n\n  return (\n    <div className={`form-group search-input-wrapper ${className}`}>\n      <TextInput\n        placeholder={placeholder}\n        value={searchTerm || ''} // Its taking null if no value is passed. Hence empty string passed\n        onChange={e => setSearchTerm(e.target.value)}\n        icon={Search}\n        className=\"search-input\"\n      ></TextInput>\n    </div>\n  );\n};\n\nexport default memo(SearchBox);\n","const rupeeSymbol = '₹';\n\nexport { rupeeSymbol };\n","import React, { useEffect, useState, useContext } from 'react';\nimport Card from '../../../../components/Common/Card/Card';\nimport { fetchRequest } from '../../../../utils/api';\nimport { rupeeSymbol } from '../../../../utils/constants';\nimport PieChart from '../../../../components/Graphs/PieChart';\nimport { compilePieChartData } from '../../../../utils/custom';\nimport { ProfileContext } from '../../../../context/context';\n\nconst Statistics = () => {\n  const [stats, setStats] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isAssistAdmin, setAssistAdmin] = useState(false);\n  const { profile } = useContext(ProfileContext);\n  useEffect(() => {\n    getStats();\n    if (profile && profile.selectedRole && profile.selectedRole?.role?.name === 'assistant_admin') {\n      setAssistAdmin(true);\n    }\n  }, [profile]);\n\n  const getStats = () => {\n    setLoading(true);\n    (async () => {\n      const res = await fetchRequest({\n        url: `/super_admin/dashboard/stats`,\n        method: 'GET',\n        isAuth: true,\n      });\n\n      if (res && res.status === 200) {\n        setLoading(false);\n        const data = await res.json();\n        const temp = data.data;\n        if (temp) {\n          temp.lab_registration_graph = compilePieChartData(temp.lab_registration_graph);\n          temp.client_conversion_graph = compilePieChartData(temp.client_conversion_graph);\n        }\n        setStats(data.data);\n        return data;\n      } else {\n        setLoading(false);\n      }\n      return;\n    })();\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"row\">\n        <div className=\"col-md-4 col-12\">\n          <Card title=\"Labs Registered\" isLoading={loading}>\n            <PieChart data={stats.lab_registration_graph} legendPosition=\"bottom\" height=\"280\"></PieChart>\n          </Card>\n        </div>\n        <div className=\"col-md-4 col-12\">\n          <Card title=\"Client conversion graph\" isLoading={loading}>\n            <PieChart data={stats.client_conversion_graph} height=\"220\" width=\"320\"></PieChart>\n          </Card>\n          <Card title=\"Total no. of patients registered\" cardType=\"number\" centerHeader={true} isLoading={loading}>\n            {stats.total_registered_patients}\n          </Card>\n        </div>\n        <div className=\"col-md-4 col-12\">\n          <Card title=\"Total no. of labs registered\" cardType=\"number\" centerHeader={true} isLoading={loading}>\n            {stats.total_registered_lab}\n          </Card>\n          {!isAssistAdmin && (\n            <Card title=\"Total Revenue\" cardType=\"number\" centerHeader={true} isLoading={loading}>\n              {stats.total_revenue ? `${rupeeSymbol} ${stats.total_revenue}` : ''}\n            </Card>\n          )}\n          <Card title=\"Total Credits Used\" cardType=\"number\" centerHeader={true} isLoading={loading}>\n            {stats.total_credit_used}\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nconst PieChart = ({ data, legendPosition = 'right', width, height }) => {\n  // Enable pie chart only if data is not empty or null\n  return (\n    <Pie\n      width={width ? Number(width) : null}\n      height={height ? Number(height) : null}\n      data={data}\n      options={{\n        cutoutPercentage: 0,\n        maintainAspectRatio: false,\n        responsive: false,\n        elements: {\n          arc: {\n            borderWidth: 0.2,\n          },\n        },\n        legend: {\n          position: legendPosition,\n          fullWidth: true,\n          labels: {\n            boxWidth: 10,\n            padding: 15,\n          },\n        },\n      }}\n    />\n  );\n};\n\nexport default PieChart;\n"],"sourceRoot":""}