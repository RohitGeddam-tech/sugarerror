{"version":3,"sources":["components/FormInputs/Checkbox/CheckboxInput.jsx","pages/Patient/ReportBills/ViewReport.jsx","components/Accordion/Accordion.jsx","components/Details/Details.jsx"],"names":["CheckboxInput","name","label","value","checked","onClick","blue","red","className","disabled","checkboxFillColor","type","onChange","CheckBoxBlue","dangerouslySetInnerHTML","__html","ViewReport","profile","useContext","ProfileContext","history","useHistory","useState","initials","setInitials","error","setError","reportValues","setReportValues","selectedTests","setSelectedTests","selectAllTests","setSelectAllTests","show","message","notification","setNotification","reportId","patient","referred_by","created_at","getDataById","useCallback","a","fetchRequest","url","selectedRole","uuid","method","isAuth","res","status","json","data","formatReportValues","useEffect","location","state","getTestsAccordionData","useMemo","map","item","test_remark","appt_sub_tests","report_type","report_sent","interpretation","technique","note","test_id","unit","test_validation","showRangeColumn","remark","disable","renderCheckBox","includes","tests","splice","indexOf","push","heading","body","width","length","subTest","ind","key","test_type","colSpan","groupTest","abnormal","range_from","range_to","format","presentation","result","test","rangeTest","outOfRange","isOutOfRange","parse","getResult","downloadBill","blob","file","Blob","fileURL","URL","createObjectURL","downloadLink","document","createElement","fileName","full_name","href","download","click","gender","age","cardClass","testAccordion","some","darkBlue","DownloadReport","id","report_url","withBaseUrl","window","open","black","dummy","Accordion","val","dataToggle","dataTarget","ariaExpanded","ariaControls","height","viewBox","xmlns","d","fill","aria-labelledby","data-parent","Details","children"],"mappings":"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","file":"static/js/62.c8aa1a7b.chunk.js","sourcesContent":["import React from 'react';\nimport { CheckBoxBlue } from '../../../assets/icons';\n\nfunction CheckboxInput({ name, label, value, checked = false, onClick, blue, red, className = '', disabled }) {\n  let checkboxFillColor = blue ? 'blue' : 'red';\n  return (\n    <div className={`d-flex checkbox-input ${className} pure-material-checkbox ${disabled ? 'disabled' : ''}`}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={onClick} //As it is an Input Element onChange method needed for any changeEvent.\n      />\n      <div\n        className={`mr-3 checkbox-checked ${checkboxFillColor}`}\n        onClick={() => {\n          if (disabled) return;\n          else onClick();\n        }}\n      >\n        {CheckBoxBlue}\n      </div>\n      <label dangerouslySetInnerHTML={{ __html: label }}></label>\n    </div>\n  );\n}\n\nexport default CheckboxInput;\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { DownloadReport } from '../../../assets/icons';\nimport Accordion from '../../../components/Accordion/Accordion';\nimport { ContainedButton } from '../../../components/Buttons/Button';\nimport Details from '../../../components/Details/Details';\nimport CheckboxInput from '../../../components/FormInputs/Checkbox/CheckboxInput';\nimport { ProfileContext } from '../../../context/context';\nimport { fetchRequest } from '../../../utils/api';\nimport { formatReportValues, isOutOfRange } from '../../../utils/custom';\nimport parse from 'html-react-parser';\n\nconst ViewReport = () => {\n  const { profile } = useContext(ProfileContext);\n  const history = useHistory();\n  const [initials, setInitials] = useState({});\n  const [error, setError] = useState({});\n  const [reportValues, setReportValues] = useState([]);\n  const [selectedTests, setSelectedTests] = useState([]);\n  const [selectAllTests, setSelectAllTests] = useState(false);\n  const [notification, setNotification] = useState({ show: false, message: '', type: '' });\n\n  const { reportId, patient, referred_by, created_at } = initials;\n\n  const getDataById = useCallback(async () => {\n    if (reportId) {\n      setError(error);\n      setNotification(notification);\n      const res = await fetchRequest({ url: `/patient/${profile.selectedRole.uuid}/reports/${reportId}`, method: 'GET', isAuth: true });\n      if (res && res.status === 200) {\n        const { data } = await res.json();\n        if (data) {\n          setReportValues(formatReportValues(data));\n          setInitials({ ...initials, ...data });\n        }\n        return data;\n      }\n    }\n  }, [reportId, profile, initials]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (reportId) {\n      setSelectAllTests(false);\n      getDataById();\n    }\n  }, [reportId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    history.location.state && setInitials(history.location.state);\n  }, [history]);\n\n  const getResult = (test,rangeTest) => {\n    const outOfRange = rangeTest && isOutOfRange(rangeTest, test.value);\n    return <label className={outOfRange ? 'out-of-range' : ''}>{test.report_type.name == 'Pre-Defined Test Result' ? <label className=\"editor-content\">{parse(test.value)}</label>: typeof test.value === 'string' ? test.value : test.value?.label}</label>\n  };\n\n  const getTestsAccordionData = useMemo(\n    () =>\n      reportValues.map(item => {\n        const {\n          test_remark,\n          appt_sub_tests,\n          name,\n          report_type,\n          report_sent,\n          interpretation,\n          technique,\n          method,\n          note,\n          test_id,\n          unit,\n          test_validation,\n          showRangeColumn,\n          remark,\n        } = item;\n        return {\n          className: report_sent ? 'report-sent-success' : '',\n          disable: !report_sent,\n          renderCheckBox: (\n            <CheckboxInput\n              name=\"select-all\"\n              className=\"ml-2\"\n              checked={selectedTests.includes(test_id)}\n              disabled={!report_sent}\n              //   value={checkboxObj.key}\n              blue\n              onClick={() => {\n                setSelectAllTests(false);\n                let tests = [...selectedTests];\n                tests.includes(test_id) ? tests.splice(tests.indexOf(test_id), 1) : tests.push(test_id);\n                setSelectedTests(tests);\n              }}\n            />\n          ),\n          heading: (\n            <div className=\"d-flex justify-content-between align-items-center w-100\">\n              <p>{name}</p>\n              {report_sent && <i className=\"mr-5 semi-bold report-status\">Report Available</i>}\n            </div>\n          ),\n          body: (\n            <div className=\"test-result-card\">\n              <table className=\"test-result-table\">\n                <thead className=\"on-mobile-hide\">\n                  <tr>\n                    <th width=\"30%\">Test</th>\n                    <th width=\"45%\">Result</th>\n                    {showRangeColumn && (\n                      <th className=\"text-center\" width=\"25%\">\n                        Normal Range\n                      </th>\n                    )}\n                  </tr>\n                </thead>\n                {item?.appt_sub_tests?.length ? (\n                  appt_sub_tests.map((subTest, ind) => {\n                    const { unit, report_type, test_validation } = subTest;\n                    return (\n                      <tbody key={ind}>\n                        {subTest.test_type === 'group' ? (\n                          <tr key={ind}>\n                            <td colSpan=\"3\" className=\"test-name\">\n                              <p>{subTest.name}</p>\n                            </td>\n                          </tr>\n                        ) : (\n                          <></>\n                        )}\n                        {subTest?.appt_sub_tests?.length ? (\n                          subTest.appt_sub_tests.map((groupTest, ind) => {\n                            const { unit, report_type, test_validation } = groupTest;\n                            const isLast = (subTest.appt_sub_tests.length-1) === ind;\n                            return (\n                              <tr key={ind} className={`group-test-div ${groupTest.abnormal ? 'is-abnormal' : ''}`} >\n                                <td>\n                                  <p className=\"sub-test-name\">{groupTest.name}</p>\n                                  <p className=\"on-mobile-show default-range\">\n                                    {report_type.name === 'Range'\n                                      ? `Normal Range: ${test_validation?.range_from ? test_validation.range_from : 'NA'} - ${\n                                          test_validation?.range_to ? test_validation.range_to : 'NA'\n                                        } ${unit?.name ? unit.name : ''}`\n                                      : ''}\n                                  </p>\n                                </td>\n                                <td className={`test-result ${report_type?.name === 'Range'?'range-test-result' : ''}`}>\n                                  {report_type.format?.presentation.result\n                                    ? typeof groupTest.value === 'string'\n                                      ? groupTest.value\n                                      : groupTest.value?.label\n                                    : '-'}\n                                </td>\n                                <td className=\"text-center on-mobile-hide\">\n                                  {report_type.name === 'Range'\n                                    ? `${test_validation?.range_from ? test_validation.range_from : 'NA'} - ${\n                                        test_validation?.range_to ? test_validation.range_to : 'NA'\n                                      } ${unit?.name ? unit.name : ''}`\n                                    : ''}\n                                </td>\n                              </tr>\n                            );\n                          })\n                        ) : (\n                          <tr key={ind} className={subTest.abnormal ? 'is-abnormal' : ''}>\n                            <td>\n                              <p className=\"sub-test-name\">{subTest.name}</p>\n                              <p className=\"on-mobile-show default-range\">\n                                {report_type.name === 'Range'\n                                  ? `Normal Range: ${test_validation?.range_from ? test_validation.range_from : 'NA'} - ${\n                                      test_validation?.range_to ? test_validation.range_to : 'NA'\n                                    } ${unit?.name ? unit.name : ''}`\n                                  : ''}\n                              </p>\n                            </td>\n                            <td className={`test-result ${report_type?.name === 'Range'?'range-test-result' : ''}`}>\n                              {report_type.format?.presentation.result\n                                ? getResult(subTest,report_type.name === 'Range' ? test_validation : null,)\n                                : '-'}\n                            </td>\n                            <td className=\"text-center on-mobile-hide\">\n                              {report_type.name === 'Range'\n                                ? `${test_validation?.range_from ? test_validation.range_from : 'NA'} - ${\n                                    test_validation?.range_to ? test_validation.range_to : 'NA'\n                                  } ${unit?.name ? unit.name : ''}`\n                                : ''}\n                            </td>\n                          </tr>\n                        )}\n                      </tbody>\n                    );\n                  })\n                ) : (\n                  <tbody>\n                    <tr className={item.abnormal ? 'is-abnormal' : ''}>\n                      <td>\n                        <p className=\"sub-test-name\">{name}</p>\n                        <p className=\"on-mobile-show default-range\">\n                          {report_type?.name === 'Range'\n                            ? `Normal Range: ${test_validation?.range_from ? test_validation.range_from : 'NA'} - ${\n                                test_validation?.range_to ? test_validation.range_to : 'NA'\n                              } ${unit?.name ? unit.name : ''}`\n                            : ''}\n                        </p>\n                      </td>\n                      <td className={`test-result ${report_type?.name === 'Range'?'range-test-result' : ''}`}>\n                        {report_type?.format.presentation.result ? (typeof item.value === 'string' ? item.value : item.value?.label) : '-'}\n                      </td>\n                      <td className=\"text-center on-mobile-hide\">\n                        {report_type?.name === 'Range'\n                          ? `${test_validation?.range_from ? test_validation.range_from : 'NA'} - ${\n                              test_validation?.range_to ? test_validation.range_to : 'NA'\n                            } ${unit?.name ? unit.name : ''}`\n                          : ''}\n                      </td>\n                    </tr>\n                  </tbody>\n                )}\n              </table>\n              {interpretation && <Details label=\"Interpretation\" value={parse(interpretation)} className=\"editor-content\" />}\n              {method && <Details label=\"Method\" value={parse(method)} className=\"editor-content\" />}\n              {technique && <Details label=\"Technique\" value={parse(technique)} className=\"editor-content\" />}\n              {note && <Details label=\"Note\" value={parse(note)} className=\"editor-content\" />}\n              {test_remark && <Details label=\"Remark\" value={parse(test_remark)} className=\"editor-content\" />}\n              {remark && <Details label=\"Lab Remarks\" value={remark} />}\n            </div>\n          ),\n        };\n      }),\n    [reportValues, selectedTests],\n  );\n  const downloadReport = () => {\n    reportValues.map(async item => {\n      if (selectedTests.some(id => id === item.test_id)) {\n        if (item.report_url) {\n          const res = await fetchRequest({ url: item.report_url, method: 'GET', isAuth: true, withBaseUrl: 'true' });\n          if (res && res.status === 200) {\n            const data = await res.blob();\n            const file = new Blob([data], { type: 'application/pdf' });\n            const fileURL = URL.createObjectURL(file);\n            const downloadLink = document.createElement('a');\n            const fileName = `${item.name}.pdf`;\n            // downloadLink.href = fileURL;\n            // downloadLink.download = fileName;\n            // downloadLink.click();\n            window.open(fileURL,\"_blank\");\n            return data;\n          }\n        }\n      }\n    });\n  };\n\n  const downloadBill = useCallback(async () => {\n    const res = await fetchRequest({\n      url: `/patient/${profile.selectedRole.uuid}/reports/${reportId}/download_receipt\n    `,\n      method: 'GET',\n      isAuth: true,\n    });\n    if (res && res.status === 200) {\n      const data = await res.blob();\n      const file = new Blob([data], { type: 'application/pdf' });\n      const fileURL = URL.createObjectURL(file);\n      const downloadLink = document.createElement('a');\n      const fileName = `${patient?.full_name || 'patient'}_bill.pdf`;\n      downloadLink.href = fileURL;\n      downloadLink.download = fileName;\n      downloadLink.click();\n      return data;\n    }\n  }, [reportId, profile, patient]);\n\n  const { full_name = '', gender = '', age = '' } = patient ? patient : {};\n  return (\n    <div className=\"report-wrapper pt-3 d-flex flex-column\">\n      <div className=\"view-report-top\">\n        <div className=\"d-flex mHide\">\n          <div className=\"d-flex justify-content-between w-100 p-3\">\n            <Details label=\"Patient Name\" value={full_name} />\n            <Details label=\"Age / Sex\" value={`${age}/${gender}`} />\n            <Details label=\"Referred Doctor\" value={referred_by?.full_name || 'Self'} />\n            <Details label=\"Date\" value={created_at} />\n          </div>\n        </div>\n        <div className=\"content mb-4 p-4\">\n          <Accordion cardClass=\"mb-3\" className=\"test-result-acc\" testAccordion data={getTestsAccordionData} />\n        </div>\n      </div>\n      <div className=\"view-report-bottom justify-content-center align-items-center py-2 px-3 footer padRmM\">\n        <div className=\"d-flex justify-content-between align-items-center w-100 viewReport\">\n          <div className=\"select_all\">\n            <CheckboxInput\n              name=\"select-all\"\n              label={selectAllTests ? \"Unselect All\" : \"Select All\"}\n              checked={selectAllTests}\n              blue\n              onClick={() => {\n                let tests = [];\n                !selectAllTests && reportValues.map(({ test_id }) => tests.push(test_id));\n                setSelectedTests(tests);\n                setSelectAllTests(!selectAllTests);\n              }}\n              disabled={reportValues.some(item => !item.report_sent)}\n            />\n          </div>\n          <div className=\"actions p-2\">\n            <ContainedButton onClick={downloadBill} darkBlue className=\"mr-2 download-bill-btn\">\n              <div className=\"d-flex align-items-center\">\n                <p className=\"mr-2\">{DownloadReport}</p>\n                <p className=\"pt-1\">Download Bill</p>\n              </div>\n            </ContainedButton>\n            <ContainedButton onClick={downloadReport} disabled={!selectedTests.length} black className=\"download-report-btn\">\n              <div className=\"d-flex align-items-center\">\n                <p className=\"mr-2\">{DownloadReport}</p>\n                <p className=\"pt-1\">Download Report</p>\n              </div>\n            </ContainedButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ViewReport;\n","import React from 'react';\nimport { TextButton } from '../Buttons/Button';\n\nconst dummy = {\n  heading: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore et dolore?',\n  body:\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore.',\n};\n\nfunction Accordion({ data = [], testAccordion, className, cardClass }) {\n  return (\n    <div className={`${testAccordion ? 'test-accordion' : 'accordion'} ${className ? className : ''}`} id=\"accordionExample\">\n      {data.map((val, ind) => (\n        <div className={`card ${cardClass ? cardClass : ''}`} key={ind}>\n          <div className=\"card-header\" id=\"headingOne\">\n            <h2 className={`mb-0 d-flex align-items-center accordion-content ${val.className ? val.className : ''}`}>\n              {val && val.renderCheckBox}\n              <TextButton\n                className=\"acc-btn d-flex align-items-center collapse-btn collapsed justify-content-between\"\n                dataToggle=\"collapse\"\n                dataTarget={`#collapse-${ind}`}\n                ariaExpanded=\"true\"\n                ariaControls={`collapse-${ind}`}\n                disabled={val?.disable}\n              >\n                {(val && val.heading) || dummy.heading}\n                <p className=\"down-arrow\">\n                  <svg width=\"18\" height=\"18\" viewBox=\"0 0 9 15\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                      d=\"M0.371183 0.372785C-0.123728 0.867695 -0.123728 1.66717 0.371183 2.16208L5.29491 7.0858L0.371183 12.0095C-0.123728 12.5044 -0.123728 13.3039 0.371183 13.7988C0.866093 14.2937 1.66556 14.2937 2.16047 13.7988L7.98519 7.9741C8.4801 7.47919 8.4801 6.67972 7.98519 6.18481L2.16047 0.360095C1.67825 -0.122126 0.866093 -0.122126 0.371183 0.372785Z\"\n                      fill=\"#828282\"\n                    />\n                  </svg>\n                </p>\n              </TextButton>\n            </h2>\n          </div>\n          <div id={`collapse-${ind}`} className=\"collapse\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\n            <div className=\"card-body\">{(val && val.body) || dummy.body}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Accordion;\n","import React from 'react';\n\nconst Details = ({ className, label, value, children }) => {\n  return (\n    <div className={`details ${className ? className : ''}`}>\n      <label className=\"label mr-2\">{`${label} : `}</label>\n      {value && <label className=\"value\">{value ? value : '-'}</label>}\n      {children ? children : ''}\n    </div>\n  );\n};\n\nexport default Details;\n"],"sourceRoot":""}