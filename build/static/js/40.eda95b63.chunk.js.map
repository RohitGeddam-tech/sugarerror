{"version":3,"sources":["components/FormInputs/Checkbox/CheckboxInput.jsx","pages/Pathology/Patients/List/PdfDocument.jsx","pages/Pathology/Patients/List/PatientReport.jsx"],"names":["CheckboxInput","name","label","value","checked","onClick","blue","red","className","disabled","checkboxFillColor","type","onChange","CheckBoxBlue","dangerouslySetInnerHTML","__html","styles","StyleSheet","create","page","fontFamily","backgroundColor","fontSize","lineHeight","width","height","body","flex","padding","header","top","headerTop","customLetterheadImage","flexDirection","defaultLetterheadWrapper","margin","defaultLetterheadLogo","maxHeight","maxWidth","labDetails","flexGrow","textAlign","marginLeft","labName","color","labAddress","marginBottom","patientDetails","alignItems","flexWrap","borderTop","borderBottom","paddingTop","patientInfo","minWidth","testSection","position","minHeight","marginTop","testName","display","table","tableHeadRow","tableDataRow","firstCol","secondCol","thirdCol","groupTestName","moreInfoWrapper","moreInfo","labelText","valueText","whiteSpace","overflow","endOfReport","technicianSign","justifySelf","footer","customFooterImage","flexRow","justifyContent","flexColumn","boldText","tableHead","highlight","parseEditorHtml","replace","html","Result","rangeTest","abnormal","reportType","outOfRange","isOutOfRange","style","Object","PdfDocument","props","ref","data","tests","reportData","patient","letterhead_type","letterhead","logo","techniciansSign","print_technician_sign","techSign","imgPath","technician_name","technician_degree","doctorsSign","print_doctor_sign","docSign","doctor_name","doctor_degree","formatted_lab_name","address_line_one","address_line_two","city","state","pincode","mobile","email","full_name","gender","age","referred_by","formatted_created_at","document","size","wrap","fixed","print_letterhead","imagePreviewUrl","src","map","ind","appt_sub_tests","report_type","interpretation","technique","method","test_remark","remark","test_validation","unit","showRangeColumn","note","break","length","subTest","test_type","groupTest","lastIndex","paddingLeft","range_from","range_to","format","presentation","result","normal_range","order","PatientReport","loginAs","localStorage","getItem","history","useHistory","reportState","location","profile","useContext","ProfileContext","useState","testData","setTestData","setReportData","patientId","labId","testIds","getDataById","useCallback","a","fetchRequest","url","isAuth","res","status","json","selectedTests","appointment_test","filter","test","includes","uuid","formatReportValues","useEffect","getBranchDetails","technician_sign","doctor_sign","selectedRole","lab","tempLetterHead","tempDoctorSign","tempTechSign","lightBlue","window","frames","print","id","title"],"mappings":"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","file":"static/js/40.eda95b63.chunk.js","sourcesContent":["import React from 'react';\nimport { CheckBoxBlue } from '../../../assets/icons';\n\nfunction CheckboxInput({ name, label, value, checked = false, onClick, blue, red, className = '', disabled }) {\n  let checkboxFillColor = blue ? 'blue' : 'red';\n  return (\n    <div className={`d-flex checkbox-input ${className} pure-material-checkbox ${disabled ? 'disabled' : ''}`}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={onClick} //As it is an Input Element onChange method needed for any changeEvent.\n      />\n      <div\n        className={`mr-3 checkbox-checked ${checkboxFillColor}`}\n        onClick={() => {\n          if (disabled) return;\n          else onClick();\n        }}\n      >\n        {CheckBoxBlue}\n      </div>\n      <label dangerouslySetInnerHTML={{ __html: label }}></label>\n    </div>\n  );\n}\n\nexport default CheckboxInput;\n","import React from 'react';\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\nimport { isOutOfRange } from '../../../../utils/custom';\nimport Html from 'react-pdf-html';\n\nconst styles = StyleSheet.create({\n  page: {\n    fontFamily: 'Helvetica',\n    backgroundColor: '#ffffff',\n    fontSize: 12,\n    lineHeight: 1.5,\n    width: 595,\n    height: 845,\n  },\n  body: {\n    flex: 1,\n    padding: '0 42 0',\n  },\n  // Header styles start\n  header: {\n    top: 30\n  },\n  headerTop: {\n    height: 125\n  },\n  customLetterheadImage: {\n    height: 110,\n    width: '100%',\n    flexDirection: 'column',\n  },\n  defaultLetterheadWrapper: {\n    padding: '0 0 0',\n    margin: '0 42',\n  },\n  defaultLetterheadLogo: {\n    maxHeight: '3cm',\n    maxWidth: '5.5cm',\n  },\n  labDetails: {\n    flexDirection: 'column',\n    flexGrow: 6,\n    textAlign: 'right',\n    marginLeft: '1cm',\n  },\n  labName: {\n    color: '#282C36',\n    fontSize: 16,\n  },\n  labAddress: {\n    marginLeft: '2.5cm',\n    color: '#282C36',\n    lineHeight: 1.2,\n    marginBottom: 8,\n  },\n\n  // Body styles start\n  patientDetails: {\n    flexDirection: 'row',\n    alignItems: 'stretch',\n    flexWrap: 'wrap',\n    borderTop: '1px solid #55575c',\n    borderBottom: '1px solid #55575c',\n    margin: '0 42 10',\n    paddingTop: 10,\n    height: 60\n  },\n  patientInfo: {\n    minWidth: 250,\n    marginBottom: '0.3cm',\n  },\n\n  // Test table css\n  testSection: {\n    position: 'relative',\n    minHeight: 400,\n    marginTop: 30\n  },\n  testName: {\n    fontSize: 14,\n    display: 'block',\n    textAlign: 'center',\n  },\n  table: {\n    lineHeight: 2,\n  },\n  tableHeadRow: {\n    flexDirection: 'row',\n    alignItems: 'stretch',\n    marginBottom: 5,\n    marginTop: 10,\n  },\n  tableDataRow: {\n    color: '#55575C',\n  },\n  firstCol: {\n    width: '30%',\n    color: '#55575C',\n  },\n  secondCol: {\n    width: '45%',\n    textAlign: 'left',\n    color: '#282C36',\n  },\n  thirdCol: {\n    width: '25%',\n    textAlign: 'right',\n    color: '#55575C',\n  },\n  groupTestName: {\n    color: '#55575C',\n  },\n  moreInfoWrapper: {\n    marginTop: 20\n  },\n  moreInfo: {\n    marginBottom: 15,\n  },\n  labelText: {\n    color: '#282C36',\n    marginBottom: 5,\n  },\n  valueText: {\n    color: '#55575C',\n    whiteSpace:'nowrap',\n    overflow:'auto'\n  },\n  endOfReport: {\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  technicianSign: { justifySelf: 'flex-end', width: '6cm', alignItems: 'flex-end' },\n\n  // Footer styles start\n  footer: {\n    minHeight: 52,\n    width: '100%',\n    marginTop: 20,\n  },\n  customFooterImage: {\n    height: 70,\n    width: '100%',\n  },\n\n  // common styles\n  flexRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  flexColumn: {\n    flexDirection: 'column',\n  },\n  boldText: {\n    fontFamily: 'Helvetica-Bold',\n  },\n  tableHead: {\n    color: '#282C36',\n    fontFamily: 'Helvetica-Bold',\n  },\n  highlight: {\n    color: '#282C36',\n    fontFamily: 'Helvetica-Bold',\n  },\n});\n\nconst parseEditorHtml = (value) => {\n  value = value.replace(/<figure/gim, \"<div \").replace(/\\/figure>/gim, \"/div>\");\n  const html = `<body>\n  <style>\n  *{\n    margin: 0;\n    padding: 0;\n    font-size: 12px;\n    line-height: 1.5;\n    color: #282C36;\n    font-family: Helvetica;\n  }\n  ul, ol{\n    margin: 0 16px 0 -20px;\n  }\n  li{\n    margin-bottom: 5px;\n  }\n  strong {\n    font-family: Helvetica-Bold;\n  }\n  .table {\n    overflow-x: scroll;\n    padding-top: 10px;\n  }\n  table{\n    margin: 10px 0;\n    width : 100%;\n    height : 100%;\n  }\n  table, th, td {\n    border: 1px solid #282C36;\n  }\n  td{\n    padding: 3px 5px;\n  }\n  </style>\n  <div class=\"editor-content\">${value}</div>\n  </body>`\n  return <Html>{html}</Html>\n}\n\nconst Result = ({ value, rangeTest, abnormal, reportType }) => {\n  const outOfRange = rangeTest && isOutOfRange(rangeTest, value);\n\n  return reportType == 'Pre-Defined Test Result' ? (\n    <View style={styles.secondCol}>{parseEditorHtml(value)}</View>\n  ) : (\n    <Text style={[styles.secondCol, (outOfRange || abnormal) && styles.highlight]}>{value instanceof Object ? value.label : value}</Text>\n  );\n};\n\nconst PdfDocument = (props, ref) => {\n  const { tests = [], reportData = {}, patient = {} } = props.data;\n  const {\n    letterhead_type,\n    letterhead,\n    footer,\n    logo,\n    techniciansSign: { print_technician_sign, imgPath: techSign, technician_name, technician_degree },\n    doctorsSign: { print_doctor_sign, imgPath: docSign, doctor_name, doctor_degree },\n    formatted_lab_name: labName,\n    address_line_one,\n    address_line_two,\n    city,\n    state,\n    pincode,\n    mobile,\n    email,\n  } = reportData;\n  const { full_name, gender, age, referred_by, formatted_created_at } = patient;\n\n  return (\n    <Document style={styles.document}>\n      <Page size=\"A4\" style={styles.page} wrap>\n        <View style={styles.header} fixed>\n          <View style={styles.headerTop}>\n            {letterhead_type === 'custom' && letterhead.print_letterhead ? (\n              letterhead.imagePreviewUrl || letterhead.imgPath ? (\n                <Image src={letterhead.imagePreviewUrl || letterhead.imgPath} style={styles.customLetterheadImage} />\n              ) : null\n            ) : letterhead_type === 'default' ? (\n              <View style={[styles.defaultLetterheadWrapper, styles.flexRow]}>\n                {logo.imagePreviewUrl || logo.imgPath ? (\n                  <Image src={logo.imagePreviewUrl || logo.imgPath} style={styles.defaultLetterheadLogo} />\n                ) : null}\n                <View style={styles.labDetails}>\n                  <Text style={[styles.labName, styles.boldText]}>{labName || ''}</Text>\n                  <View style={[styles.labAddress, styles.flexColumn]}>\n                    <Text>{address_line_one ? `${address_line_one}, ` : '-'}</Text>\n                    <Text>{address_line_two ? `${address_line_two}, ` : '-'}</Text>\n                    <Text>{`${city || '-'}, ${state || '-'}, ${pincode || '-'}`}</Text>\n                  </View>\n                  <Text style={styles.boldText}>\n                    {mobile || '-'} | {email || '-'}\n                  </Text>\n                </View>\n              </View>\n            ) : null}\n          </View>\n          <View style={styles.patientDetails}>\n            <Text style={styles.patientInfo}>\n              <Text style={styles.boldText}>Patient Name : </Text>\n              {full_name}\n            </Text>\n            <Text style={styles.patientInfo}>\n              <Text style={styles.boldText}>Age / Sex : </Text>\n              {`${age} / ${gender}`}\n            </Text>\n            <Text style={styles.patientInfo}>\n              <Text style={styles.boldText}>Referred Doctor : </Text>\n              {referred_by?.full_name || 'Self'}\n            </Text>\n            <Text style={styles.patientInfo}>\n              <Text style={styles.boldText}>Date : </Text>\n              {formatted_created_at}\n            </Text>\n          </View>\n        </View>\n\n        <View style={styles.body} wrap>\n          {tests.map(\n            (\n              {\n                value,\n                appt_sub_tests,\n                name,\n                report_type,\n                interpretation = '',\n                technique = '',\n                method = '',\n                test_remark = '',\n                remark = '',\n                test_validation,\n                unit,\n                showRangeColumn,\n                abnormal,\n                note\n              },\n              ind,\n            ) => (\n              <View break={ind > 0} style={styles.testSection}>\n                <Text style={[styles.testName, styles.boldText]}>{name}</Text>\n                <View style={styles.table}>\n                  <View style={[styles.tableHeadRow, styles.boldText]}>\n                    <Text style={[styles.firstCol, styles.tableHead]}>Test</Text>\n                    <Text style={[styles.secondCol, styles.tableHead]}>Result</Text>\n                    {showRangeColumn ? <Text style={[styles.thirdCol, styles.tableHead]}>Normal Range</Text> : null}\n                  </View>\n                  {appt_sub_tests?.length ? (\n                    appt_sub_tests.map(subTest => {\n                      const { unit, report_type, test_validation } = subTest;\n                      return (\n                        <>\n                          {subTest.test_type === 'group' ? (\n                            <Text style={[styles.groupTestName, styles.boldText, { marginBottom: 3 }]}>{subTest.name}</Text>\n                          ) : (\n                            <></>\n                          )}\n                          {subTest?.appt_sub_tests?.length ? (\n                            subTest.appt_sub_tests.map((groupTest, ind) => {\n                              const { unit, report_type, test_validation } = groupTest;\n                              const lastIndex = subTest.appt_sub_tests.length;\n                              return (\n                                <View\n                                  style={[styles.tableDataRow, styles.flexRow, { marginBottom: ind === lastIndex - 1 ? 10 : 4, paddingLeft: 10 }]}\n                                >\n                                  <Text style={styles.firstCol}>{groupTest.name}</Text>\n                                  <Result\n                                    value={groupTest.value}\n                                    rangeTest={report_type.name === 'Range' ? test_validation : null}\n                                    abnormal={groupTest.abnormal}\n                                    reportType={report_type.name}\n                                  />\n                                  <Text style={styles.thirdCol}>\n                                    {report_type.name === 'Range'\n                                      ? `${test_validation?.range_from ? test_validation.range_from : 'NA'} - ${\n                                          test_validation?.range_to ? test_validation.range_to : 'NA'\n                                        } ${unit?.name ? unit.name : ''}`\n                                      : ''}\n                                  </Text>\n                                </View>\n                              );\n                            })\n                          ) : (\n                            <View style={[styles.tableDataRow, styles.flexRow, { marginBottom: 10 }]}>\n                              <Text style={styles.firstCol}>{subTest.name}</Text>\n                              <Result\n                                value={subTest.value}\n                                rangeTest={report_type.name === 'Range' ? test_validation : null}\n                                abnormal={subTest.abnormal}\n                                reportType={report_type.name}\n                              />\n                              <Text style={styles.thirdCol}>\n                                {report_type.name === 'Range'\n                                  ? `${test_validation?.range_from ? test_validation.range_from : 'NA'} - ${\n                                      test_validation?.range_to ? test_validation.range_to : 'NA'\n                                    } ${unit?.name ? unit.name : ''}`\n                                  : ''}\n                              </Text>\n                            </View>\n                          )}\n                        </>\n                      );\n                    })\n                  ) : (\n                    <View style={[styles.tableDataRow, styles.flexRow, { marginBottom: 10 }]}>\n                      <Text style={styles.firstCol}>{name}</Text>\n                      <Result\n                        value={report_type?.format.presentation.result ? (value instanceof Object ? value.label : value) : '-'}\n                        rangeTest={report_type.name === 'Range' ? test_validation : null}\n                        abnormal={abnormal}\n                        reportType={report_type.name}\n                      />\n                      <Text style={styles.thirdCol}>\n                        {report_type?.format.presentation.normal_range\n                          ? `${test_validation?.range_from ? test_validation.range_from : 'NA'} - ${\n                              test_validation?.range_to ? test_validation.range_to : 'NA'\n                            } ${unit?.name ? unit.name : ''}`\n                          : ''}\n                      </Text>\n                    </View>\n                  )}\n                </View>\n                <View style={styles.moreInfoWrapper} wrap>\n                  {interpretation ? (\n                    <View style={[styles.flexColumn, styles.moreInfo]} wrap>\n                      <Text style={[styles.labelText, styles.boldText]}>Interpretation : </Text>\n                      <View style={styles.valueText}>\n                        {parseEditorHtml(interpretation)}\n                      </View>\n                    </View>\n                  ) : null}\n                  {method ? (\n                    <View style={[styles.flexColumn, styles.moreInfo]} wrap>\n                      <Text style={[styles.labelText, styles.boldText]}>Method : </Text>\n                      <View style={styles.valueText}>\n                        {parseEditorHtml(method)}\n                      </View>\n                    </View>\n                  ) : null}\n                  {technique ? (\n                    <View style={[styles.flexColumn, styles.moreInfo]} wrap>\n                      <Text style={[styles.labelText, styles.boldText]}>Technique : </Text>\n                      <View style={styles.valueText}>\n                        {parseEditorHtml(technique)}\n                      </View>\n                    </View>\n                  ) : null}\n                  {note ? (\n                    <View style={[styles.flexColumn, styles.moreInfo]} wrap>\n                      <Text style={[styles.labelText, styles.boldText]}>Note : </Text>\n                      <View style={styles.valueText}>\n                        {parseEditorHtml(note)}\n                      </View>\n                    </View>\n                  ) : null}\n                  {test_remark ? (\n                    <View style={[styles.flexColumn, styles.moreInfo]} wrap>\n                      <Text style={[styles.labelText, styles.boldText]}>Remark : </Text>\n                      <View style={styles.valueText}>\n                        {parseEditorHtml(test_remark)}\n                      </View>\n                    </View>\n                  ) : null}\n                  {remark ? (\n                    <View style={[styles.flexColumn, styles.moreInfo]} wrap>\n                      <Text style={[styles.labelText, styles.boldText]}>Lab Remarks : </Text>\n                      <View style={styles.valueText}>\n                        <Text>{remark}</Text>\n                      </View>\n                    </View>\n                  ) : null}\n                </View>\n                <Text style={[styles.boldText, styles.endOfReport]}>--------- End Of Report ---------</Text>\n                <View style={[styles.flexRow, { marginBottom: 10 }]} wrap>\n                  <View style={styles.flexColumn}>\n                    <View style={{ order: 1, minHeight: '2cm' }}>\n                      {print_technician_sign && techSign ? <Image src={techSign} style={{ width: '3.5cm', height: '2cm' }} /> : null}\n                    </View>\n                    <Text style={(styles.boldText, { order: 2, fontFamily: 'Helvetica-Bold', marginTop: 14 })}>{technician_name}</Text>\n                    <Text style={{ order: 3, marginTop: 5 }}>{technician_degree}</Text>\n                  </View>\n                  <View style={[styles.flexColumn, styles.technicianSign]}>\n                    <View style={{ order: 1, minHeight: '2cm' }}>\n                      {print_doctor_sign && docSign ? <Image src={docSign} style={{ width: '3.5cm', height: '2cm' }} /> : null}\n                    </View>\n                    <Text style={[styles.boldText, { order: 2, marginTop: 14 }]}>{doctor_name}</Text>\n                    <Text style={{ order: 3, marginTop: 5 }}>{doctor_degree}</Text>\n                  </View>\n                </View>\n              </View>\n            ),\n          )}\n        </View>\n        <View style={styles.footer} fixed>\n          {letterhead_type !== 'default' && letterhead.print_letterhead && footer ? (\n            <div className=\"report-footer\">\n              {footer.imagePreviewUrl || footer.imgPath ? (\n                <Image src={footer.imagePreviewUrl || footer.imgPath} style={styles.customFooterImage} />\n              ) : null}\n            </div>\n          ) : (\n            <View style={{ borderTop: '1px solid #55575c', margin: '0 42' }}></View>\n          )}\n        </View>\n      </Page>\n    </Document>\n  );\n};\nexport default PdfDocument;\n","import React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ContainedButton } from '../../../../components/Buttons/Button';\nimport CheckboxInput from '../../../../components/FormInputs/Checkbox/CheckboxInput';\nimport { ProfileContext } from '../../../../context/context';\nimport { fetchRequest } from '../../../../utils/api';\nimport PdfDocument from './PdfDocument';\nimport { BlobProvider} from '@react-pdf/renderer';\nimport { formatReportValues } from '../../../../utils/custom';\n\nconst PatientReport = () => {\n  const loginAs = localStorage.getItem('loginAs');\n  const history = useHistory();\n  const reportState = history.location.state ? history.location.state : {};\n  const { profile } = useContext(ProfileContext);\n  const [testData, setTestData] = useState({});\n  const [reportData, setReportData] = useState({\n    letterhead_type: 'default',\n    logo: { imagePreviewUrl: '' },\n    letterhead: {},\n    footer: {},\n    print_letterhead: false,\n    techniciansSign: { technician_name: '', technician_degree: '', print_technician_sign: false },\n    doctorsSign: { doctor_name: '', doctor_degree: '', print_doctor_sign: false },\n  });\n\n  const {patientId,labId,testIds} = reportState;\n  const getDataById = useCallback(async () => {\n    if (patientId && labId) {\n      const res = await fetchRequest({ url: `/lab/${labId}/patient_entry/${patientId}`, method: 'GET', isAuth: true });\n      if (res && res.status === 200) {\n        const { data } = await res.json();\n        if (data) {\n          const selectedTests = data.appointment_test.filter(test=> testIds.includes(test.uuid));\n          setTestData({ ...testData, ...reportState, tests: formatReportValues(data,selectedTests), patient: data.patient });\n        }\n        return data;\n      } else {\n        return;\n      }\n    }\n  }, [patientId, labId, testData, reportState]);\n\n  useEffect(() => {\n    getDataById();\n  }, []); \n\n  useEffect(() => {\n    setTestData(reportState);\n  }, [reportState]);\n\n  const getBranchDetails = useCallback(\n    url => {\n      (async () => {\n        const res = await fetchRequest({\n          url,\n          method: 'GET',\n          isAuth: true,\n        });\n        if (res && res.status === 200) {\n          const { data } = await res.json();\n          const {\n            technician_name,\n            technician_degree,\n            print_technician_sign,\n            technician_sign,\n            doctor_name,\n            doctor_degree,\n            doctor_sign,\n            print_doctor_sign,\n            logo,\n            footer,\n            print_letterhead,\n            letterhead,\n            letterhead_type,\n            email\n          } = data;\n          setReportData({\n            ...reportData,\n            ...data,\n            logo: { imgPath: logo },\n            footer: { imgPath: footer },\n            letterhead: { imgPath: letterhead, print_letterhead: print_letterhead },\n            print_letterhead: print_letterhead,\n            letterhead_type,\n            techniciansSign: {\n              technician_name,\n              technician_degree,\n              print_technician_sign: print_technician_sign,\n              imgPath: technician_sign,\n            },\n            doctorsSign: { imgPath: doctor_sign, doctor_name, doctor_degree, print_doctor_sign: print_doctor_sign },\n            email\n          });\n          return data;\n        }\n        return;\n      })();\n    },\n    [profile?.selectedRole, reportData], // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  useEffect(() => {\n    if (testData) {\n      let url = null;\n      if (loginAs === 'lab-admin' && testData.lab?.uuid) url = `/lab_group/${profile.selectedRole.uuid}/lab/${testData.lab.uuid}`;\n      else if (loginAs === 'lab') url = `/lab/${profile.selectedRole.uuid}`;\n      if (url) {\n        getBranchDetails(url);\n      }\n    }\n  }, [testData]); // eslint-disable-line react-hooks/exhaustive-deps\n  const [show, setHide] = useState(true);\n\n  const {\n    letterhead_type,\n    letterhead,\n    techniciansSign,\n    doctorsSign,\n    print_letterhead,\n    formatted_lab_name: labName,\n    print_doctor_sign,\n    print_technician_sign,\n  } = reportData;\n\n  const { tests, patient, formatted_created_at } = testData;\n\n  let tempLetterHead = print_letterhead,\n    tempDoctorSign = print_doctor_sign,\n    tempTechSign = print_technician_sign;\n\n  const handlePrint = () =>{\n    window.frames['my-frame'] && window.frames['my-frame'].print();\n  }\n\n  return (\n    <div className=\"report-card\">\n      <div className=\"row ml-5 mt-2 mb-4 align-items-center\">\n        <div className=\"col-10 d-flex report-preview-options\">\n          {letterhead_type === 'custom' && (\n            <CheckboxInput\n              className=\"mr-4\"\n              name=\"registerWithSameDetails\"\n              label={`${tempLetterHead ? 'Hide' : 'Show'} Letterhead and footer`}\n              checked={tempLetterHead ? letterhead.print_letterhead === false : letterhead.print_letterhead === true}\n              value={tempLetterHead ? letterhead.print_letterhead === false : letterhead.print_letterhead === true}\n              onClick={() =>\n                setReportData({\n                  ...reportData,\n                  letterhead: { ...letterhead, print_letterhead: letterhead.print_letterhead ? false : true },\n                })\n              }\n              blue\n            />\n          )}\n          {techniciansSign?.imgPath && (\n            <CheckboxInput\n              className=\"mr-4\"\n              name=\"registerWithSameDetails\"\n              label={`${tempTechSign ? 'Hide' : 'Show'} Technician’s Signature`}\n              checked={tempTechSign ? techniciansSign.print_technician_sign === false : techniciansSign.print_technician_sign === true}\n              value={tempTechSign ? techniciansSign.print_technician_sign === false : techniciansSign.print_technician_sign === true}\n              onClick={() =>\n                setReportData({\n                  ...reportData,\n                  techniciansSign: { ...techniciansSign, print_technician_sign: techniciansSign.print_technician_sign ? false : true },\n                })\n              }\n              blue\n            />\n          )}\n          {doctorsSign?.imgPath && (\n            <CheckboxInput\n              className=\"mr-5\"\n              name=\"registerWithSameDetails\"\n              label={`${tempDoctorSign ? 'Hide' : 'Show'} Doctor’s Signature`}\n              value={tempDoctorSign ? doctorsSign.print_doctor_sign === false : doctorsSign.print_doctor_sign === true}\n              checked={tempDoctorSign ? doctorsSign.print_doctor_sign === false : doctorsSign.print_doctor_sign === true}\n              onClick={() =>\n                setReportData({\n                  ...reportData,\n                  doctorsSign: { ...doctorsSign, print_doctor_sign: doctorsSign.print_doctor_sign ? false : true },\n                })\n              }\n              blue\n            />\n          )}\n          <div className=\"d-flex justify-content-end mb-3 ml-5\">\n          <ContainedButton lightBlue onClick={handlePrint}> \n            Print\n          </ContainedButton>\n          </div>\n        </div>\n        <BlobProvider document={ <PdfDocument data={{ tests, reportData, patient: { ...patient, formatted_created_at } }}></PdfDocument>}>\n            {({ url }) => {\n              return <iframe name=\"my-frame\" id=\"my-frame\" title=\"my-frame\" style={{ width: 595, height: 845 }} src={url}></iframe>\n            }}\n          </BlobProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientReport;\n"],"sourceRoot":""}